###########################
# Utopia On-Action Events #
###########################

namespace = utopia

### Withdrawal added when Unblissed
pop_event = {
	id = utopia.91
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		former_living_standard_type = living_standard_chemical_bliss
		last_changed_species_rights_type = living_standard
		NOT = {
			has_living_standard = {
				country = owner
				type = living_standard_chemical_bliss
			}
		}
	}

	immediate = {
		if = {
			limit = { has_modifier = withdrawal_symptoms }
			remove_modifier = withdrawal_symptoms
		}
		add_modifier = {
			modifier = withdrawal_symptoms
			days = 1800 # 5 years
		}
	}
}

# Hive Mind ruler gets Hive Mind trait to make them immortal
country_event = {
	id = utopia.6000
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		has_authority = auth_hive_mind
		FROM = { leader_class = ruler }
	}

	immediate = {
		from = {
			add_trait = leader_trait_ruler_hive_mind
		}
	}
}

# Hive Mind stops purging and sets rights for integrated species
country_event = {
	id = utopia.6001
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_authority = auth_hive_mind
		from = { has_trait = trait_hive_mind }
	}

	immediate = {
		from = { # modified species
			if = {
				limit = {
					NOT = {
						has_citizenship_type = {
							type = citizenship_full
							country = root
						}
					}
				}
				set_citizenship_type = {
					country = root
					type = citizenship_full
					cooldown = yes
				}
			}
		}
	}
}


#Purity government: purging pops yields unity
planet_event = {
	id = utopia.180
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		FROM = {
			OR = {
				has_valid_civic = civic_fanatic_purifiers
				#has_active_tradition = tr_purity_natural_order
			}
		}
		exists = fromfrom #crisis.202 can remove the last pop
		FROMFROM = {
			is_robot_pop = no
			NOT = {
				is_same_species = owner_species
			}
		}
		is_controlled_by = FROM
	}

	immediate = {
		FROM = {
			add_monthly_resource_mult = {
				resource = unity
				value = 1.5
				min = 5
				max = 100
			}
		}
	}
}

#Purity government: purging pops yields unity
planet_event = {
	id = utopia.181
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		FROM = {
			has_valid_civic = civic_hive_devouring_swarm
		}
		exists = fromfrom #crisis.202 can remove the last pop
		FROMFROM = {
			is_robot_pop = no
			NOT = {
				is_same_species = owner_species
			}
		}
		is_controlled_by = FROM
	}

	immediate = {
		FROM = {
			add_monthly_resource_mult = {
				resource = society_research
				value = 1
				min = 1
				max = 100
			}
		}
	}
}

### Withdrawal removed when Blissed
pop_event = {
	id = utopia.90
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_living_standard = {
			country = owner
			type = living_standard_chemical_bliss
		}
	}

	immediate = {
		if = {
			limit = { has_modifier = withdrawal_symptoms }
			remove_modifier = withdrawal_symptoms
		}
	}
}

### ASCENSION PERKS

# Engineered Evolution
country_event = {
	id = utopia.2700
	title = "utopia.2700.name"
	desc = "utopia.2700.desc"
	picture = GFX_evt_genetic_modification
	show_sound = event_engineered_evolution

	is_triggered_only = yes

	option = {
		name = EXCELLENT
	}
}

# Evolutionary Mastery
country_event = {
	id = utopia.2703
	title = "utopia.2703.name"
	desc = "utopia.2703.desc"
	picture = GFX_evt_genetic_modification
	show_sound = event_evolution_mastery

	is_triggered_only = yes

	option = {
		name = EXCELLENT
		TRIGGER = {
			OR = {
				NOT = { has_authority = auth_hive_mind }
				has_valid_civic = civic_hive_devouring_swarm
			}
		}
	}

	option = {
		name = EXCELLENT
		custom_tooltip = HIVE_ASSIMILATION_CITIZENSHIP_ENABLED
		trigger = {
			has_authority = auth_hive_mind
			NOT = { has_valid_civic = civic_hive_devouring_swarm }
		}
	}
}

# The Flesh is Weak
country_event = {
	id = utopia.2500
	title = "utopia.2500.name"
	desc = "utopia.2500.desc"
	picture = GFX_evt_cybernetics
	show_sound = event_laboratory_sound
	trackable = yes

	is_triggered_only = yes

	option = {
		name = "utopia.2500.a"
		hidden_effect = { save_event_target_as = flesh_weak_owner }
		capital_scope = {
			enable_special_project = {
				name = "FLESH_IS_WEAK_PROJECT"
				location = this
				owner = root
			}
		}
	}
}

# A Cybernetic Revolution
country_event = {
	id = utopia.2501
	title = "utopia.2501.name"
	desc = "utopia.2501.desc"
	picture = GFX_evt_cybernetics
	show_sound = event_the_flesh_is_weak

	is_triggered_only = yes

	immediate = {
		set_country_flag = flesh_weakened
		if = {
			limit = {
				any_owned_pop = {
					is_exact_same_species = root
				}
			}
			random_owned_pop = {
				limit = { is_exact_same_species = root }
				create_cybernetic_species_mod = yes
				species = { save_event_target_as = new_main_species }
			}
		}
		else = {
			random_owned_pop = {
				limit = { is_same_species = root }
				create_cybernetic_species_mod = yes
				species = { save_event_target_as = new_main_species }
			}
		}
		change_dominant_species = { species = event_target:new_main_species }

		while = {
			limit = {
				any_owned_pop = {
					is_sapient = yes
					species = {
						NOR = {
							has_trait = trait_cybernetic
							has_trait = trait_mechanical
							has_trait = trait_machine_unit
							has_trait = leader_trait_curator
						}
					}
				}
			}
			random_owned_pop = {
				limit = {
					is_sapient = yes
					species = {
						NOR = {
							has_trait = trait_cybernetic
							has_trait = trait_mechanical
							has_trait = trait_machine_unit
							has_trait = leader_trait_curator
						}
					}
				}
				create_cybernetic_species_mod = yes
			}
		}

		while = {
			limit = {
				any_owned_leader = {
					species = {
						NOR = {
							has_trait = trait_cybernetic
							has_trait = trait_mechanical
							has_trait = trait_machine_unit
							has_trait = leader_trait_curator
						}
					}
				}
			}
			random_owned_leader = {
				limit = {
					species = {
						NOR = {
							has_trait = trait_cybernetic
							has_trait = trait_mechanical
							has_trait = trait_machine_unit
							has_trait = leader_trait_curator
						}
					}
				}
				root.capital_scope = { #workaround to prevent main species from accidentally flipping
					create_pop = {
						species = prev
					}
					last_created_pop = {
						create_cybernetic_species_mod = yes
						kill_pop = yes
					}
				}
			}
		}

		while = {
			limit = {
				any_pool_leader = {
					species = {
						NOR = {
							has_trait = trait_cybernetic
							has_trait = trait_mechanical
							has_trait = trait_machine_unit
						}
					}
				}
			}
			random_pool_leader = {
				limit = {
					species = {
						NOR = {
							has_trait = trait_cybernetic
							has_trait = trait_mechanical
							has_trait = trait_machine_unit
						}
					}
				}
				root.capital_scope = { #workaround to prevent main species from accidentally flipping
					create_pop = {
						species = prev
					}
					last_created_pop = {
						create_cybernetic_species_mod = yes
						kill_pop = yes
					}
				}
			}
		}

		while = {
			limit = {
				any_owned_army = {
					exists = species
					species = {
						NOR = {
							has_trait = trait_cybernetic
							has_trait = trait_mechanical
							has_trait = trait_machine_unit
						}
					}
				}
			}
			random_owned_army = {
				limit = {
					exists = species
					species = {
						NOR = {
							has_trait = trait_cybernetic
							has_trait = trait_mechanical
							has_trait = trait_machine_unit
						}
					}
				}
				root.capital_scope = { #workaround to prevent main species from accidentally flipping
					create_pop = {
						species = prev.species
					}
					last_created_pop = {
						create_cybernetic_species_mod = yes
						kill_pop = yes
					}
				}
			}
		}

		every_owned_ship = {
			limit = {
				is_ship_class = shipclass_colonizer
				species = {
					NOR = {
						has_trait = trait_cybernetic
						has_trait = trait_mechanical
						has_trait = trait_machine_unit
					}
				}
			}
			root.capital_scope = { #workaround to prevent main species from accidentally flipping
				create_pop = {
					species = prev
				}
				last_created_pop = {
					create_cybernetic_species_mod = yes
					kill_pop = yes
				}
			}
		}

		every_owned_leader = {
			limit = {
				NOR = {
					has_trait = leader_trait_admiral_cyborg
					has_trait = leader_trait_general_cyborg
					has_trait = leader_trait_governor_cyborg
					has_trait = leader_trait_scientist_cyborg
					has_trait = leader_trait_ruler_cyborg
				}
			}
			add_leader_traits_after_modification = yes
			remove_leader_traits_after_modification = yes
		}

		every_pool_leader = {
			limit = {
				NOR = {
					has_trait = leader_trait_admiral_cyborg
					has_trait = leader_trait_general_cyborg
					has_trait = leader_trait_governor_cyborg
					has_trait = leader_trait_scientist_cyborg
					has_trait = leader_trait_ruler_cyborg
				}
			}
			add_leader_traits_after_modification = yes
			remove_leader_traits_after_modification = yes
		}

		observer_event = { id = observer.55 }
		every_country = {
			limit = {
				is_ai = no
				NOT = { is_same_value = root }
				has_communications = root
			}
			country_event = { id = utopia.2505 days = 5 }
		}
	}

	option = {
		name = "utopia.2501.a"
		custom_tooltip = CYBORG_ASSIMILATION_CITIZENSHIP_ENABLED
	}
}

# Notification for Other Nations
country_event = {
	id = utopia.2505
	title = "utopia.2505.name"
	desc = {
		text = utopia.2505.1.desc
		trigger = {
			NOR = {
				has_ethic = ethic_fanatic_spiritualist
				has_ethic = ethic_spiritualist
			}
		}
	}
	desc = {
		text = utopia.2505.2.desc
		trigger = {
			OR = {
				has_ethic = ethic_fanatic_spiritualist
				has_ethic = ethic_spiritualist
			}
		}
	}
	picture = GFX_evt_cybernetics
	show_sound = event_the_flesh_is_weak

	is_triggered_only = yes

	option = {
		name = "DISCONCERTING"
		trigger = {
			NOR = {
				has_ethic = ethic_fanatic_spiritualist
				has_ethic = ethic_spiritualist
			}
		}
	}
	option = {
		name = "utopia.2505.b"
		trigger = {
			OR = {
				has_ethic = ethic_fanatic_spiritualist
				has_ethic = ethic_spiritualist
			}
		}
	}
}

# Handle leader traits after species modification
country_event = {
	id = utopia.2508
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		every_owned_leader = {
			add_leader_traits_after_modification = yes
			remove_leader_traits_after_modification = yes
		}

		every_pool_leader = {
			add_leader_traits_after_modification = yes
			remove_leader_traits_after_modification = yes
		}
	}
}

# New Leaders Get Erudite Trait
country_event = {
	id = utopia.2509
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		from = {
			species = {
				has_trait = trait_erudite
				NOR = {
					has_trait = trait_machine_unit
					has_trait = trait_mechanical
				}
			}
			NOR = {
				has_trait = leader_trait_admiral_psionic
				has_trait = leader_trait_general_psionic
				has_trait = leader_trait_governor_psionic
				has_trait = leader_trait_scientist_psionic
				has_trait = leader_trait_ruler_psionic
			}
		}
	}

	immediate = {
		from = {
			if = {
				limit = { leader_class = admiral }
				add_trait = leader_trait_admiral_erudite
				add_ruler_trait = leader_trait_ruler_erudite
				break = yes
			}
			if = {
				limit = { leader_class = general }
				add_trait = leader_trait_general_erudite
				add_ruler_trait = leader_trait_ruler_erudite
				break = yes
			}
			if = {
				limit = { leader_class = governor }
				add_trait = leader_trait_governor_erudite
				add_ruler_trait = leader_trait_ruler_erudite
				break = yes
			}
			if = {
				limit = { leader_class = scientist }
				add_trait = leader_trait_scientist_erudite
				add_ruler_trait = leader_trait_ruler_erudite
				break = yes
			}
			if = {
				limit = { leader_class = ruler }
				add_trait = leader_trait_ruler_erudite
				add_ruler_trait = leader_trait_ruler_erudite
				break = yes
			}
		}
	}
}

# New Leaders Get Cyborg Trait
country_event = {
	id = utopia.2510
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		from = {
			species = { has_trait = trait_cybernetic }
		}
	}

	immediate = {
		from = {
			if = {
				limit = { leader_class = admiral }
				add_trait = leader_trait_admiral_cyborg
				add_ruler_trait = leader_trait_ruler_cyborg
				break = yes
			}
			if = {
				limit = { leader_class = general }
				add_trait = leader_trait_general_cyborg
				add_ruler_trait = leader_trait_ruler_cyborg
				break = yes
			}
			if = {
				limit = { leader_class = governor }
				add_trait = leader_trait_governor_cyborg
				add_ruler_trait = leader_trait_ruler_cyborg
				break = yes
			}
			if = {
				limit = { leader_class = scientist }
				add_trait = leader_trait_scientist_cyborg
				add_ruler_trait = leader_trait_ruler_cyborg
				break = yes
			}
			if = {
				limit = { leader_class = ruler }
				add_trait = leader_trait_ruler_cyborg
				add_ruler_trait = leader_trait_ruler_cyborg
				break = yes
			}
		}
	}
}

# Ruler gets normal class trait if one hasn't been assigned
country_event = {
	id = utopia.2511
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		from = {
			species = { has_trait = trait_cybernetic }
			NOR = {
				has_trait = leader_trait_admiral_cyborg
				has_trait = leader_trait_general_cyborg
				has_trait = leader_trait_governor_cyborg
				has_trait = leader_trait_scientist_cyborg
			}
		}
	}

	immediate = {
		from = {
			if = {
				limit = { leader_class = admiral }
				add_trait = leader_trait_admiral_cyborg
				break = yes
			}
			if = {
				limit = { leader_class = general }
				add_trait = leader_trait_general_cyborg
				break = yes
			}
			if = {
				limit = { leader_class = governor }
				add_trait = leader_trait_governor_cyborg
				break = yes
			}
			if = {
				limit = { leader_class = scientist }
				add_trait = leader_trait_scientist_cyborg
				break = yes
			}
		}
	}
}

# Synthetic Evolution
country_event = {
	id = utopia.2550
	title = "utopia.2550.name"
	desc = "utopia.2550.desc"
	picture = GFX_evt_robot_assembly_plant
	show_sound = event_laboratory_sound
	trackable = yes

	is_triggered_only = yes

	option = {
		name = "utopia.2550.a"
		hidden_effect = { save_event_target_as = synth_evo_owner }
		capital_scope = {
			enable_special_project = {
				name = "SYNTHETIC_EVOLUTION_PROJECT"
				location = this
				owner = root
			}
		}
	}
}

# The Synthetic Age
country_event = {
	id = utopia.2551
	title = "utopia.2551.name"
	desc = "utopia.2551.desc"
	picture = GFX_evt_robot_assembly_plant
	show_sound = event_synthetic_evolution

	is_triggered_only = yes

	immediate = {
		set_country_flag = synthetic_empire
		if = {
			limit = {
				has_policy_flag = robots_outlawed
			}
			set_policy = {
				policy = robot_pop_policy
				option = robot_pops_allowed
				cooldown = yes
			}
		}
		if = {
			limit = {
				OR = {
					has_policy_flag = ai_servitude
					has_policy_flag = ai_outlawed
				}
			}
			set_policy = {
				policy = artificial_intelligence_policy
				option = ai_full_rights
				cooldown = yes
			}
		}
		if = {
			limit = {
				OR = {
					is_active_resolution = "resolution_divinity_silence_the_soulless"
					is_active_resolution = "resolution_divinity_a_defined_purpose"
				}
			}
			owner = {
				set_timed_country_flag = { flag = resolution_breached_synthetic_evolution days = 3600 }
			}
		}
		give_technology = { tech = tech_bio_reactor message = no }

		create_species = {
			is_mod = yes
			name = this
			namelist = this
			plural = this
			class = "ROBOT"
			portrait = "default_robot"
			traits = {
				trait = "trait_mechanical"
			}

			effect = {
				if = {
					limit = { host_has_dlc = "Synthetic Dawn Story Pack" }
					prev = {
						switch = {
							trigger = is_species_class
							HUM = { prev = { change_species_characteristics = { portrait = "sd_hum_robot" } } }
							MAM = { prev = { change_species_characteristics = { portrait = "sd_mam_robot" } } }
							REP = { prev = { change_species_characteristics = { portrait = "sd_rep_robot" } } }
							AVI = { prev = { change_species_characteristics = { portrait = "sd_avi_robot" } } }
							ART = { prev = { change_species_characteristics = { portrait = "sd_art_robot" } } }
							MOL = { prev = { change_species_characteristics = { portrait = "sd_mol_robot" } } }
							FUN = { prev = { change_species_characteristics = { portrait = "sd_fun_robot" } } }
							PLANT = { prev = { change_species_characteristics = { portrait = "sd_pla_robot" } } }
							LITHOID = { prev = { change_species_characteristics = { portrait = "lith_machine" } } }
							NECROID = { prev = { change_species_characteristics = { portrait = "nec_machine" } } }
							AQUATIC = { prev = { change_species_characteristics = { portrait = "aqu_machine" } } }
						}
					}
				}

				rename_species = {
					prompt_country = root #If targeted country is a player they will get a popup asking for a name/plural/adjective combo. Otherwise the species will get a random name from the specified name_list
					name_list = ascension_list
				}

				save_event_target_as = new_robotic_species
			}
		}
		every_owned_pop = {
			limit = {
				species = {
					has_trait = trait_cybernetic
				}
			}
			change_species = event_target:new_robotic_species
		}

		every_owned_ship = {
			limit = {
				is_ship_class = shipclass_colonizer
				species = {
					has_trait = trait_cybernetic
				}
			}
			change_species = event_target:new_robotic_species
		}

		every_owned_army = {
			limit = {
				exists = species
				exists = planet
				species = {
					has_trait = trait_cybernetic
				}
				army_type = assault_army
			}
			modify_army = {
				name = random
				type = "robotic_army"
				species = event_target:new_robotic_species
			}
		}

		every_owned_army = {
			limit = {
				exists = species
				exists = planet
				species = {
					has_trait = trait_cybernetic
				}
				army_type = defense_army
			}
			modify_army = {
				name = random
				type = "robotic_defense_army"
				species = event_target:new_robotic_species
			}
		}

		every_owned_leader = {
			limit = {
				OR = {
					has_trait = leader_trait_admiral_cyborg
					has_trait = leader_trait_general_cyborg
					has_trait = leader_trait_governor_cyborg
					has_trait = leader_trait_scientist_cyborg
					has_trait = leader_trait_ruler_cyborg
					has_trait = leader_trait_admiral_synthetic
					has_trait = leader_trait_ruler_synthetic
					has_trait = leader_trait_general_synthetic
					has_trait = leader_trait_governor_synthetic
					has_trait = leader_trait_scientist_synthetic
				}
			}
			change_species = event_target:new_robotic_species
			change_leader_portrait = species
		}
		every_pool_leader = {
			limit = {
				OR = {
					has_trait = leader_trait_admiral_cyborg
					has_trait = leader_trait_general_cyborg
					has_trait = leader_trait_governor_cyborg
					has_trait = leader_trait_scientist_cyborg
					has_trait = leader_trait_ruler_cyborg
					has_trait = leader_trait_admiral_synthetic
					has_trait = leader_trait_ruler_synthetic
					has_trait = leader_trait_general_synthetic
					has_trait = leader_trait_governor_synthetic
					has_trait = leader_trait_scientist_synthetic
				}
			}
			change_species = event_target:new_robotic_species
			change_leader_portrait = species
		}
		change_dominant_species = { species = event_target:new_robotic_species }

		every_owned_leader = {
			limit = {
				NOR = {
					has_trait = leader_trait_admiral_synthetic
					has_trait = leader_trait_general_synthetic
					has_trait = leader_trait_governor_synthetic
					has_trait = leader_trait_scientist_synthetic
					has_trait = leader_trait_ruler_synthetic
				}
			}
			add_leader_traits_after_modification = yes
			remove_leader_traits_after_modification = yes
		}
		every_pool_leader = {
			limit = {
				NOR = {
					has_trait = leader_trait_admiral_synthetic
					has_trait = leader_trait_general_synthetic
					has_trait = leader_trait_governor_synthetic
					has_trait = leader_trait_scientist_synthetic
					has_trait = leader_trait_ruler_synthetic
				}
			}
			add_leader_traits_after_modification = yes
			remove_leader_traits_after_modification = yes
		}

		observer_event = { id = observer.4 }
		every_country = {
			limit = {
				is_ai = no
				NOT = { is_same_value = root }
				has_communications = root
			}
			country_event = { id = utopia.2555 days = 5 }
			country_event = { id = utopia.2556 days = 10 }
		}
		if = {
			limit = {
				any_country = {
					OR = {
						is_country_type = fallen_empire
						is_country_type = awakened_fallen_empire
					}
					has_ethic = ethic_fanatic_spiritualist
					has_communications = root
					NOT = { is_same_value = root }
				}
			}
			random_country = {
				limit = {
					OR = {
						is_country_type = fallen_empire
						is_country_type = awakened_fallen_empire
					}
					has_ethic = ethic_fanatic_spiritualist
					has_communications = root
					NOT = { is_same_value = root }
				}
				country_event = { id = utopia.2557 days = 15 }
			}
		}
		else = {
			random_country = {
				limit = {
					is_country_type = default
					has_ethic = ethic_fanatic_spiritualist
					has_communications = root
					NOT = { is_same_value = root }
				}
				country_event = { id = utopia.2557 days = 15 }
			}
		}

		ROOT = {
			set_country_flag = synthetic_age
		}
	}

	option = {
		name = "utopia.2551.a"
		custom_tooltip = SYNTH_ASSIMILATION_CITIZENSHIP_ENABLED
	}
}

# Notification for Other Nations
country_event = {
	id = utopia.2555
	title = "utopia.2550.name"
	desc = {
		text = utopia.2555.1.desc
		trigger = {
			NOR = {
				has_ethic = ethic_fanatic_spiritualist
				has_ethic = ethic_spiritualist
			}
		}
	}
	desc = {
		text = utopia.2555.2.desc
		trigger = {
			OR = {
				has_ethic = ethic_fanatic_spiritualist
				has_ethic = ethic_spiritualist
			}
		}
	}
	picture = GFX_evt_cybernetics
	show_sound = event_synthetic_evolution

	is_triggered_only = yes

	option = {
		name = "utopia.2555.a"
		trigger = {
			NOR = {
				has_ethic = ethic_fanatic_spiritualist
				has_ethic = ethic_spiritualist
			}
		}
	}
	option = {
		name = "utopia.2555.b"
		trigger = {
			OR = {
				has_ethic = ethic_fanatic_spiritualist
				has_ethic = ethic_spiritualist
			}
		}
	}
}

# Diplomatic Announcement
country_event = {
	id = utopia.2556
	title = TRANSMISSION
	desc = "utopia.2556.desc"

	diplomatic = yes

	is_triggered_only = yes

	picture_event_data = {
		portrait = from
		room = from.ruler
	}

	option = {
		name = utopia.2556.a
		trigger = {
			OR = {
				has_ethic = ethic_fanatic_materialist
				has_ethic = ethic_materialist
			}
			NOT = { is_at_war_with = from }
		}
	}
	option = {
		name = utopia.2556.b
		trigger = {
			OR = {
				has_ethic = ethic_fanatic_spiritualist
				has_ethic = ethic_spiritualist
			}
			NOT = { is_at_war_with = from }
		}
	}
	option = {
		name = utopia.2556.c
		trigger = {
			is_at_war_with = from
		}
	}
	option = {
		name = utopia.2556.d
		trigger = {
			NOR = {
				is_at_war_with = from
				has_ethic = ethic_fanatic_materialist
				has_ethic = ethic_materialist
				has_ethic = ethic_fanatic_spiritualist
				has_ethic = ethic_spiritualist
			}
		}
	}
}

# Diplomatic Response (HIDDEN)
country_event = {
	id = utopia.2557
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		from = {
			country_event = { id = utopia.2558 }
		}
	}
}

# Diplomatic Response
country_event = {
	id = utopia.2558
	title = TRANSMISSION
	desc = "utopia.2558.desc"

	diplomatic = yes

	is_triggered_only = yes

	picture_event_data = {
		portrait = from
		room = from.ruler
	}

	option = {
		name = utopia.2558.a
	}
}

# New Leaders Get Synthetic Trait (Should also work on "normal" Synthetics)
country_event = {
	id = utopia.2560
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		from = {
			species = { has_trait = trait_mechanical }
		}
	}

	immediate = {
		from = {
			if = {
				limit = { leader_class = admiral }
				add_trait = leader_trait_admiral_synthetic
				add_ruler_trait = leader_trait_ruler_synthetic
				break = yes
			}
			if = {
				limit = { leader_class = general }
				add_trait = leader_trait_general_synthetic
				add_ruler_trait = leader_trait_ruler_synthetic
				break = yes
			}
			if = {
				limit = { leader_class = governor }
				add_trait = leader_trait_governor_synthetic
				add_ruler_trait = leader_trait_ruler_synthetic
				break = yes
			}
			if = {
				limit = { leader_class = scientist }
				add_trait = leader_trait_scientist_synthetic
				add_ruler_trait = leader_trait_ruler_synthetic
				break = yes
			}
			if = {
				limit = { leader_class = ruler }
				add_trait = leader_trait_ruler_synthetic
				add_ruler_trait = leader_trait_ruler_synthetic
				break = yes
			}
		}
	}
}

# Ruler gets normal class trait if one hasn't been assigned
country_event = {
	id = utopia.2561
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		from = {
			species = { has_trait = trait_mechanical }
			NOR = {
				has_trait = leader_trait_admiral_synthetic
				has_trait = leader_trait_general_synthetic
				has_trait = leader_trait_governor_synthetic
				has_trait = leader_trait_scientist_synthetic
			}
		}
	}

	immediate = {
		from = {
			if = {
				limit = { leader_class = admiral }
				add_trait = leader_trait_admiral_synthetic
				remove_trait = leader_trait_admiral_cyborg
				break = yes
			}
			if = {
				limit = { leader_class = general }
				add_trait = leader_trait_general_synthetic
				remove_trait = leader_trait_general_cyborg
				break = yes
			}
			if = {
				limit = { leader_class = governor }
				add_trait = leader_trait_governor_synthetic
				remove_trait = leader_trait_governor_cyborg
				break = yes
			}
			if = {
				limit = { leader_class = scientist }
				add_trait = leader_trait_scientist_synthetic
				remove_trait = leader_trait_scientist_cyborg
				break = yes
			}
		}
	}
}

# Mind over Matter
country_event = {
	id = utopia.2600
	title = "utopia.2600.name"
	desc = "utopia.2600.desc"
	picture = GFX_evt_psionics
	show_sound = event_mind_over_matter

	is_triggered_only = yes

	immediate = {
		every_owned_pop = {
			limit = {
				is_same_species = root
				NOT = { species = { has_trait = trait_latent_psionic } }
			}
			modify_species = {
				species = this
				add_trait = trait_latent_psionic
			}
			species = { save_event_target_as = psionic_species }
		}
		change_dominant_species = { species = event_target:psionic_species change_all = yes }
		observer_event = { id = observer.5 }
		every_country = {
			limit = {
				is_ai = no
				has_communications = root
				NOT = { is_same_value = root }
			}
			country_event = { id = utopia.2602 }
		}
	}

	option = {
		name = "utopia.2600.a"
		tooltip = {
			modify_species = {
				species = this
				add_trait = trait_latent_psionic
			}
		}
		custom_tooltip = ALLOW_PSI_CORPS
		custom_tooltip = ALLOW_PSI_ARMIES
	}
}

# New Leaders Get Psionic Trait (Latent Psionic)
country_event = {
	id = utopia.2601
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		from = {
			species = {
				has_trait = trait_latent_psionic
				NOR = {
					has_trait = trait_cybernetic
					has_trait = trait_machine_unit
					has_trait = trait_mechanical
				}
			}
		}
	}

	immediate = {
		from = {
			if = {
				limit = { leader_class = admiral }
				add_trait = leader_trait_admiral_psionic
				add_ruler_trait = leader_trait_ruler_psionic
				break = yes
			}
			if = {
				limit = { leader_class = general }
				add_trait = leader_trait_general_psionic
				add_ruler_trait = leader_trait_ruler_psionic
				break = yes
			}
			if = {
				limit = { leader_class = governor }
				add_trait = leader_trait_governor_psionic
				add_ruler_trait = leader_trait_ruler_psionic
				break = yes
			}
			if = {
				limit = { leader_class = scientist }
				add_trait = leader_trait_scientist_psionic
				add_ruler_trait = leader_trait_ruler_psionic
				break = yes
			}
			if = {
				limit = { leader_class = ruler }
				add_trait = leader_trait_ruler_psionic
				add_ruler_trait = leader_trait_ruler_psionic
				break = yes
			}
		}
	}
}

# Notification for other empires
country_event = {
	id = utopia.2602
	title = "utopia.2602.name"
	desc = {
		text = utopia.2602.1.desc
		trigger = {
			NOR = {
				any_owned_pop = { is_same_species = from }
				any_owned_leader = { is_same_species = from }
			}
		}
	}
	desc = {
		text = utopia.2602.2.desc
		trigger = {
			OR = {
				any_owned_pop = { is_same_species = from }
				any_owned_leader = { is_same_species = from }
			}
		}
	}
	picture = GFX_evt_psionics
	show_sound = event_laboratory_sound
	location = from.capital_scope

	is_triggered_only = yes

	option = {
		name = "utopia.2602.a"
		trigger = {
			NOR = {
				has_ethic = ethic_materialist
				has_ethic = ethic_fanatic_materialist
				is_at_war_with = from
				species = { has_trait = trait_psionic }
			}
		}
	}
	option = {
		name = "utopia.2602.b"
		trigger = {
			OR = {
				has_ethic = ethic_materialist
				has_ethic = ethic_fanatic_materialist
			}
			NOR = {
				is_at_war_with = from
				species = { has_trait = trait_psionic }
			}
		}
	}
	option = {
		name = "utopia.2602.c"
		trigger = {
			is_at_war_with = from
			NOT = { species = { has_trait = trait_psionic } }
		}
	}
	option = {
		name = "utopia.2602.d"
		trigger = {
			species = { has_trait = trait_psionic }
		}
	}
}

# Psychic Identified
country_event = {
	id = utopia.2605
	title = "utopia.2605.name"
	desc = "utopia.2605.desc"
	picture = GFX_evt_psionics
	show_sound = event_psionic

	trigger = {
		owner_species = {
			has_trait = trait_latent_psionic
			NOR = {
				has_trait = trait_cybernetic
				has_trait = trait_machine_unit
				has_trait = trait_mechanical
			}
		}
		any_owned_leader = {
			is_same_species = owner_species
			NOT = {
				OR = {
					has_trait = leader_trait_admiral_psionic
					has_trait = leader_trait_general_psionic
					has_trait = leader_trait_governor_psionic
					has_trait = leader_trait_scientist_psionic
					has_trait = leader_trait_ruler_psionic
					has_trait = leader_trait_admiral_chosen
					has_trait = leader_trait_general_chosen
					has_trait = leader_trait_governor_chosen
					has_trait = leader_trait_scientist_chosen
					has_trait = leader_trait_ruler_chosen
				}
			}
		}
	}

	mean_time_to_happen = {
		months = 220
	}

	immediate = {
		random_owned_leader = {
			limit = {
				is_same_species = owner_species
				NOT = {
					OR = {
						has_trait = leader_trait_admiral_psionic
						has_trait = leader_trait_general_psionic
						has_trait = leader_trait_governor_psionic
						has_trait = leader_trait_scientist_psionic
						has_trait = leader_trait_ruler_psionic
						has_trait = leader_trait_admiral_chosen
						has_trait = leader_trait_general_chosen
						has_trait = leader_trait_governor_chosen
						has_trait = leader_trait_scientist_chosen
						has_trait = leader_trait_ruler_chosen
					}
				}
			}
			save_event_target_as = psionic_leader
		}
	}

	option = {
		name = "utopia.2605.a"
		event_target:psionic_leader = {
			if = {
				limit = { leader_class = admiral }
				add_trait = leader_trait_admiral_psionic
				hidden_effect = { add_ruler_trait = leader_trait_ruler_psionic }
				break = yes
			}
			if = {
				limit = { leader_class = general }
				add_trait = leader_trait_general_psionic
				hidden_effect = { add_ruler_trait = leader_trait_ruler_psionic }
				break = yes
			}
			if = {
				limit = { leader_class = governor }
				add_trait = leader_trait_governor_psionic
				hidden_effect = { add_ruler_trait = leader_trait_ruler_psionic }
				break = yes
			}
			if = {
				limit = { leader_class = scientist }
				add_trait = leader_trait_scientist_psionic
				hidden_effect = { add_ruler_trait = leader_trait_ruler_psionic }
				break = yes
			}
			if = {
				limit = { leader_class = ruler }
				hidden_effect = { add_trait = leader_trait_ruler_psionic }
				add_ruler_trait = leader_trait_ruler_psionic
				break = yes
			}
		}
	}
}

# Transcendence
country_event = {
	id = utopia.2650
	title = "utopia.2650.name"
	desc = "utopia.2650.desc"
	picture = GFX_evt_psionics
	show_sound = event_the_great_awakening

	is_triggered_only = yes

	immediate = {
		every_owned_pop = {
			limit = {
				is_same_species = root
				has_trait = trait_latent_psionic
			}
			modify_species = {
				species = this
				remove_trait = trait_latent_psionic
				add_trait = trait_psionic
				effect = {
					save_event_target_as = psionic_species
				}
			}
		}
		change_dominant_species = { species = event_target:psionic_species change_all = yes }
	}
	option = {
		name = "utopia.2650.a"
		hidden_effect = {
			every_country = {
				limit = {
					OR = {
						is_country_type = default
						is_country_type = fallen_empire
						is_country_type = awakened_fallen_empire
					}
				}
				every_owned_leader = {
					limit = {
						is_same_species = root
						#species = {
						#	has_trait = trait_psionic
						#	is_same_value = event_target:psionic_species
						#}
						NOR = {
							has_trait =	leader_trait_admiral_psionic
							has_trait =	leader_trait_general_psionic
							has_trait =	leader_trait_governor_psionic
							has_trait =	leader_trait_scientist_psionic
							has_trait =	leader_trait_ruler_psionic
						}
					}
					add_leader_traits_after_modification = yes
					remove_leader_traits_after_modification = yes
				}
				every_pool_leader = {
					limit = {
						is_same_species = root
						#species = {
						#	has_trait = trait_psionic
						#	is_same_value = event_target:psionic_species
						#}
						NOR = {
							has_trait = leader_trait_admiral_psionic
							has_trait = leader_trait_general_psionic
							has_trait = leader_trait_governor_psionic
							has_trait = leader_trait_scientist_psionic
							has_trait = leader_trait_ruler_psionic
						}
					}
					add_leader_traits_after_modification = yes
					remove_leader_traits_after_modification = yes
				}
			}
			observer_event = { id = observer.6 }
			every_country = {
				limit = {
					is_ai = no
					has_communications = root
					NOT = { is_same_value = root }
				}
				country_event = { id = utopia.2652 }
			}
			country_event = { id = utopia.2655 days = 30 random = 20 }
		}
	}
}

# New Leaders Get Psionic Trait
country_event = {
	id = utopia.2651
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		from = {
			species = {
				has_trait = trait_psionic
				NOR = {
					has_trait = trait_machine_unit
					has_trait = trait_mechanical
				}
			}
		}
	}

	immediate = {
		from = {
			if = {
				limit = { leader_class = admiral }
				add_trait = leader_trait_admiral_psionic
				add_ruler_trait = leader_trait_ruler_psionic
				break = yes
			}
			if = {
				limit = { leader_class = general }
				add_trait = leader_trait_general_psionic
				add_ruler_trait = leader_trait_ruler_psionic
				break = yes
			}
			if = {
				limit = { leader_class = governor }
				add_trait = leader_trait_governor_psionic
				add_ruler_trait = leader_trait_ruler_psionic
				break = yes
			}
			if = {
				limit = { leader_class = scientist }
				add_trait = leader_trait_scientist_psionic
				add_ruler_trait = leader_trait_ruler_psionic
				break = yes
			}
			if = {
				limit = { leader_class = ruler }
				add_trait = leader_trait_ruler_psionic
				add_ruler_trait = leader_trait_ruler_psionic
				break = yes
			}
		}
	}
}

# Notification for other empires
country_event = {
	id = utopia.2652
	title = "utopia.2652.name"
	desc = "utopia.2652.desc"
	picture = GFX_evt_psionics
	show_sound = event_the_great_awakening

	is_triggered_only = yes

	option = {
		name = AMAZING
		trigger = {
			NOR = {
				has_ethic = ethic_materialist
				has_ethic = ethic_fanatic_materialist
				is_at_war_with = from
				species = { has_trait = trait_psionic }
			}
		}
	}
	option = {
		name = "utopia.2652.b"
		trigger = {
			OR = {
				has_ethic = ethic_materialist
				has_ethic = ethic_fanatic_materialist
			}
			NOR = {
				is_at_war_with = from
				species = { has_trait = trait_psionic }
			}
		}
	}
	option = {
		name = "utopia.2652.c"
		trigger = {
			is_at_war_with = from
			NOT = { species = { has_trait = trait_psionic } }
		}
	}
	option = {
		name = "utopia.2652.d"
		trigger = {
			species = { has_trait = trait_psionic }
		}
	}
}

# Ruler gets normal class trait if one hasn't been assigned
country_event = {
	id = utopia.2653
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		from = {
			OR = {
				species = { has_trait = trait_psionic }
				has_ruler_trait = leader_trait_ruler_psionic
				has_ruler_trait = leader_trait_ruler_chosen
				has_leader_flag = leader_trait_chosen
			}
			OR = {
				has_ruler_trait = leader_trait_ruler_chosen
				has_leader_flag = leader_trait_chosen
				NOR = {
					has_trait = leader_trait_admiral_psionic
					has_trait = leader_trait_general_psionic
					has_trait = leader_trait_governor_psionic
					has_trait = leader_trait_scientist_psionic
				}
			}
			NOR = {
				has_trait = leader_trait_admiral_chosen
				has_trait = leader_trait_general_chosen
				has_trait = leader_trait_governor_chosen
				has_trait = leader_trait_scientist_chosen
			}
		}
	}

	immediate = {
		from = {
			if = {
				limit = {
					OR = {
						has_ruler_trait = leader_trait_ruler_chosen
						has_leader_flag = leader_trait_chosen
					}
				}
				if = {
					limit = { leader_class = admiral }
					add_trait = leader_trait_admiral_chosen
					remove_trait = leader_trait_admiral_psionic
					break = yes
				}
				if = {
					limit = { leader_class = general }
					add_trait = leader_trait_general_chosen
					remove_trait = leader_trait_general_psionic
					break = yes
				}
				if = {
					limit = { leader_class = governor }
					add_trait = leader_trait_governor_chosen
					remove_trait = leader_trait_governor_psionic
					break = yes
				}
				if = {
					limit = { leader_class = scientist }
					add_trait = leader_trait_scientist_chosen
					remove_trait = leader_trait_scientist_psionic
					break = yes
				}
			}
			else = {
				if = {
					limit = { leader_class = admiral }
					add_trait = leader_trait_admiral_psionic
					break = yes
				}
				if = {
					limit = { leader_class = general }
					add_trait = leader_trait_general_psionic
					break = yes
				}
				if = {
					limit = { leader_class = governor }
					add_trait = leader_trait_governor_psionic
					break = yes
				}
				if = {
					limit = { leader_class = scientist }
					add_trait = leader_trait_scientist_psionic
					break = yes
				}
			}
		}
	}
}

# The Shroud
country_event = {
	id = utopia.2655
	title = "utopia.2655.name"
	desc = "utopia.2655.desc"
	picture = GFX_evt_psionics
	show_sound = event_psionic
	trackable = yes

	is_triggered_only = yes

	option = {
		name = "utopia.2655.a"
		hidden_effect = { save_event_target_as = breach_shroud_owner }
		capital_scope = {
			enable_special_project = {
				name = "BREACHING_SHROUD_PROJECT"
				location = this
				owner = root
			}
		}
	}
}

# The Seance
country_event = {
	id = utopia.2656
	title = "utopia.2656.name"
	desc = "utopia.2656.desc"
	picture = GFX_evt_psionics
	show_sound = event_psionic

	is_triggered_only = yes

	immediate = {
		random_country = {
			limit = { is_country_type = shroud }
			save_event_target_as = the_shroud
		}
	}

	option = {
		name = "utopia.2656.a"
		establish_communications_no_message = event_target:the_shroud
		hidden_effect = {
			set_country_flag = shroud_intro
			country_event = { id = utopia.3000 }
		}
	}
}

# planet_event = {
#	id = utopia.2657
#	hide_window = yes
#
#	is_triggered_only = yes
#
#	trigger = {
#		is_planet_class = pc_habitat
#		owner = { has_ascension_perk = ap_voidborn }
#		NOT = { has_modifier = master_builders_habitats }
#	}
#
#	immediate = {
#		add_modifier = {
#			modifier = master_builders_habitats
#			days = -1
#		}
#	}
#}

# Voidborn - Habitats
# event = {
#	id = utopia.2660
#	hide_window = yes
#	is_triggered_only = yes
#
#	trigger = {
#		any_playable_country = { has_ascension_perk = ap_voidborn }
#	}
#
#	immediate = {
#		every_playable_country = {
#			limit = {
#				has_ascension_perk = ap_voidborn
#				any_owned_planet = {
#					is_planet_class = pc_habitat
#					NOT = { has_modifier = master_builders_habitats }
#				}
#			}
#			every_owned_planet = {
#				limit = {
#					is_planet_class = pc_habitat
#					NOT = { has_modifier = master_builders_habitats }
#				}
#				add_modifier = {
#					modifier = master_builders_habitats
#					days = -1
#				}
#			}
#		}
#	}
#}
