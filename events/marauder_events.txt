############################
#
# Marauder Events
#
# Written by Henrik Thyrwall
#
############################

namespace = marauder

### Marauder Communication Spread
country_event = {
	id = marauder.2
	hide_window = yes

	trigger = {
		is_country_type = dormant_marauders
		any_relation = {
			is_country_type = default
			has_communications = root
			any_relation = {
				is_country_type = default
				NOT = { has_communications = ROOT }
			}
		}
	}

	mean_time_to_happen = {
		months = 160
	}

	immediate = {
		random_relation = {
			limit = {
				has_communications = root
				is_country_type = default
				any_relation = {
					is_country_type = default
					NOT = { has_communications = ROOT }
				}
			}
			random_relation = {
				limit = {
					is_country_type = default
					NOT = { has_communications = ROOT }
				}
				root = { establish_communications_no_message = prev }
				country_event = { id = marauder.3}
			}
		}
	}
}

# Marauder Exiles Encountered
country_event = {
	id = marauder.3
	title = "marauder.3.name"
	desc = "marauder.3.desc"
	picture = GFX_evt_pirate_armada
	show_sound = event_radio_chatter
	location = event_target:marauder_system

	is_triggered_only = yes

	immediate = {
		from = { save_event_target_as = encountered_marauder }
		if = {
			limit = {
				from = { has_country_flag = marauder_1 }
			}
			random_system = {
				limit = { has_star_flag = marauder_capital_1 }
				save_event_target_as = marauder_system
			}
			break = yes
		}
		if = {
			limit = {
				from = { has_country_flag = marauder_2 }
			}
			random_system = {
				limit = { has_star_flag = marauder_capital_2 }
				save_event_target_as = marauder_system
			}
			break = yes
		}
		if = {
			limit = {
				from = { has_country_flag = marauder_3 }
			}
			random_system = {
				limit = { has_star_flag = marauder_capital_3 }
				save_event_target_as = marauder_system
			}
		}
	}

	option = {
		name = marauder.1.a
		hidden_effect = {
			country_event = { id = marauder.15 }
		}
	}
}

### Marauders Destroyed (HIDDEN)
country_event = {
	id = marauder.4
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		is_country_type = dormant_marauders
		OR = {
			AND = { # Last ship is Void Dwelling
				FROMFROM = { is_ship_size = marauder_void_dwelling }
				count_owned_ship = {
					limit = { is_ship_size = marauder_void_dwelling }
					count = 0
				}
				num_starbases = 0
			}
			AND = { # Last ship is Starbase
				FROMFROM = { is_ship_size = starbase_marauder }
				count_owned_ship = {
					limit = { is_ship_size = marauder_void_dwelling }
					count = 0
				}
				num_starbases = 1 # Last one still counts as alive when this fires
			}
		}
	}

	immediate = {
		from = { save_event_target_as = marauder_killer }
		owner_species = { save_event_target_as = marauder_species }
		every_playable_country = {
			limit = {
				is_ai = no
				has_communications = root
			}
			country_event = { id = marauder.5 }
		}
		random_relation = {
			limit = {
				is_country_type = default
				has_policy_flag = refugees_allowed
				has_communications = root
			}
			country_event = { id = marauder.9 days = 10 random = 10 }
		}

		# Vengeance if Mercenaries hired
		if = {
			limit = {
				from = { is_country_type = default }
				OR = {
					has_country_flag = merc_fleet_1_hired
					has_country_flag = merc_fleet_2_hired
					has_country_flag = merc_fleet_3_hired
				}
			}
			from = {
				if = {
					limit = { exists = fromfrom exists = fromfrom.solar_system }
					fromfrom.solar_system = {
						save_event_target_as = attacked_system
					}
				}
				country_event = { id = marauder.6 days = 100 random = 50 }
			}

			# Vanilla Fix: following block needs to be here as marauder.76 always expects existing (ruined_)marauders)
			# Mercenary Desertions (Marauder 1)
			if = {
				limit = { has_country_flag = marauder_1 }
				every_country = {
					limit = {
						any_owned_fleet = {
							OR = {
								has_fleet_flag = armada_of_the_voidborn
								has_fleet_flag = star_rider_flotilla
								has_fleet_flag = first_storm_wing
							}
						}
					}
					country_event = { id = marauder.76 days = 20 random = 20 }
				}
			}
			# Mercenary Desertions (Marauder 2)
			else_if = {
				limit = { has_country_flag = marauder_2 }
				every_country = {
					limit = {
						any_owned_fleet = {
							OR = {
								has_fleet_flag = dwamak_bashers
								has_fleet_flag = unhinged_screamer_flotilla
								has_fleet_flag = frenzied_volunteer_squadron
							}
						}
					}
					country_event = { id = marauder.76 days = 20 random = 20 }
				}
			}
			# Mercenary Desertions (Marauder 3)
			else_if = {
				limit = { has_country_flag = marauder_3 }
				every_country = {
					limit = {
						any_owned_fleet = {
							OR = {
								has_fleet_flag = her_chosen_champions
								has_fleet_flag = order_of_eternal_night
								has_fleet_flag = twilight_congregation
							}
						}
					}
					country_event = { id = marauder.76 days = 20 random = 20 }
				}
			}
			set_country_type = ruined_marauders # Kill diplomacy
		}
		else = { destroy_country = yes }
	}
}

# Marauders Destroyed
country_event = {
	id = marauder.5
	title = "marauder.5.name"
	desc = "marauder.5.desc"
	picture = GFX_evt_large_explosion
	show_sound = event_radio_chatter
	location = event_target:marauder_system

	is_triggered_only = yes

	option = {
		name = marauder.5.a
	}
}

# Marauder Vengeance
country_event = {
	id = marauder.6
	title = "marauder.6.name"
	desc = "marauder.6.desc"
	picture = GFX_evt_pirate_armada
	show_sound = event_radio_chatter
	location = event_target:attacked_system

	is_triggered_only = yes

	immediate = {
		from = { set_country_flag = marauder_vengeance_begun }
		random_owned_planet = {
			solar_system = {
				save_event_target_as = attacked_system
				star = { save_event_target_as = attacked_system_star }
			}
			save_event_target_as = attacked_planet
		}
		every_playable_country = {
			limit = {
				is_ai = no
				NOT = { is_same_value = root }
			}
			country_event = { id = marauder.8 days = 10 }
		}

		# Marauder 1
		if = {
			limit = { from = { has_country_flag = marauder_1 } }

			# Armada of the Voidborn
			if = {
				limit = { from = { has_country_flag = merc_fleet_1_hired } }
				from = {
					create_leader = {
						class = admiral
						species = owner_main_species
						name = random
						skill = 3
						leader_age_min = 25
						leader_age_max = 45
						traits = {
							trait = leader_trait_mercenary_warrior
							trait = random_trait
						}
					}
					create_fleet = {
						name = "NAME_Armada_of_the_Voidborn"
						effect = {
							set_owner = prev
							create_armada_of_the_voidborn = yes
							assign_leader = last_created_leader
							set_location = {
								target = event_target:attacked_system_star
								distance = 370
								angle = 12
							}
							auto_move_to_planet = {
								target = event_target:attacked_planet
								clear_auto_move_on_arrival = no
							}
						}
						settings = {
							can_upgrade = no
							can_change_composition = no
						}
					}
				}
			}

			# Star Rider Flotilla
			if = {
				limit = { from = { has_country_flag = merc_fleet_2_hired } }
				from = {
					create_leader = {
						class = admiral
						species = owner_main_species
						name = random
						skill = 3
						leader_age_min = 25
						leader_age_max = 45
						traits = {
							trait = leader_trait_mercenary_warrior
							trait = random_trait
						}
					}
					last_created_leader = { set_age = 42 }
					create_fleet = {
						name = "NAME_Star_Rider_Flotilla"
						effect = {
							set_owner = prev
							create_star_rider_flotilla = yes
							assign_leader = last_created_leader
							set_location = {
								target = event_target:attacked_system_star
								distance = 370
								angle = 15
							}
							auto_move_to_planet = {
								target = event_target:attacked_planet
								clear_auto_move_on_arrival = no
							}
						}
						settings = {
							can_upgrade = no
							can_change_composition = no
						}
					}
				}
			}

			# First Storm Wing
			if = {
				limit = { from = { has_country_flag = merc_fleet_3_hired } }
				from = {
					create_leader = {
						class = admiral
						species = owner_main_species
						name = random
						skill = 3
						leader_age_min = 25
						leader_age_max = 45
						traits = {
							trait = leader_trait_mercenary_warrior
							trait = random_trait
						}
					}
					create_fleet = {
						name = "NAME_First_Storm_Wing"
						effect = {
							set_owner = prev
							create_first_storm_wing = yes
							assign_leader = last_created_leader
							set_location = {
								target = event_target:attacked_system_star
								distance = 370
								angle = 17
							}
							auto_move_to_planet = {
								target = event_target:attacked_planet
								clear_auto_move_on_arrival = no
							}
						}
						settings = {
							can_upgrade = no
							can_change_composition = no
						}
					}
				}
			}
			break = yes
		}

		# Marauder 2
		else_if = {
			limit = { from = { has_country_flag = marauder_2 } }

			# 234th Dwamak-Bashers
			if = {
				limit = { from = { has_country_flag = merc_fleet_1_hired } }
				from = {
					create_leader = {
						class = admiral
						species = owner_main_species
						name = random
						skill = 3
						leader_age_min = 25
						leader_age_max = 45
						traits = {
							trait = leader_trait_mercenary_warrior
							trait = random_trait
						}
					}
					create_fleet = {
						name = "NAME_234th_Dwamak_Bashers"
						effect = {
							set_owner = prev
							create_dwamak_bashers = yes
							assign_leader = last_created_leader
							set_location = {
								target = event_target:attacked_system_star
								distance = 370
								angle = 12
							}
							auto_move_to_planet = {
								target = event_target:attacked_planet
								clear_auto_move_on_arrival = no
							}
						}
						settings = {
							can_upgrade = no
							can_change_composition = no
						}
					}
				}
			}

			# Unhinged Screamer Flotilla
			if = {
				limit = { from = { has_country_flag = merc_fleet_2_hired } }
				from = {
					create_leader = {
						class = admiral
						species = owner_main_species
						name = random
						skill = 3
						leader_age_min = 25
						leader_age_max = 45
						traits = {
							trait = leader_trait_mercenary_warrior
							trait = random_trait
						}
					}
					create_fleet = {
						name = "NAME_Unhinged_Screamer_Flotilla"
						effect = {
							set_owner = prev
							create_unhinged_screamer_flotilla = yes
							assign_leader = last_created_leader
							set_location = {
								target = event_target:attacked_system_star
								distance = 370
								angle = 15
							}
							auto_move_to_planet = {
								target = event_target:attacked_planet
								clear_auto_move_on_arrival = no
							}
						}
						settings = {
							can_upgrade = no
							can_change_composition = no
						}
					}
				}
			}

			# Frenzied Volunteer Squadron
			if = {
				limit = { from = { has_country_flag = merc_fleet_3_hired } }
				from = {
					create_leader = {
						class = admiral
						species = owner_main_species
						name = random
						skill = 3
						leader_age_min = 25
						leader_age_max = 45
						traits = {
							trait = leader_trait_mercenary_warrior
							trait = random_trait
						}
					}
					create_fleet = {
						name = "NAME_Frenzied_Volunteer_Squadron"
						effect = {
							set_owner = prev
							create_frenzied_volunteer_squadron = yes
							assign_leader = last_created_leader
							set_location = {
								target = event_target:attacked_system_star
								distance = 370
								angle = 17
							}
							auto_move_to_planet = {
								target = event_target:attacked_planet
								clear_auto_move_on_arrival = no
							}
						}
						settings = {
							can_upgrade = no
							can_change_composition = no
						}
					}
				}
			}
			break = yes
		}

		# Marauder 3
		else_if = {
			limit = { from = { has_country_flag = marauder_3 } }

			# Her Chosen Champions
			if = {
				limit = { from = { has_country_flag = merc_fleet_1_hired } }
				from = {
					create_leader = {
						class = admiral
						species = owner_main_species
						name = random
						skill = 3
						leader_age_min = 25
						leader_age_max = 45
						traits = {
							trait = leader_trait_mercenary_warrior
							trait = random_trait
						}
					}
					create_fleet = {
						name = "NAME_Her_Chosen_Champions"
						effect = {
							set_owner = prev
							create_her_chosen_champions = yes
							assign_leader = last_created_leader
							set_location = {
								target = event_target:attacked_system_star
								distance = 370
								angle = 12
							}
							auto_move_to_planet = {
								target = event_target:attacked_planet
								clear_auto_move_on_arrival = no
							}
						}
						settings = {
							can_upgrade = no
							can_change_composition = no
						}
					}
				}
			}

			# Order of Eternal Night
			if = {
				limit = { from = { has_country_flag = merc_fleet_2_hired } }
				from = {
					create_leader = {
						class = admiral
						species = owner_main_species
						name = random
						skill = 3
						leader_age_min = 25
						leader_age_max = 45
						traits = {
							trait = leader_trait_mercenary_warrior
							trait = random_trait
						}
					}
					create_fleet = {
						name = "NAME_Order_of_Eternal_Night"
						effect = {
							set_owner = prev
							create_order_of_eternal_night = yes
							assign_leader = last_created_leader
							set_location = {
								target = event_target:attacked_system_star
								distance = 370
								angle = 15
							}
							auto_move_to_planet = {
								target = event_target:attacked_planet
								clear_auto_move_on_arrival = no
							}
						}
						settings = {
							can_upgrade = no
							can_change_composition = no
						}
					}
				}
			}

			# Twilight Congregation
			if = {
				limit = { from = { has_country_flag = merc_fleet_3_hired } }
				from = {
					create_leader = {
						class = admiral
						species = owner_main_species
						name = random
						skill = 3
						leader_age_min = 25
						leader_age_max = 45
						traits = {
							trait = leader_trait_mercenary_warrior
							trait = random_trait
						}
					}
					create_fleet = {
						name = "NAME_Twilight_Congregation"
						effect = {
							set_owner = prev
							create_twilight_congregation = yes
							assign_leader = last_created_leader
							set_location = {
								target = event_target:attacked_system_star
								distance = 370
								angle = 17
							}
							auto_move_to_planet = {
								target = event_target:attacked_planet
								clear_auto_move_on_arrival = no
							}
						}
						settings = {
							can_upgrade = no
							can_change_composition = no
						}
					}
				}
			}
			break = yes
		}
	}

	option = {
		name = ONSCREEN
		hidden_effect = {
			country_event = { id = marauder.7 }
		}
	}
}

# Incoming Transmission
country_event = {
	id = marauder.7
	title = "TRANSMISSION"
	desc = {
		text = marauder.7.1.desc
		trigger = {
			fromfrom = { has_country_flag = marauder_1 }
		}
	}
	desc = {
		text = marauder.7.2.desc
		trigger = {
			fromfrom = { has_country_flag = marauder_2 }
		}
	}
	desc = {
		text = marauder.7.3.desc
		trigger = {
			fromfrom = { has_country_flag = marauder_3 }
		}
	}

	diplomatic = yes

	picture_event_data = {
		portrait = event_target:marauder_species
		room = "ethic_spaceship_room"
	}

	is_triggered_only = yes

	option = {
		name = marauder.7.a
	}
}

# Marauder Vengeance
country_event = {
	id = marauder.8
	title = "marauder.6.name"
	desc = "marauder.8.desc"
	picture = GFX_evt_pirate_armada
	show_sound = event_radio_chatter
	location = event_target:attacked_system

	is_triggered_only = yes

	option = {
		name = DISCONCERTING
	}
}

# Marauder Refugees (HIDDEN)
country_event = {
	id = marauder.9
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		is_country_type = default
		has_policy_flag = refugees_allowed
		any_owned_planet = {
			habitability = { who = event_target:marauder_species value > 0.4 }
			#free_housing > 0
		}
		NOT = { has_country_flag = recivied_marauder_refugees }
	}

	immediate = {
		random_list = {
			50 = {
				random_owned_planet = {
					limit = {
						habitability = { who = event_target:marauder_species value > 0.4 }
						#free_housing > 0
					}
					weights = {
						base = 1
						modifier = {
							add = 5
							free_housing > 0
						}
						modifier = {
							add = 10
							free_housing > 1
						}
						modifier = {
							factor = 2
							habitability = { who = event_target:marauder_species value > 0.6 }
						}
					}
					create_pop = {
						species = event_target:marauder_species
						ethos = {
							ethic = "ethic_militarist"
						}
					}
					planet_event = { id = marauder.10 }
				}
				set_timed_country_flag = { flag = recivied_marauder_refugees days = 60 }
			}
			50 = {}
		}
	}
}

# Marauder Refugees
planet_event = {
	id = marauder.10
	title = "marauder.10.name"
	desc = "marauder.10.desc"
	picture = GFX_evt_colony_settlement
	show_sound = event_radio_chatter
	location = event_target:attacked_system

	is_triggered_only = yes

	option = {
		name = marauder.10.a
	}
}

# Marauders Destroyed after Vengeance
country_event = {
	id = marauder.14
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		is_country_type = dormant_marauders
		has_country_flag = marauder_vengeance_begun
		count_owned_ship = {
			count = 0
		}
	}

	immediate = {
		destroy_country = yes
	}
}

## Marauder Infighting On Action
#
# Commented out for now. Works in game, but causes asserts when fleets from the same country attack each other. Coders say not good idea.
#
#event = {
#	id = marauder.11
#	hide_window = yes
#
#	is_triggered_only = yes
#
#	trigger = {
#		any_country = {
#			is_country_type = dormant_marauders
#			NOT = { has_global_flag = marauder_infighting_ongoing }
#		}
#	}
#
#	immediate = {
#		random_list = {
#			30 = {
#				random_country = {
#					limit = { is_country_type = dormant_marauders }
#					country_event = { id = marauder.12 }
#				}
#			}
#			70 = {}
#		}
#	}
#}
#
## Marauder Infighting
#country_event = {
#	id = marauder.12
#	hide_window = yes
#
#	is_triggered_only = yes
#
#	immediate = {
#		set_global_flag = marauder_infighting_ongoing
#		random_planet_within_border = {
#			create_fleet = {
#				effect = {
#					set_owner = root
#					while = {
#						count = 22
#						create_ship = {
#							name = random
#							design = "NAME_Outrider"
#							graphical_culture = "pirate_01"
#						}
#					}
#					while = {
#						count = 14
#						create_ship = {
#							name = random
#							design = "NAME_Lancer"
#							graphical_culture = "pirate_01"
#						}
#					}
#					while = {
#						count = 8
#						create_ship = {
#							name = random
#							design = "NAME_Void_Champion"
#							graphical_culture = "pirate_01"
#						}
#					}
#					set_location = {
#						target = prev
#						distance = 80
#						angle = 0
#					}
#				}
#			}
#			last_created_fleet = {
#				set_fleet_flag = infighting_marauders
#				save_event_target_as = infighting_target_1
#			}
#			create_country = {
#				name = "NAME_Feral_Prethoryn"
#				type = "feral_prethoryn_infighting"
#				species = last_created_species
#				name_list = "Prethoryn"
#				flag = {
#					icon= {
#						category = "special"
#						file = "the_swarm.dds"
#					}
#					background= {
#						category = "backgrounds"
#						file = "new_dawn.dds"
#					}
#					colors={
#						"red_orange"
#						"grey"
#						"null"
#						"null"
#					}
#				}
#				effect = {
#					save_event_target_as = feral_prethoryn_infighting
#				}
#			}
#			create_fleet = {
#				effect = {
#					set_owner = root
#					while = {
#						count = 22
#						create_ship = {
#							name = random
#							design = "NAME_Outrider"
#							graphical_culture = "pirate_01"
#						}
#					}
#					while = {
#						count = 14
#						create_ship = {
#							name = random
#							design = "NAME_Lancer"
#							graphical_culture = "pirate_01"
#						}
#					}
#					while = {
#						count = 8
#						create_ship = {
#							name = random
#							design = "NAME_Void_Champion"
#							graphical_culture = "pirate_01"
#						}
#					}
#					set_location = {
#						target = prev
#						distance = 80
#						angle = 180
#					}
#				}
#			}
#			last_created_fleet = {
#				save_event_target_as = infighting_target_2
#				set_fleet_flag = infighting_marauders
#				auto_follow_fleet = { target = event_target:infighting_target_1 attack_fleet = yes }
#			}
#			event_target:infighting_target_1 = {
#				auto_follow_fleet = { target = event_target:infighting_target_2 attack_fleet = yes }
#			}
#		}
#	}
#}
#
## Marauder Infighting Over
#country_event = {
#	id = marauder.13
#	hide_window = yes
#
#	is_triggered_only = yes
#
#	trigger = {
#		is_country_type = dormant_marauders
#		fromfrom = { has_fleet_flag = infighting_marauders }
#		fromfromfrom = { has_fleet_flag = infighting_marauders }
#	}
#
#	immediate = {
#		remove_global_flag = marauder_infighting_ongoing
#		random_planet_within_border = {
#			limit = { has_planet_flag = raid_source }
#			save_event_target_as = return_point
#		}
#		fromfromfrom = {
#			auto_move_to_planet = {
#				target = event_target:return_point
#				destroy_on_arrival = yes
#				clear_auto_move_on_arrival = yes
#			}
#		}
#	}
#}

# Marauder Introduction
country_event = {
	id = marauder.15
	title = "marauder_diplo_header_2"
	desc = {
		text = marauder.15.1.desc
		trigger = {
			event_target:encountered_marauder = { has_country_flag = marauder_1 }
		}
	}
	desc = {
		text = marauder.15.2.desc
		trigger = {
			event_target:encountered_marauder = { has_country_flag = marauder_2 }
		}
	}
	desc = {
		text = marauder.15.3.desc
		trigger = {
			event_target:encountered_marauder = { has_country_flag = marauder_3 }
		}
	}

	diplomatic = yes

	picture_event_data = {
		portrait = event_target:encountered_marauder
		room = "ethic_spaceship_room"
	}

	immediate = {
		if = {
			limit = {
				NOT = { exists = event_target:encountered_marauder }
				exists = from.contact_country
			}
			from.contact_country = {
				save_event_target_as = encountered_marauder
			}
		}
	}

	is_triggered_only = yes

	option = {
		name = marauder.15.a
	}
}

# Marauder Communications Denied
country_event = {
	id = marauder.19
	title = "marauder_diplo_header_3"

	desc = {
		text = marauder.19.desc_01
		trigger = {
			from = { has_country_flag = marauder_1 }
			has_valid_civic = civic_hive_devouring_swarm
		}
	}
	desc = {
		text = marauder.19.desc_02
		trigger = {
			from = { has_country_flag = marauder_1 }
			has_valid_civic = civic_fanatic_purifiers
		}
	}
	desc = {
		text = marauder.19.desc_03
		trigger = {
			from = { has_country_flag = marauder_1 }
			has_valid_civic = civic_machine_terminator
		}
	}

	desc = {
		text = marauder.19.2.desc_01
		trigger = {
			from = { has_country_flag = marauder_2 }
			has_valid_civic = civic_hive_devouring_swarm
		}
	}
	desc = {
		text = marauder.19.2.desc_02
		trigger = {
			from = { has_country_flag = marauder_2 }
			has_valid_civic = civic_fanatic_purifiers
		}
	}
	desc = {
		text = marauder.19.2.desc_03
		trigger = {
			from = { has_country_flag = marauder_2 }
			has_valid_civic = civic_machine_terminator
		}
	}

	desc = {
		text = marauder.19.3.desc_01
		trigger = {
			from = { has_country_flag = marauder_3 }
			has_valid_civic = civic_hive_devouring_swarm
		}
	}
	desc = {
		text = marauder.19.3.desc_02
		trigger = {
			from = { has_country_flag = marauder_3 }
			has_valid_civic = civic_fanatic_purifiers
		}
	}
	desc = {
		text = marauder.19.3.desc_03
		trigger = {
			from = { has_country_flag = marauder_3 }
			has_valid_civic = civic_machine_terminator
		}
	}

	diplomatic = yes

	picture_event_data = {
		portrait = from
		room = "ethic_spaceship_room"
	}

	is_triggered_only = yes
	force_open = yes

	trigger = {
		from = { is_country_type = dormant_marauders }
		is_homicidal = yes
		NOR = {
			AND = {
				has_relation_flag = {
					who = from
					flag = current_target
				}
				from = { is_country_type = dormant_marauders }
			}
			AND = {
				from = { is_country_type = marauder_raiders }
				any_country = {
					is_country_type = dormant_marauders
					has_country_flag = parent_of@from
					root = {
						has_relation_flag = {
							who = prev
							flag = current_target
						}
					}
				}
			}
		}
		NOT = { has_country_flag = marauder_diplomacy_engaged }
	}

	immediate = {
		random_country = {
			limit = {
				is_country_type = dormant_marauders
				has_country_flag = marauder_1
			}
			owner_species = { save_event_target_as = marauder_species }
		}
		set_country_flag = marauder_diplomacy_engaged
	}

	after = {
		hidden_effect = {
			remove_country_flag = marauder_diplomacy_engaged
		}
	}

	option = {
		name = marauder.19.a
		trigger = { has_valid_civic = civic_hive_devouring_swarm }
	}
	option = {
		name = marauder.19.b
		trigger = { has_valid_civic = civic_fanatic_purifiers }
	}
	option = {
		name = marauder.19.c
		trigger = { has_valid_civic = civic_machine_terminator }
	}
}

# Marauder Main Menu (Initial)
country_event = {
	id = marauder.20
	title = "marauder_diplo_header"

	# Marauder 1
	desc = {
		text = marauder.20.1.desc_01
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_1 }
			NOT = { has_modifier = marauder_1_tribute }
		}
	}
	desc = {
		text = marauder.20.1.desc_02
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_1 }
			NOT = { has_modifier = marauder_1_tribute }
		}
	}
	desc = {
		text = marauder.20.1.desc_03
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_1 }
			NOT = { has_modifier = marauder_1_tribute }
		}
	}
	desc = {
		text = marauder.20.1.desc_04
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_1 }
			NOT = { has_modifier = marauder_1_tribute }
		}
	}
	desc = {
		text = marauder.20.1.desc_05
		trigger = {
			has_valid_civic = civic_warrior_culture
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_1 }
		}
	}
	desc = {
		text = marauder.20.1.desc_06
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_1 }
			has_modifier = marauder_1_tribute
		}
	}
	desc = {
		text = marauder.20.1.desc_07
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_1 }
			has_modifier = marauder_1_tribute
		}
	}

	# Marauder 2
	desc = {
		text = marauder.20.2.desc_01
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_2 }
			NOT = { has_modifier = marauder_2_tribute }
		}
	}
	desc = {
		text = marauder.20.2.desc_02
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_2 }
			NOT = { has_modifier = marauder_2_tribute }
		}
	}
	desc = {
		text = marauder.20.2.desc_03
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_2 }
			NOT = { has_modifier = marauder_2_tribute }
		}
	}
	desc = {
		text = marauder.20.2.desc_04
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_2 }
			NOT = { has_modifier = marauder_2_tribute }
		}
	}

	# Marauder 3
	desc = {
		text = marauder.20.3.desc_01
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_3 }
			NOT = { has_modifier = marauder_3_tribute }
		}
	}
	desc = {
		text = marauder.20.3.desc_02
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_3 }
			NOT = { has_modifier = marauder_3_tribute }
		}
	}
	desc = {
		text = marauder.20.3.desc_03
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_3 }
			NOT = { has_modifier = marauder_3_tribute }
		}
	}
	desc = {
		text = marauder.20.3.desc_04
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_3 }
			NOT = { has_modifier = marauder_3_tribute }
		}
	}

	picture_event_data = {
		portrait = event_target:current_marauder_diplomacy
		room = ethic_spaceship_room
	}

	is_triggered_only = yes
	force_open = yes
	diplomatic = yes

	trigger = {
		from = {
			is_country_type = dormant_marauders
		}
		NOR = {
			has_country_flag = marauder_diplomacy_engaged
			has_relation_flag = {
				who = from
				flag = current_target
			}
			has_relation_flag = {
				who = from
				flag = current_hired_target
			}
		}
	}

	immediate = {
		set_country_flag = marauder_diplomacy_engaged
		from = {
			owner_species = { save_event_target_as = marauder_species }
			save_event_target_as = current_marauder_diplomacy
		}
	}

	after = {
		hidden_effect = {
			remove_country_flag = marauder_diplomacy_engaged
		}
	}

	# Ask them to raid someone
	option = {
		name = marauder.20.b
		trigger = {
			event_target:current_marauder_diplomacy = {
				NOR = {
					has_country_flag = raid_ongoing
					has_country_flag = raid_cooldown
				}
			}
		}
		custom_tooltip = encourage_raid
		allow = {
			custom_tooltip = {
				fail_text = marauder.20.need_rivals
				any_relation = {
					root = { is_rival = prev }
				}
			}
		}
		hidden_effect = {
			country_event = { id = marauder.31 }
		}
	}

	# Already raiding someone (Marauder 1)
	option = {
		name = marauder.20.b
		trigger = {
			event_target:current_marauder_diplomacy = {
				has_country_flag = raid_ongoing
				has_country_flag = marauder_1
			}
		}
		response_text = marauder.20.busy.b.1.response
		is_dialog_only = yes
	}

	# Already raiding someone (Marauder 2)
	option = {
		name = marauder.20.b
		trigger = {
			event_target:current_marauder_diplomacy = {
				has_country_flag = raid_ongoing
				has_country_flag = marauder_2
			}
		}
		response_text = marauder.20.busy.b.2.response
		is_dialog_only = yes
	}

	# Already raiding someone (Marauder 3)
	option = {
		name = marauder.20.b
		trigger = {
			event_target:current_marauder_diplomacy = {
				has_country_flag = raid_ongoing
				has_country_flag = marauder_3
			}
		}
		response_text = marauder.20.busy.b.3.response
		is_dialog_only = yes
	}

	# Cooldown from raid (Marauder 1)
	option = {
		name = marauder.20.b
		trigger = {
			event_target:current_marauder_diplomacy = {
				has_country_flag = raid_cooldown
				has_country_flag = marauder_1
			}
		}
		response_text = marauder.20.cooldown.b.1.response
		is_dialog_only = yes
	}

	# Cooldown from raid (Marauder 2)
	option = {
		name = marauder.20.b
		trigger = {
			event_target:current_marauder_diplomacy = {
				has_country_flag = raid_cooldown
				has_country_flag = marauder_2
			}
		}
		response_text = marauder.20.cooldown.b.2.response
		is_dialog_only = yes
	}

	# Cooldown from raid (Marauder 3)
	option = {
		name = marauder.20.b
		trigger = {
			event_target:current_marauder_diplomacy = {
				has_country_flag = raid_cooldown
				has_country_flag = marauder_3
			}
		}
		response_text = marauder.20.cooldown.b.3.response
		is_dialog_only = yes
	}

	# Hire Leader
	option = {
		name = marauder.20.g
		custom_tooltip = hire_mercenary_leader
		hidden_effect = {
			country_event = { id = marauder.40 }
		}
	}

	# Hire Mercenary Fleet
	option = {
		name = marauder.20.d
		trigger = {
			OR = {
				event_target:current_marauder_diplomacy = {
					has_country_flag = marauder_1
					has_country_flag = mercenaries_available_1
				}
				event_target:current_marauder_diplomacy = {
					has_country_flag = marauder_2
					has_country_flag = mercenaries_available_2
				}
				event_target:current_marauder_diplomacy = {
					has_country_flag = marauder_3
					has_country_flag = mercenaries_available_3
				}
			}
			NOT = {
				event_target:current_marauder_diplomacy = {
					has_country_flag = merc_fleet_1_hired
					has_country_flag = merc_fleet_2_hired
					has_country_flag = merc_fleet_3_hired
				}
			}
		}
		custom_tooltip = hire_mercenaries
		hidden_effect = {
			country_event = { id = marauder.34 }
		}
	}

	# Marauder 2 special
	option = {
		name = marauder.20.f
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_2 }
			NOT = { has_country_flag = inquired_about_shrieking }
		}
		hidden_effect = {
			set_country_flag = inquired_about_shrieking
		}
		response_text = marauder.20.f.response
		is_dialog_only = yes
	}

	# Terminate communications
	option = {
		name = marauder.20.e
		default_hide_option = yes
	}
}

# Marauder Main Menu
country_event = {
	id = marauder.21
	title = "marauder_diplo_header"

	# Marauder 1
	desc = {
		text = marauder.20.1.desc_01
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_1 }
			NOT = { has_modifier = marauder_1_tribute }
		}
	}
	desc = {
		text = marauder.20.1.desc_02
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_1 }
			NOT = { has_modifier = marauder_1_tribute }
		}
	}
	desc = {
		text = marauder.20.1.desc_03
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_1 }
			NOT = { has_modifier = marauder_1_tribute }
		}
	}
	desc = {
		text = marauder.20.1.desc_04
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_1 }
			NOT = { has_modifier = marauder_1_tribute }
		}
	}
	desc = {
		text = marauder.20.1.desc_05
		trigger = {
			has_valid_civic = civic_warrior_culture
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_1 }
		}
	}
	desc = {
		text = marauder.20.1.desc_06
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_1 }
			has_modifier = marauder_1_tribute
		}
	}
	desc = {
		text = marauder.20.1.desc_07
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_1 }
			has_modifier = marauder_1_tribute
		}
	}

	# Marauder 2
	desc = {
		text = marauder.20.2.desc_01
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_2 }
			NOT = { has_modifier = marauder_2_tribute }
		}
	}
	desc = {
		text = marauder.20.2.desc_02
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_2 }
			NOT = { has_modifier = marauder_2_tribute }
		}
	}
	desc = {
		text = marauder.20.2.desc_03
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_2 }
			NOT = { has_modifier = marauder_2_tribute }
		}
	}
	desc = {
		text = marauder.20.2.desc_04
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_2 }
			NOT = { has_modifier = marauder_2_tribute }
		}
	}

	# Marauder 3
	desc = {
		text = marauder.20.3.desc_01
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_3 }
			NOT = { has_modifier = marauder_3_tribute }
		}
	}
	desc = {
		text = marauder.20.3.desc_02
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_3 }
			NOT = { has_modifier = marauder_3_tribute }
		}
	}
	desc = {
		text = marauder.20.3.desc_03
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_3 }
			NOT = { has_modifier = marauder_3_tribute }
		}
	}
	desc = {
		text = marauder.20.3.desc_04
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_3 }
			NOT = { has_modifier = marauder_3_tribute }
		}
	}

	picture_event_data = {
		portrait = event_target:current_marauder_diplomacy
		room = ethic_spaceship_room
	}

	is_triggered_only = yes
	force_open = yes
	diplomatic = yes

	immediate = {
		set_country_flag = marauder_diplomacy_engaged
	}

	after = {
		hidden_effect = {
			remove_country_flag = marauder_diplomacy_engaged
		}
	}

	# Ask them to raid someone
	option = {
		name = marauder.20.b
		trigger = {
			event_target:current_marauder_diplomacy = {
				NOR = {
					has_country_flag = raid_ongoing
					has_country_flag = raid_cooldown
				}
			}
		}
		custom_tooltip = encourage_raid
		allow = {
			custom_tooltip = {
				fail_text = marauder.20.need_rivals
				any_relation = {
					root = { is_rival = prev }
				}
			}
		}
		hidden_effect = {
			country_event = { id = marauder.31 }
		}
	}

	# Already raiding someone (Marauder 1)
	option = {
		name = marauder.20.b
		trigger = {
			event_target:current_marauder_diplomacy = {
				has_country_flag = raid_ongoing
				has_country_flag = marauder_1
			}
		}
		response_text = marauder.20.busy.b.1.response
		is_dialog_only = yes
	}

	# Already raiding someone (Marauder 2)
	option = {
		name = marauder.20.b
		trigger = {
			event_target:current_marauder_diplomacy = {
				has_country_flag = raid_ongoing
				has_country_flag = marauder_2
			}
		}
		response_text = marauder.20.busy.b.2.response
		is_dialog_only = yes
	}

	# Already raiding someone (Marauder 3)
	option = {
		name = marauder.20.b
		trigger = {
			event_target:current_marauder_diplomacy = {
				has_country_flag = raid_ongoing
				has_country_flag = marauder_3
			}
		}
		response_text = marauder.20.busy.b.3.response
		is_dialog_only = yes
	}

	# Cooldown from raid (Marauder 1)
	option = {
		name = marauder.20.b
		trigger = {
			event_target:current_marauder_diplomacy = {
				has_country_flag = raid_cooldown
				has_country_flag = marauder_1
			}
		}
		response_text = marauder.20.cooldown.b.1.response
		is_dialog_only = yes
	}

	# Cooldown from raid (Marauder 2)
	option = {
		name = marauder.20.b
		trigger = {
			event_target:current_marauder_diplomacy = {
				has_country_flag = raid_cooldown
				has_country_flag = marauder_2
			}
		}
		response_text = marauder.20.cooldown.b.2.response
		is_dialog_only = yes
	}

	# Cooldown from raid (Marauder 3)
	option = {
		name = marauder.20.b
		trigger = {
			event_target:current_marauder_diplomacy = {
				has_country_flag = raid_cooldown
				has_country_flag = marauder_3
			}
		}
		response_text = marauder.20.cooldown.b.3.response
		is_dialog_only = yes
	}

	# Hire Leader
	option = {
		name = marauder.20.g
		custom_tooltip = hire_mercenary_leader
		hidden_effect = {
			country_event = { id = marauder.40 }
		}
	}

	# Hire Mercenary Fleet
	option = {
		name = marauder.20.d
		trigger = {
			OR = {
				event_target:current_marauder_diplomacy = {
					has_country_flag = marauder_1
					has_country_flag = mercenaries_available_1
				}
				event_target:current_marauder_diplomacy = {
					has_country_flag = marauder_2
					has_country_flag = mercenaries_available_2
				}
				event_target:current_marauder_diplomacy = {
					has_country_flag = marauder_3
					has_country_flag = mercenaries_available_3
				}
			}
			NOT = {
				event_target:current_marauder_diplomacy = {
					has_country_flag = merc_fleet_1_hired
					has_country_flag = merc_fleet_2_hired
					has_country_flag = merc_fleet_3_hired
				}
			}
		}
		custom_tooltip = hire_mercenaries
		hidden_effect = {
			country_event = { id = marauder.34 }
		}
	}

	# Terminate communications
	option = {
		name = marauder.20.e
		default_hide_option = yes
	}
}

# Raiding Target
country_event = {
	id = marauder.31
	title = "marauder_diplo_header"
	desc = {
		text = marauder.31.1.desc
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_1 }
		}
	}
	desc = {
		text = marauder.31.2.desc
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_2 }
		}
	}
	desc = {
		text = marauder.31.3.desc
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_3 }
		}
	}

	diplomatic = yes

	picture_event_data = {
		portrait = event_target:current_marauder_diplomacy
		room = "ethic_spaceship_room"
	}

	is_triggered_only = yes

	immediate = {
		set_country_flag = marauder_diplomacy_engaged
		random_rival_country = {
			save_event_target_as = raid_target_1
		}
		random_rival_country = {
			limit = {
				NOT = { is_same_value = event_target:raid_target_1 }
			}
			save_event_target_as = raid_target_2
		}
		random_rival_country = {
			limit = {
				NOR = {
					is_same_value = event_target:raid_target_1
					is_same_value = event_target:raid_target_2
				}
			}
			save_event_target_as = raid_target_3
		}
		random_rival_country = {
			limit = {
				NOR = {
					is_same_value = event_target:raid_target_1
					is_same_value = event_target:raid_target_2
					is_same_value = event_target:raid_target_3
				}
			}
			save_event_target_as = raid_target_4
		}
	}

	after = {
		hidden_effect = {
			remove_country_flag = marauder_diplomacy_engaged
		}
	}

	option = {
		name = marauder.31.a
		trigger = {
			exists = event_target:raid_target_1
		}
		hidden_effect = {
			event_target:raid_target_1 = { save_event_target_as = preliminary_target }
			if = {
				limit = {
					event_target:raid_target_1 = {
						is_fallen_empire = no
					}
				}
				country_event = { id = marauder.32 }
				break = yes
			}
			if = {
				limit = {
					event_target:raid_target_1 = {
						is_fallen_empire = yes
					}
				}
				country_event = { id = marauder.35 }
			}
		}
	}
	option = {
		name = marauder.31.b
		trigger = {
			exists = event_target:raid_target_2
		}
		hidden_effect = {
			event_target:raid_target_2 = { save_event_target_as = preliminary_target }
			if = {
				limit = {
					event_target:raid_target_2 = {
						is_fallen_empire = no
					}
				}
				country_event = { id = marauder.32 }
				break = yes
			}
			if = {
				limit = {
					event_target:raid_target_2 = {
						is_fallen_empire = yes
					}
				}
				country_event = { id = marauder.35 }
			}
		}
	}
	option = {
		name = marauder.31.c
		trigger = {
			exists = event_target:raid_target_3
		}
		hidden_effect = {
			event_target:raid_target_3 = { save_event_target_as = preliminary_target }
			if = {
				limit = {
					event_target:raid_target_3 = {
						is_fallen_empire = no
					}
				}
				country_event = { id = marauder.32 }
				break = yes
			}
			if = {
				limit = {
					event_target:raid_target_3 = {
						is_fallen_empire = yes
					}
				}
				country_event = { id = marauder.35 }
			}
		}
	}
	option = {
		name = marauder.31.d
		trigger = {
			exists = event_target:raid_target_4
		}
		hidden_effect = {
			event_target:raid_target_4 = { save_event_target_as = preliminary_target }
			if = {
				limit = {
					event_target:raid_target_4 = {
						is_fallen_empire = no
					}
				}
				country_event = { id = marauder.32 }
				break = yes
			}
			if = {
				limit = {
					event_target:raid_target_4 = {
						is_fallen_empire = yes
					}
				}
				country_event = { id = marauder.35 }
			}
		}
	}
	option = {
		name = marauder.31.e
		hidden_effect = {
			country_event = { id = marauder.21 }
		}
	}
	option = {
		name = marauder.31.f
		default_hide_option = yes
	}
}

# Preliminary Raiding Target
country_event = {
	id = marauder.32
	title = "marauder_diplo_header"
	desc = {
		text = marauder.32.1.desc
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_1 }
		}
	}
	desc = {
		text = marauder.32.2.desc
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_2 }
		}
	}
	desc = {
		text = marauder.32.3.desc
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_3 }
		}
	}

	diplomatic = yes

	picture_event_data = {
		portrait = event_target:current_marauder_diplomacy
		room = "ethic_spaceship_room"
	}

	is_triggered_only = yes

	immediate = {
		set_country_flag = marauder_diplomacy_engaged
	}

	after = {
		hidden_effect = {
			remove_country_flag = marauder_diplomacy_engaged
		}
	}

	option = {
		name = marauder.32.a
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_1 }
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= @raidallow }
		}
		add_resource = { energy = @raidcost }
		response_text = marauder.32.1.a.response
		custom_tooltip = hire_raid
		hidden_effect = {
			event_target:current_marauder_diplomacy = { save_event_target_as = raiding_marauder }
			event_target:preliminary_target = {
				country_event = { id = marauder.33 }
			}
		}
	}
	option = {
		name = marauder.32.a
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_2 }
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= @raidallow }
		}
		add_resource = { energy = @raidcost }
		response_text = marauder.32.2.a.response
		custom_tooltip = hire_raid
		hidden_effect = {
			event_target:current_marauder_diplomacy = { save_event_target_as = raiding_marauder }
			event_target:preliminary_target = {
				country_event = { id = marauder.33 }
			}
		}
	}
	option = {
		name = marauder.32.a
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_3 }
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= @raidallow }
		}
		add_resource = { energy = @raidcost }
		response_text = marauder.32.3.a.response
		custom_tooltip = hire_raid
		hidden_effect = {
			event_target:current_marauder_diplomacy = { save_event_target_as = raiding_marauder }
			event_target:preliminary_target = {
				country_event = { id = marauder.33 }
			}
		}
	}
	option = {
		name = marauder.31.e
		hidden_effect = {
			country_event = { id = marauder.21 }
		}
	}
	option = {
		name = marauder.31.f
		default_hide_option = yes
	}
}

# Raid commences
country_event = {
	id = marauder.33
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		from = { set_country_flag = hired@event_target:raiding_marauder }
		if = {
			limit = {
				event_target:raiding_marauder = { has_country_flag = marauder_1 }
			}
			random_system = {
				limit = { has_star_flag = marauder_capital_1 }
				save_event_target_as = marauder_system
				random_system_planet = {
					limit = { has_planet_flag = raid_source }
					save_event_target_as = raid_source
				}
			}
		}
		if = {
			limit = {
				event_target:raiding_marauder = { has_country_flag = marauder_2 }
			}
			random_system = {
				limit = { has_star_flag = marauder_capital_2 }
				save_event_target_as = marauder_system
				random_system_planet = {
					limit = { has_planet_flag = raid_source }
					save_event_target_as = raid_source
				}
			}
		}
		if = {
			limit = {
				event_target:raiding_marauder = { has_country_flag = marauder_3 }
			}
			random_system = {
				limit = { has_star_flag = marauder_capital_3 }
				save_event_target_as = marauder_system
				random_system_planet = {
					limit = { has_planet_flag = raid_source }
					save_event_target_as = raid_source
				}
			}
		}
		save_event_target_as = marauder_target
		from = {
			save_event_target_as = marauder_employer
			set_relation_flag = {
				who = event_target:raiding_marauder
				flag = hired_fleet
			}
		}
		set_relation_flag = {
			who = event_target:raiding_marauder
			flag = current_hired_target
		}
		event_target:raiding_marauder = {
			set_country_flag = raid_ongoing
		}
		create_country = {
			name = event_target:raiding_marauder
			type = "marauder_raiders"
			flag = event_target:raiding_marauder
			effect = {
				save_event_target_as = marauder_raiding_country
				if = {
					limit = { event_target:raiding_marauder = { has_country_flag = marauder_1 } }
					set_country_flag = marauder_1
				}
				if = {
					limit = { event_target:raiding_marauder = { has_country_flag = marauder_2 } }
					set_country_flag = marauder_2
				}
				if = {
					limit = { event_target:raiding_marauder = { has_country_flag = marauder_3 } }
					set_country_flag = marauder_3
				}
				set_country_flag = raid_ongoing
			}
		}
		event_target:marauder_raiding_country = {
			every_country = { establish_communications_no_message = event_target:marauder_raiding_country }
			event_target:raiding_marauder = {
				set_country_flag = parent_of@event_target:marauder_raiding_country
				set_faction_hostility = {
					target = event_target:marauder_raiding_country
					set_hostile = no
					set_neutral = no
					set_friendly = yes
				}
			}
			create_leader = {
				class = admiral
				species = event_target:marauder_species
				name = random
				skill = 3
				leader_age_min = 25
				leader_age_max = 45
				traits = {
					trait = random_trait
					trait = leader_trait_mercenary_warrior
				}
			}
			create_fleet = {
				name = "NAME_Raiding_Fleet"
				effect = {
					set_owner = event_target:raiding_marauder # For ship names
					create_marauder_raiders = yes
					set_location = event_target:raid_source
					set_fleet_stance = aggressive
					set_fleet_bombardment_stance = indiscriminate
					set_aggro_range_measure_from = self
					set_aggro_range = 150
					set_fleet_flag = hired_raiding_fleet
					set_fleet_flag = raiding_fleet
					set_owner = event_target:marauder_raiding_country # Real owner
					assign_leader = last_created_leader

					closest_system = {
						limit = {
							any_system_planet = {
								exists = owner
								owner = { is_same_value = event_target:marauder_target }
								num_pops > 0
							}
						}
						save_event_target_as = raid_system
					}
					event_target:raid_system = {
						random_system_planet = {
							limit = {
								exists = owner
								owner = { is_same_value = event_target:marauder_target }
								num_pops > 0
							}
							save_event_target_as = raid_planet
						}
					}
					auto_move_to_planet = {
						target = event_target:raid_planet
						clear_auto_move_on_arrival = no
					}
				}
			}
			set_faction_hostility = {
				target = event_target:marauder_target
				set_hostile = yes
				set_neutral = no
				set_friendly = no
			}
		}
		country_event = { id = marauder.120 }
		if = {
			limit = {
				event_target:marauder_target = {
					has_communications = event_target:raiding_marauder
				}
			}
			country_event = { id = marauder.120 }
		}
		else = {
			country_event = { id = marauder.123 }
		}
	}
}

# Hire Mercenaries
country_event = {
	id = marauder.34
	title = "marauder_diplo_header"
	desc = {
		text = marauder.34.1.desc
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_1 }
		}
	}
	desc = {
		text = marauder.34.2.desc
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_2 }
		}
	}
	desc = {
		text = marauder.34.3.desc
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_3 }
		}
	}

	diplomatic = yes

	picture_event_data = {
		portrait = event_target:current_marauder_diplomacy
		room = "ethic_spaceship_room"
	}

	is_triggered_only = yes

	immediate = {
		set_country_flag = marauder_diplomacy_engaged
	}

	after = {
		hidden_effect = {
			remove_country_flag = marauder_diplomacy_engaged
		}
	}

	# Hire Armada of the Voidborn
	option = {
		name = marauder.34.1.a
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_1 }
			NOT = { event_target:current_marauder_diplomacy = { has_country_flag = merc_fleet_1_hired } }
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= @largemercallow }
			hidden_trigger = {
				NOT = { event_target:current_marauder_diplomacy = { has_country_flag = merc_fleet_1_hired } }
			}
		}
		add_resource = { energy = @largemerccost }
		custom_tooltip = voidborn_hire
		hidden_effect = {
			event_target:current_marauder_diplomacy = { set_country_flag = merc_fleet_1_hired }

			create_marauder_merc_admiral = yes
			create_fleet = {
				name = "NAME_Armada_of_the_Voidborn"
				effect = {
					set_owner = root
					save_event_target_as = hired_merc_fleet
					create_armada_of_the_voidborn = yes
					set_location = root.capital_scope
					assign_leader = last_created_leader
					set_fleet_flag = armada_of_the_voidborn
					fleet_event = { id = marauder.50 days = 1800 }
				}
				settings = {
					can_upgrade = no
					can_disband = no
					can_change_composition = no
					can_change_leader = no
					uses_naval_capacity = no
				}
			}
			country_event = { id = marauder.37 }
		}
	}

	# Hire Star Rider Flotilla
	option = {
		name = marauder.34.1.b
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_1 }
			NOT = { event_target:current_marauder_diplomacy = { has_country_flag = merc_fleet_2_hired } }
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= @mediummercallow }
			hidden_trigger = {
				NOT = { event_target:current_marauder_diplomacy = { has_country_flag = merc_fleet_2_hired } }
			}
		}
		add_resource = { energy = @mediummerccost }
		custom_tooltip = star_riders_hire
		hidden_effect = {
			event_target:current_marauder_diplomacy = { set_country_flag = merc_fleet_2_hired }

			create_marauder_merc_admiral = yes
			create_fleet = {
				name = "NAME_Star_Rider_Flotilla"
				effect = {
					set_owner = root
					save_event_target_as = hired_merc_fleet
					create_star_rider_flotilla = yes
					set_location = root.capital_scope
					assign_leader = last_created_leader
					set_fleet_flag = star_rider_flotilla
					fleet_event = { id = marauder.50 days = 1800 }
				}
				settings = {
					can_upgrade = no
					can_disband = no
					can_change_composition = no
					can_change_leader = no
					uses_naval_capacity = no
				}
			}
			country_event = { id = marauder.37 }
		}
	}

	# Hire First Storm Wing
	option = {
		name = marauder.34.1.c
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_1 }
			NOT = { event_target:current_marauder_diplomacy = { has_country_flag = merc_fleet_3_hired } }
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= @smallmercallow }
			hidden_trigger = {
				NOT = { event_target:current_marauder_diplomacy = { has_country_flag = merc_fleet_3_hired } }
			}
		}
		add_resource = { energy = @smallmerccost }
		custom_tooltip = storm_wing_hire
		hidden_effect = {
			event_target:current_marauder_diplomacy = { set_country_flag = merc_fleet_3_hired }

			create_marauder_merc_admiral = yes
			create_fleet = {
				name = "NAME_First_Storm_Wing"
				effect = {
					set_owner = root
					save_event_target_as = hired_merc_fleet
					create_first_storm_wing = yes
					assign_leader = last_created_leader
					set_location = root.capital_scope
					set_fleet_flag = first_storm_wing
					fleet_event = { id = marauder.50 days = 1800 }
				}
				settings = {
					can_upgrade = no
					can_disband = no
					can_change_composition = no
					can_change_leader = no
					uses_naval_capacity = no
				}
			}
			country_event = { id = marauder.37 }
		}
	}

	# Hire 234th Dwamak-Bashers
	option = {
		name = marauder.34.2.a
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_2 }
			NOT = { event_target:current_marauder_diplomacy = { has_country_flag = merc_fleet_1_hired } }
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= @largemercallow }
			hidden_trigger = {
				NOT = { event_target:current_marauder_diplomacy = { has_country_flag = merc_fleet_1_hired } }
			}
		}
		add_resource = { energy = @largemerccost }
		custom_tooltip = voidborn_hire
		hidden_effect = {
			event_target:current_marauder_diplomacy = { set_country_flag = merc_fleet_1_hired }

			create_marauder_merc_admiral = yes
			create_fleet = {
				name = "NAME_234th_Dwamak_Bashers"
				effect = {
					set_owner = root
					save_event_target_as = hired_merc_fleet
					create_dwamak_bashers = yes
					set_location = root.capital_scope
					assign_leader = last_created_leader
					set_fleet_flag = dwamak_bashers
					fleet_event = { id = marauder.50 days = 1800 }
				}
				settings = {
					can_upgrade = no
					can_disband = no
					can_change_composition = no
					can_change_leader = no
					uses_naval_capacity = no
				}
			}
			country_event = { id = marauder.37 }
		}
	}

	# Hire Unhinged Screamer Flotilla
	option = {
		name = marauder.34.2.b
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_2 }
			NOT = { event_target:current_marauder_diplomacy = { has_country_flag = merc_fleet_2_hired } }
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= @mediummercallow }
			hidden_trigger = {
				NOT = { event_target:current_marauder_diplomacy = { has_country_flag = merc_fleet_2_hired } }
			}
		}
		add_resource = { energy = @mediummerccost }
		custom_tooltip = star_riders_hire
		hidden_effect = {
			event_target:current_marauder_diplomacy = { set_country_flag = merc_fleet_2_hired }

			create_marauder_merc_admiral = yes
			create_fleet = {
				name = "NAME_Unhinged_Screamer_Flotilla"
				effect = {
					set_owner = root
					save_event_target_as = hired_merc_fleet
					create_unhinged_screamer_flotilla = yes
					set_location = root.capital_scope
					assign_leader = last_created_leader
					set_fleet_flag = unhinged_screamer_flotilla
					fleet_event = { id = marauder.50 days = 1800 }
				}
				settings = {
					can_upgrade = no
					can_disband = no
					can_change_composition = no
					can_change_leader = no
					uses_naval_capacity = no
				}
			}
			country_event = { id = marauder.37 }
		}
	}

	# Hire Frenzied Volunteer Squadron
	option = {
		name = marauder.34.2.c
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_2 }
			NOT = { event_target:current_marauder_diplomacy = { has_country_flag = merc_fleet_3_hired } }
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= @smallmercallow }
			hidden_trigger = {
				NOT = { event_target:current_marauder_diplomacy = { has_country_flag = merc_fleet_3_hired } }
			}
		}
		add_resource = { energy = @smallmerccost }
		custom_tooltip = storm_wing_hire
		hidden_effect = {
			event_target:current_marauder_diplomacy = { set_country_flag = merc_fleet_3_hired }

			create_marauder_merc_admiral = yes
			create_fleet = {
				name = "NAME_Frenzied_Volunteer_Squadron"
				effect = {
					set_owner = root
					save_event_target_as = hired_merc_fleet
					create_frenzied_volunteer_squadron = yes
					assign_leader = last_created_leader
					set_location = root.capital_scope
					set_fleet_flag = frenzied_volunteer_squadron
					fleet_event = { id = marauder.50 days = 1800 }
				}
				settings = {
					can_upgrade = no
					can_disband = no
					can_change_composition = no
					can_change_leader = no
					uses_naval_capacity = no
				}
			}
			country_event = { id = marauder.37 }
		}
	}

	# Hire Her Chosen Champions
	option = {
		name = marauder.34.3.a
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_3 }
			NOT = { event_target:current_marauder_diplomacy = { has_country_flag = merc_fleet_1_hired } }
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= @largemercallow }
			hidden_trigger = {
				NOT = { event_target:current_marauder_diplomacy = { has_country_flag = merc_fleet_1_hired } }
			}
		}
		add_resource = { energy = @largemerccost }
		custom_tooltip = voidborn_hire
		hidden_effect = {
			event_target:current_marauder_diplomacy = { set_country_flag = merc_fleet_1_hired }

			create_marauder_merc_admiral = yes
			create_fleet = {
				name = "NAME_Her_Chosen_Champions"
				effect = {
					set_owner = root
					save_event_target_as = hired_merc_fleet
					create_her_chosen_champions = yes
					set_location = root.capital_scope
					assign_leader = last_created_leader
					set_fleet_flag = her_chosen_champions
					fleet_event = { id = marauder.50 days = 1800 }
				}
				settings = {
					can_upgrade = no
					can_disband = no
					can_change_composition = no
					can_change_leader = no
					uses_naval_capacity = no
				}
			}
			country_event = { id = marauder.37 }
		}
	}

	# Hire Order of Eternal Night
	option = {
		name = marauder.34.3.b
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_3 }
			NOT = { event_target:current_marauder_diplomacy = { has_country_flag = merc_fleet_2_hired } }
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= @mediummercallow }
			hidden_trigger = {
				NOT = { event_target:current_marauder_diplomacy = { has_country_flag = merc_fleet_2_hired } }
			}
		}
		add_resource = { energy = @mediummerccost }
		custom_tooltip = star_riders_hire
		hidden_effect = {
			event_target:current_marauder_diplomacy = { set_country_flag = merc_fleet_2_hired }

			create_marauder_merc_admiral = yes
			create_fleet = {
				name = "NAME_Order_of_Eternal_Night"
				effect = {
					set_owner = root
					save_event_target_as = hired_merc_fleet
					create_order_of_eternal_night = yes
					set_location = root.capital_scope
					assign_leader = last_created_leader
					set_fleet_flag = order_of_eternal_night
					fleet_event = { id = marauder.50 days = 1800 }
				}
				settings = {
					can_upgrade = no
					can_disband = no
					can_change_composition = no
					can_change_leader = no
					uses_naval_capacity = no
				}
			}
			country_event = { id = marauder.37 }
		}
	}

	# Hire Twilight Congregation
	option = {
		name = marauder.34.3.c
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_3 }
			NOT = { event_target:current_marauder_diplomacy = { has_country_flag = merc_fleet_3_hired } }
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= @smallmercallow }
			hidden_trigger = {
				NOT = { event_target:current_marauder_diplomacy = { has_country_flag = merc_fleet_3_hired } }
			}
		}
		add_resource = { energy = @smallmerccost }
		custom_tooltip = storm_wing_hire
		hidden_effect = {
			event_target:current_marauder_diplomacy = { set_country_flag = merc_fleet_3_hired }

			create_marauder_merc_admiral = yes
			create_fleet = {
				name = "NAME_Twilight_Congregation"
				effect = {
					set_owner = root
					save_event_target_as = hired_merc_fleet
					create_twilight_congregation = yes
					assign_leader = last_created_leader
					set_location = root.capital_scope
					set_fleet_flag = twilight_congregation
					fleet_event = { id = marauder.50 days = 1800 }
				}
				settings = {
					can_upgrade = no
					can_disband = no
					can_change_composition = no
					can_change_leader = no
					uses_naval_capacity = no
				}
			}
			country_event = { id = marauder.37 }
		}
	}

	option = {
		name = marauder.34.d
		hidden_effect = {
			country_event = { id = marauder.21 }
		}
	}
	option = {
		name = marauder.34.e
		default_hide_option = yes
	}
}

# Preliminary Raiding Target (Fallen Empire)
country_event = {
	id = marauder.35
	title = "marauder_diplo_header"
	desc = {
		text = marauder.35.1.desc
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_1 }
		}
	}
	desc = {
		text = marauder.35.2.desc
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_2 }
		}
	}
	desc = {
		text = marauder.35.3.desc
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_3 }
		}
	}

	diplomatic = yes

	picture_event_data = {
		portrait = event_target:current_marauder_diplomacy
		room = "ethic_spaceship_room"
	}

	is_triggered_only = yes

	immediate = {
		set_country_flag = marauder_diplomacy_engaged
	}

	after = {
		hidden_effect = {
			remove_country_flag = marauder_diplomacy_engaged
		}
	}

	option = {
		name = marauder.31.e
		hidden_effect = {
			country_event = { id = marauder.21 }
		}
	}
	option = {
		name = marauder.31.f
		default_hide_option = yes
	}
}

# Mercenary Fleet Hired
country_event = {
	id = marauder.37
	title = "marauder_diplo_header"

	desc = {
		text = marauder.37.1.a.desc
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_1 }
			any_relation = {
				is_fallen_empire = yes
			}
		}
	}
	desc = {
		text = marauder.37.1.b.desc
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_1 }
			NOT = {
				any_relation = {
					is_fallen_empire = yes
				}
			}
		}
	}
	desc = {
		text = marauder.37.2.a.desc
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_2 }
		}
	}
	desc = {
		text = marauder.37.3.a.desc
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_3 }
		}
	}

	diplomatic = yes

	picture_event_data = {
		portrait = event_target:current_marauder_diplomacy
		room = "ethic_spaceship_room"
	}

	is_triggered_only = yes

	immediate = {
		set_country_flag = marauder_diplomacy_engaged
		random_relation = {
			limit = {
				is_fallen_empire = yes
			}
			save_event_target_as = random_fallen_empire
		}
	}

	after = {
		hidden_effect = {
			remove_country_flag = marauder_diplomacy_engaged
		}
	}

	option = {
		name = marauder.37.a
		hidden_effect = {
			country_event = { id = marauder.21 }
		}
	}
	option = {
		name = marauder.37.b
		default_hide_option = yes
	}
}

# Hire Leader
country_event = {
	id = marauder.40
	title = "marauder_diplo_header"
	desc = {
		text = marauder.40.1.desc
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_1 }
		}
	}
	desc = {
		text = marauder.40.2.desc
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_2 }
		}
	}
	desc = {
		text = marauder.40.3.desc
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_3 }
		}
	}

	diplomatic = yes

	picture_event_data = {
		portrait = event_target:current_marauder_diplomacy
		room = "ethic_spaceship_room"
	}

	is_triggered_only = yes

	immediate = {
		set_country_flag = marauder_diplomacy_engaged
	}

	after = {
		hidden_effect = {
			remove_country_flag = marauder_diplomacy_engaged
		}
	}

	### Marauder 1

	# Hire Admiral
	option = {
		name = marauder.40.1.a
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_1 }
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= @leaderallow }
		}
		add_resource = { energy = @leadercost }
		custom_tooltip = hire_admiral_merc
		hidden_effect = {
			create_leader = {
				class = admiral
				species = event_target:marauder_species
				name = random
				event_leader = yes
				skill = 3
				leader_age_min = 25
				leader_age_max = 45
				traits = {
					trait = leader_trait_mercenary_warrior
					trait = random_trait
				}
			}
			last_created_leader = {
				if = {
					limit = { event_target:current_marauder_diplomacy = { has_country_flag = marauder_1 } }
					set_leader_flag = hired_merc_leader_1
					break = yes
				}
				if = {
					limit = { event_target:current_marauder_diplomacy = { has_country_flag = marauder_2 } }
					set_leader_flag = hired_merc_leader_2
					break = yes
				}
				if = {
					limit = { event_target:current_marauder_diplomacy = { has_country_flag = marauder_3 } }
					set_leader_flag = hired_merc_leader_3
				}
			}
		}
		response_text = marauder.40.a.response
		is_dialog_only = yes
	}
	# Hire General
	option = {
		name = marauder.40.2.a
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_1 }
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= @leaderallow }
		}
		add_resource = { energy = @leadercost }
		custom_tooltip = hire_general_merc
		hidden_effect = {
			create_leader = {
				class = general
				species = event_target:marauder_species
				name = random
				event_leader = yes
				skill = 3
				leader_age_min = 25
				leader_age_max = 45
				traits = {
					trait = leader_trait_general_mercenary_warrior
					trait = random_trait
				}
			}
			last_created_leader = {
				if = {
					limit = { event_target:current_marauder_diplomacy = { has_country_flag = marauder_1 } }
					set_leader_flag = hired_merc_leader_1
					break = yes
				}
				if = {
					limit = { event_target:current_marauder_diplomacy = { has_country_flag = marauder_2 } }
					set_leader_flag = hired_merc_leader_2
					break = yes
				}
				if = {
					limit = { event_target:current_marauder_diplomacy = { has_country_flag = marauder_3 } }
					set_leader_flag = hired_merc_leader_3
				}
			}
		}
		response_text = marauder.40.a.response
		is_dialog_only = yes
	}

	### Marauder 2

	# Hire Admiral
	option = {
		name = marauder.40.1.a
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_2 }
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= @leaderallow }
		}
		add_resource = { energy = @leadercost }
		custom_tooltip = hire_admiral_merc
		hidden_effect = {
			create_leader = {
				class = admiral
				species = event_target:marauder_species
				name = random
				event_leader = yes
				skill = 3
				leader_age_min = 25
				leader_age_max = 45
				traits = {
					trait = leader_trait_mercenary_warrior
					trait = random_trait
				}
			}
			last_created_leader = {
				if = {
					limit = { event_target:current_marauder_diplomacy = { has_country_flag = marauder_1 } }
					set_leader_flag = hired_merc_leader_1
					break = yes
				}
				if = {
					limit = { event_target:current_marauder_diplomacy = { has_country_flag = marauder_2 } }
					set_leader_flag = hired_merc_leader_2
					break = yes
				}
				if = {
					limit = { event_target:current_marauder_diplomacy = { has_country_flag = marauder_3 } }
					set_leader_flag = hired_merc_leader_3
				}
			}
		}
		response_text = marauder.40.b.response
		is_dialog_only = yes
	}
	# Hire General
	option = {
		name = marauder.40.2.a
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_2 }
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= @leaderallow }
		}
		add_resource = { energy = @leadercost }
		custom_tooltip = hire_general_merc
		hidden_effect = {
			create_leader = {
				class = general
				species = event_target:marauder_species
				name = random
				event_leader = yes
				skill = 3
				leader_age_min = 25
				leader_age_max = 45
				traits = {
					trait = leader_trait_general_mercenary_warrior
					trait = random_trait
				}
			}
			last_created_leader = {
				if = {
					limit = { event_target:current_marauder_diplomacy = { has_country_flag = marauder_1 } }
					set_leader_flag = hired_merc_leader_1
					break = yes
				}
				if = {
					limit = { event_target:current_marauder_diplomacy = { has_country_flag = marauder_2 } }
					set_leader_flag = hired_merc_leader_2
					break = yes
				}
				if = {
					limit = { event_target:current_marauder_diplomacy = { has_country_flag = marauder_3 } }
					set_leader_flag = hired_merc_leader_3
				}
			}
		}
		response_text = marauder.40.b.response
		is_dialog_only = yes
	}

	### Marauder 3

	# Hire Admiral
	option = {
		name = marauder.40.1.a
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_3 }
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= @leaderallow }
		}
		add_resource = { energy = @leadercost }
		custom_tooltip = hire_admiral_merc
		hidden_effect = {
			create_leader = {
				class = admiral
				species = event_target:marauder_species
				name = random
				event_leader = yes
				skill = 3
				leader_age_min = 25
				leader_age_max = 45
				traits = {
					trait = leader_trait_mercenary_warrior
					trait = random_trait
				}
			}
			last_created_leader = {
				if = {
					limit = { event_target:current_marauder_diplomacy = { has_country_flag = marauder_1 } }
					set_leader_flag = hired_merc_leader_1
					break = yes
				}
				if = {
					limit = { event_target:current_marauder_diplomacy = { has_country_flag = marauder_2 } }
					set_leader_flag = hired_merc_leader_2
					break = yes
				}
				if = {
					limit = { event_target:current_marauder_diplomacy = { has_country_flag = marauder_3 } }
					set_leader_flag = hired_merc_leader_3
				}
			}
		}
		response_text = marauder.40.c.response
		is_dialog_only = yes
	}
	# Hire General
	option = {
		name = marauder.40.2.a
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_3 }
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= @leaderallow }
		}
		add_resource = { energy = @leadercost }
		custom_tooltip = hire_general_merc
		hidden_effect = {
			create_leader = {
				class = general
				species = event_target:marauder_species
				name = random
				event_leader = yes
				skill = 3
				leader_age_min = 25
				leader_age_max = 45
				traits = {
					trait = leader_trait_general_mercenary_warrior
					trait = random_trait
				}
			}
			last_created_leader = {
				if = {
					limit = { event_target:current_marauder_diplomacy = { has_country_flag = marauder_1 } }
					set_leader_flag = hired_merc_leader_1
					break = yes
				}
				if = {
					limit = { event_target:current_marauder_diplomacy = { has_country_flag = marauder_2 } }
					set_leader_flag = hired_merc_leader_2
					break = yes
				}
				if = {
					limit = { event_target:current_marauder_diplomacy = { has_country_flag = marauder_3 } }
					set_leader_flag = hired_merc_leader_3
				}
			}
		}
		response_text = marauder.40.c.response
		is_dialog_only = yes
	}

	option = {
		name = marauder.31.e
		hidden_effect = {
			country_event = { id = marauder.21 }
		}
	}
	option = {
		name = marauder.31.f
		default_hide_option = yes
	}
}

# Mercenary Contract Ends
fleet_event = {
	id = marauder.50
	title = "marauder.50.name"
	desc = "marauder.50.desc"
	picture = GFX_evt_pirate_armada
	show_sound = event_radio_chatter
	location = this

	is_triggered_only = yes

	option = { # Extend contract 1
		name = marauder.50.a
		allow = { owner = { resource_stockpile_compare = { resource = energy value >= @largemercallow } } }
		trigger = {
			OR = {
				has_fleet_flag = armada_of_the_voidborn
				has_fleet_flag = dwamak_bashers
				has_fleet_flag = her_chosen_champions
			}
		}
		owner = { add_resource = { energy = @largemerccost } }
		hidden_effect = {
			fleet_event = { id = marauder.50 days = 1800 }
		}
	}
	option = { # Extend contract 2
		name = marauder.50.a
		allow = { owner = { resource_stockpile_compare = { resource = energy value >= @mediummercallow } } }
		trigger = {
			OR = {
				has_fleet_flag = star_rider_flotilla
				has_fleet_flag = unhinged_screamer_flotilla
				has_fleet_flag = order_of_eternal_night
			}
		}
		owner = { add_resource = { energy = @mediummerccost } }
		hidden_effect = {
			fleet_event = { id = marauder.50 days = 1800 }
		}
	}
	option = { # Extend contract 3
		name = marauder.50.a
		allow = { owner = { resource_stockpile_compare = { resource = energy value >= @smallmercallow } } }
		trigger = {
			OR = {
				has_fleet_flag = first_storm_wing
				has_fleet_flag = frenzied_volunteer_squadron
				has_fleet_flag = twilight_congregation
			}
		}
		owner = { add_resource = { energy = @smallmerccost } }
		hidden_effect = {
			fleet_event = { id = marauder.50 days = 1800 }
		}
	}
	option = { # Decline
		name = marauder.50.b
		ai_chance = {
			factor = 100
		}
		hidden_effect = {
			# Marauder 1 fleets
			if = {
				limit = { has_fleet_flag = armada_of_the_voidborn }
				event_target:marauder_country_1 = {
					remove_country_flag = merc_fleet_1_hired
				}
			}
			if = {
				limit = { has_fleet_flag = star_rider_flotilla }
				event_target:marauder_country_1 = {
					remove_country_flag = merc_fleet_2_hired
				}
			}
			if = {
				limit = { has_fleet_flag = first_storm_wing }
				event_target:marauder_country_1 = {
					remove_country_flag = merc_fleet_3_hired
				}
			}
			# Marauder 2 fleets
			if = {
				limit = { has_fleet_flag = dwamak_bashers }
				event_target:marauder_country_2 = {
					remove_country_flag = merc_fleet_1_hired
				}
			}
			if = {
				limit = { has_fleet_flag = unhinged_screamer_flotilla }
				event_target:marauder_country_2 = {
					remove_country_flag = merc_fleet_2_hired
				}
			}
			if = {
				limit = { has_fleet_flag = frenzied_volunteer_squadron }
				event_target:marauder_country_2 = {
					remove_country_flag = merc_fleet_3_hired
				}
			}
			# Marauder 3 fleets
			if = {
				limit = { has_fleet_flag = her_chosen_champions }
				event_target:marauder_country_3 = {
					remove_country_flag = merc_fleet_1_hired
				}
			}
			if = {
				limit = { has_fleet_flag = order_of_eternal_night }
				event_target:marauder_country_3 = {
					remove_country_flag = merc_fleet_2_hired
				}
			}
			if = {
				limit = { has_fleet_flag = twilight_congregation }
				event_target:marauder_country_3 = {
					remove_country_flag = merc_fleet_3_hired
				}
			}
			leader = {
				remove_leader_flag = marauder_merc_leader
				kill_leader = { show_notification = no }
			}
			delete_fleet = this
		}
	}
}

# Mercenary Fleet Destroyed
country_event = {
	id = marauder.51
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		fromfrom = {
			OR = {
				has_fleet_flag = armada_of_the_voidborn
				has_fleet_flag = star_rider_flotilla
				has_fleet_flag = first_storm_wing
				has_fleet_flag = dwamak_bashers
				has_fleet_flag = unhinged_screamer_flotilla
				has_fleet_flag = frenzied_volunteer_squadron
				has_fleet_flag = her_chosen_champions
				has_fleet_flag = order_of_eternal_night
				has_fleet_flag = twilight_congregation
			}
		}
	}

	immediate = {
		if = {
			limit = {
				exists = fromfrom.leader
			}
			fromfrom.leader = {  remove_leader_flag = marauder_merc_leader }
		}
		# Marauder 1
		if = {
			limit = {
				fromfrom = {
					OR = {
						has_fleet_flag = armada_of_the_voidborn
						has_fleet_flag = star_rider_flotilla
						has_fleet_flag = first_storm_wing
					}
				}
			}
			random_country = {
				limit = { has_country_flag = marauder_1 }
				if = {
					limit = {
						fromfrom = { has_fleet_flag = armada_of_the_voidborn }
					}
					country_event = { id = marauder.52 days = 300 random = 100 } # Cooldown before the fleet is rebuilt
					break = yes
				}
				else_if = {
					limit = {
						fromfrom = { has_fleet_flag = star_rider_flotilla }
					}
					country_event = { id = marauder.53 days = 300 random = 100 } # Cooldown before the fleet is rebuilt
					break = yes
				}
				else_if = {
					limit = {
						fromfrom = { has_fleet_flag = first_storm_wing }
					}
					country_event = { id = marauder.54 days = 300 random = 100 } # Cooldown before the fleet is rebuilt
					break = yes
				}
			}
		}
		# Marauder 2
		else_if = {
			limit = {
				fromfrom = {
					OR = {
						has_fleet_flag = dwamak_bashers
						has_fleet_flag = unhinged_screamer_flotilla
						has_fleet_flag = frenzied_volunteer_squadron
					}
				}
			}
			random_country = {
				limit = { has_country_flag = marauder_2 }
				if = {
					limit = {
						fromfrom = { has_fleet_flag = dwamak_bashers }
					}
					country_event = { id = marauder.52 days = 300 random = 100 } # Cooldown before the fleet is rebuilt
					break = yes
				}
				else_if = {
					limit = {
						fromfrom = { has_fleet_flag = unhinged_screamer_flotilla }
					}
					country_event = { id = marauder.53 days = 300 random = 100 } # Cooldown before the fleet is rebuilt
					break = yes
				}
				else_if = {
					limit = {
						fromfrom = { has_fleet_flag = frenzied_volunteer_squadron }
					}
					country_event = { id = marauder.54 days = 300 random = 100 } # Cooldown before the fleet is rebuilt
					break = yes
				}
			}
		}
		# Marauder 3
		else_if = {
			limit = {
				fromfrom = {
					OR = {
						has_fleet_flag = her_chosen_champions
						has_fleet_flag = order_of_eternal_night
						has_fleet_flag = twilight_congregation
					}
				}
			}
			random_country = {
				limit = { has_country_flag = marauder_3 }
				if = {
					limit = {
						fromfrom = { has_fleet_flag = her_chosen_champions }
					}
					country_event = { id = marauder.52 days = 300 random = 100 } # Cooldown before the fleet is rebuilt
					break = yes
				}
				if = {
					limit = {
						fromfrom = { has_fleet_flag = order_of_eternal_night }
					}
					country_event = { id = marauder.53 days = 300 random = 100 } # Cooldown before the fleet is rebuilt
					break = yes
				}
				if = {
					limit = {
						fromfrom = { has_fleet_flag = twilight_congregation }
					}
					country_event = { id = marauder.54 days = 300 random = 100 } # Cooldown before the fleet is rebuilt
					break = yes
				}
			}
		}
	}
}

# Mercenary Fleet Available Again 1
country_event = {
	id = marauder.52
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		remove_country_flag = merc_fleet_1_hired
	}
}

# Mercenary Fleet Available Again 2
country_event = {
	id = marauder.53
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		remove_country_flag = merc_fleet_2_hired
	}
}

# Mercenary Fleet Available Again 3
country_event = {
	id = marauder.54
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		remove_country_flag = merc_fleet_3_hired
	}
}

# Mercenary Admiral Dies (HIDDEN)
country_event = {
	id = marauder.70
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		from = {
			has_leader_flag = marauder_merc_leader
			leader_class = admiral
		}
	}

	immediate = {
		from = {
			species = { save_event_target_as = marauder_species }
			fleet = { fleet_event = { id = marauder.71 days = 5 } } # Delay to keep event from firing when fleet is destroyed
		}
	}
}

# Mercenary Admiral Dies
fleet_event = {
	id = marauder.71
	title = "marauder.71.name"
	desc = "marauder.71.desc"
	picture = GFX_evt_space_funeral
	show_sound = event_radio_chatter
	location = this

	is_triggered_only = yes

	immediate = {
		from = {
			create_marauder_merc_admiral = yes
			last_created_leader = {
				save_event_target_as = new_leader
			}
		}
		assign_leader = last_created_leader
	}

	option = {
		name = GOOD
	}
}

# Mercenaries Leave (Home Systems Destroyed)
country_event = {
	id = marauder.76
	title = "marauder.76.name"
	desc = "marauder.76.desc"
	picture = GFX_evt_pirate_armada
	show_sound = event_radio_chatter
	location = this

	is_triggered_only = yes

	immediate = {
		# Marauder 1
		if = {
			limit = {
				from = { has_country_flag = marauder_1 }
			}
			every_owned_fleet = {
				limit = {
					OR = {
						has_fleet_flag = armada_of_the_voidborn
						has_fleet_flag = star_rider_flotilla
						has_fleet_flag = first_storm_wing
					}
				}
				leader = {
					remove_leader_flag = marauder_merc_leader
					kill_leader = { show_notification = no }
				}
				delete_fleet = this
			}
			break = yes
		}
		# Marauder 2
		else_if = {
			limit = {
				from = { has_country_flag = marauder_2 }
			}
			every_owned_fleet = {
				limit = {
					OR = {
						has_fleet_flag = dwamak_bashers
						has_fleet_flag = unhinged_screamer_flotilla
						has_fleet_flag = frenzied_volunteer_squadron
					}
				}
				leader = {
					remove_leader_flag = marauder_merc_leader
					kill_leader = { show_notification = no }
				}
				delete_fleet = this
			}
			break = yes
		}
		# Marauder 3
		else_if = {
			limit = {
				from = { has_country_flag = marauder_3 }
			}
			every_owned_fleet = {
				limit = {
					OR = {
						has_fleet_flag = her_chosen_champions
						has_fleet_flag = order_of_eternal_night
						has_fleet_flag = twilight_congregation
					}
				}
				leader = {
					remove_leader_flag = marauder_merc_leader
					kill_leader = { show_notification = no }
				}
				delete_fleet = this
			}
		}
	}

	option = {
		name = marauder.76.a
	}
}

# Mercenaries Leave (Marauder Crisis Started)
country_event = {
	id = marauder.77
	title = "marauder.77.name"
	desc = "marauder.77.desc"
	picture = GFX_evt_pirate_armada
	show_sound = event_radio_chatter

	is_triggered_only = yes

	immediate = {
		# Marauder 1
		if = {
			limit = {
				from = { has_country_flag = marauder_1 }
			}
			every_owned_fleet = {
				limit = {
					OR = {
						has_fleet_flag = armada_of_the_voidborn
						has_fleet_flag = star_rider_flotilla
						has_fleet_flag = first_storm_wing
					}
				}
				leader = {
					remove_leader_flag = marauder_merc_leader
					kill_leader = { show_notification = no }
				}
				delete_fleet = this
			}
			every_owned_leader = {
				limit = { has_leader_flag = hired_merc_leader_1 }
				kill_leader = { show_notification = no }
			}
			break = yes
		}
		# Marauder 2
		else_if = {
			limit = {
				from = { has_country_flag = marauder_2 }
			}
			every_owned_fleet = {
				limit = {
					OR = {
						has_fleet_flag = dwamak_bashers
						has_fleet_flag = unhinged_screamer_flotilla
						has_fleet_flag = frenzied_volunteer_squadron
					}
				}
				leader = {
					remove_leader_flag = marauder_merc_leader
					kill_leader = { show_notification = no }
				}
				delete_fleet = this
			}
			every_owned_leader = {
				limit = { has_leader_flag = hired_merc_leader_2 }
				kill_leader = { show_notification = no }
			}
			break = yes
		}
		# Marauder 3
		else_if = {
			limit = {
				from = { has_country_flag = marauder_3 }
			}
			every_owned_fleet = {
				limit = {
					OR = {
						has_fleet_flag = her_chosen_champions
						has_fleet_flag = order_of_eternal_night
						has_fleet_flag = twilight_congregation
					}
				}
				leader = {
					remove_leader_flag = marauder_merc_leader
					kill_leader = { show_notification = no }
				}
				delete_fleet = this
			}
			every_owned_leader = {
				limit = { has_leader_flag = hired_merc_leader_3 }
				kill_leader = { show_notification = no }
			}
		}
	}

	option = {
		name = marauder.76.a
	}
}

# Mercenaries Join Great Khan (HIDDEN)
country_event = {
	id = marauder.78
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		### Marauder 1
		if = {
			limit = { has_country_flag = marauder_1 }

			# Armada of the Voidborn
			create_leader = {
				class = admiral
				species = owner_main_species
				name = random
				skill = 3
				leader_age_min = 25
				leader_age_max = 45
				traits = {
					trait = leader_trait_mercenary_warrior
					trait = random_trait
				}
			}
			create_fleet = {
				name = "NAME_Armada_of_the_Voidborn"
				effect = {
					set_owner = event_target:raider_khanate
					create_armada_of_the_voidborn = yes
					assign_leader = last_created_leader
					set_location = {
						target = event_target:marauder_rally_point
						distance = 45
						angle = random
					}
				}
				settings = {
					can_upgrade = no
					can_change_composition = no
				}
			}

			# Star Rider Flotilla
			create_leader = {
				class = admiral
				species = owner_main_species
				name = random
				skill = 3
				leader_age_min = 25
				leader_age_max = 45
				traits = {
					trait = leader_trait_mercenary_warrior
					trait = random_trait
				}
			}
			create_fleet = {
				name = "NAME_Star_Rider_Flotilla"
				effect = {
					set_owner = event_target:raider_khanate
					create_star_rider_flotilla = yes
					assign_leader = last_created_leader
					set_location = {
						target = event_target:marauder_rally_point
						distance = 45
						angle = random
					}
				}
				settings = {
					can_upgrade = no
					can_change_composition = no
				}
			}

			# First Storm Wing
			create_leader = {
				class = admiral
				species = owner_main_species
				name = random
				skill = 3
				leader_age_min = 25
				leader_age_max = 45
				traits = {
					trait = leader_trait_mercenary_warrior
					trait = random_trait
				}
			}
			create_fleet = {
				name = "NAME_First_Storm_Wing"
				effect = {
					set_owner = event_target:raider_khanate
					create_first_storm_wing = yes
					assign_leader = last_created_leader
					set_location = {
						target = event_target:marauder_rally_point
						distance = 45
						angle = random
					}
				}
				settings = {
					can_upgrade = no
					can_change_composition = no
				}
			}
			break = yes
		}

		### Marauder 2
		else_if = {
			limit = { has_country_flag = marauder_2 }

			# 234th Dwamak-Bashers
			create_leader = {
				class = admiral
				species = owner_main_species
				name = random
				skill = 3
				leader_age_min = 25
				leader_age_max = 45
				traits = {
					trait = leader_trait_mercenary_warrior
					trait = random_trait
				}
			}
			create_fleet = {
				name = "NAME_234th_Dwamak_Bashers"
				effect = {
					set_owner = event_target:raider_khanate
					create_dwamak_bashers = yes
					assign_leader = last_created_leader
					set_location = {
						target = event_target:marauder_rally_point
						distance = 45
						angle = random
					}
				}
				settings = {
					can_upgrade = no
					can_change_composition = no
				}
			}

			# Unhinged Screamer Flotilla
			create_leader = {
				class = admiral
				species = owner_main_species
				name = random
				skill = 3
				leader_age_min = 25
				leader_age_max = 45
				traits = {
					trait = leader_trait_mercenary_warrior
					trait = random_trait
				}
			}
			create_fleet = {
				name = "NAME_Unhinged_Screamer_Flotilla"
				effect = {
					set_owner = event_target:raider_khanate
					create_unhinged_screamer_flotilla = yes
					assign_leader = last_created_leader
					set_location = {
						target = event_target:marauder_rally_point
						distance = 45
						angle = random
					}
				}
				settings = {
					can_upgrade = no
					can_change_composition = no
				}
			}

			# Frenzied Volunteer Squadron
			create_leader = {
				class = admiral
				species = owner_main_species
				name = random
				skill = 3
				leader_age_min = 25
				leader_age_max = 45
				traits = {
					trait = leader_trait_mercenary_warrior
					trait = random_trait
				}
			}
			create_fleet = {
				name = "NAME_Frenzied_Volunteer_Squadron"
				effect = {
					set_owner = event_target:raider_khanate
					create_frenzied_volunteer_squadron = yes
					assign_leader = last_created_leader
					set_location = {
						target = event_target:marauder_rally_point
						distance = 45
						angle = random
					}
				}
				settings = {
					can_upgrade = no
					can_change_composition = no
				}
			}
			break = yes
		}

		### Marauder 3
		else_if = {
			limit = { has_country_flag = marauder_3 }

			# Her Chosen Champions
			create_leader = {
				class = admiral
				species = owner_main_species
				name = random
				skill = 3
				leader_age_min = 25
				leader_age_max = 45
				traits = {
					trait = leader_trait_mercenary_warrior
					trait = random_trait
				}
			}
			create_fleet = {
				name = "NAME_Her_Chosen_Champions"
				effect = {
					set_owner = event_target:raider_khanate
					create_her_chosen_champions = yes
					assign_leader = last_created_leader
					set_location = {
						target = event_target:marauder_rally_point
						distance = 45
						angle = random
					}
				}
				settings = {
					can_upgrade = no
					can_change_composition = no
				}
			}

			# Order of Eternal Night
			create_leader = {
				class = admiral
				species = owner_main_species
				name = random
				skill = 3
				leader_age_min = 25
				leader_age_max = 45
				traits = {
					trait = leader_trait_mercenary_warrior
					trait = random_trait
				}
			}
			create_fleet = {
				name = "NAME_Order_of_Eternal_Night"
				effect = {
					set_owner = event_target:raider_khanate
					create_order_of_eternal_night = yes
					assign_leader = last_created_leader
					set_location = {
						target = event_target:marauder_rally_point
						distance = 45
						angle = random
					}
				}
				settings = {
					can_upgrade = no
					can_change_composition = no
				}
			}

			# Twilight Congregation
			create_leader = {
				class = admiral
				species = owner_main_species
				name = random
				skill = 3
				leader_age_min = 25
				leader_age_max = 45
				traits = {
					trait = leader_trait_mercenary_warrior
					trait = random_trait
				}
			}
			create_fleet = {
				name = "NAME_Twilight_Congregation"
				effect = {
					set_owner = event_target:raider_khanate
					create_twilight_congregation = yes
					assign_leader = last_created_leader
					set_location = {
						target = event_target:marauder_rally_point
						distance = 45
						angle = random
					}
				}
				settings = {
					can_upgrade = no
					can_change_composition = no
				}
			}
		}
	}
}

# Mercenaries Available for Hire
event = {
	id = marauder.85
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		mid_game_years_passed >= 0
		any_country = {
			is_country_type = dormant_marauders
			OR = {
				AND = {
					has_country_flag = marauder_1
					NOT = { has_country_flag = mercenaries_available_1 }
				}
				AND = {
					has_country_flag = marauder_2
					NOT = { has_country_flag = mercenaries_available_2 }
				}
				AND = {
					has_country_flag = marauder_3
					NOT = { has_country_flag = mercenaries_available_3 }
				}
			}
			any_owned_ship = { is_ship_size = marauder_void_dwelling }
		}
	}

	immediate = {
		random_list = {
			30 = {
				if = {
					limit = {
						any_country = {
							is_country_type = dormant_marauders
							has_country_flag = marauder_1
							NOT = { has_country_flag = mercenaries_available_1 }
							any_owned_ship = { is_ship_size = marauder_void_dwelling }
						}
					}
					random_country = {
						limit = {
							is_country_type = dormant_marauders
							has_country_flag = marauder_1
							NOT = { has_country_flag = mercenaries_available_1 }
							any_owned_ship = { is_ship_size = marauder_void_dwelling }
						}
						set_country_flag = mercenaries_available_1
						save_event_target_as = marauder_mercenary_country
					}
					observer_event = { id = observer.24 }
					every_playable_country = {
						limit = {
							is_ai = no
							has_communications = event_target:marauder_mercenary_country
						}
						country_event = { id = marauder.86 }
					}
				}
			}
			30 = {
				if = {
					limit = {
						any_country = {
							is_country_type = dormant_marauders
							has_country_flag = marauder_2
							NOT = { has_country_flag = mercenaries_available_2 }
							any_owned_ship = { is_ship_size = marauder_void_dwelling }
						}
					}
					random_country = {
						limit = {
							is_country_type = dormant_marauders
							has_country_flag = marauder_2
							NOT = { has_country_flag = mercenaries_available_2 }
							any_owned_ship = { is_ship_size = marauder_void_dwelling }
						}
						set_country_flag = mercenaries_available_2
						save_event_target_as = marauder_mercenary_country
					}
					observer_event = { id = observer.25 }
					every_playable_country = {
						limit = {
							is_ai = no
							has_communications = event_target:marauder_mercenary_country
						}
						country_event = { id = marauder.87 }
					}
				}
			}
			30 = {
				if = {
					limit = {
						any_country = {
							is_country_type = dormant_marauders
							has_country_flag = marauder_3
							NOT = { has_country_flag = mercenaries_available_3 }
							any_owned_ship = { is_ship_size = marauder_void_dwelling }
						}
					}
					random_country = {
						limit = {
							is_country_type = dormant_marauders
							has_country_flag = marauder_3
							NOT = { has_country_flag = mercenaries_available_3 }
							any_owned_ship = { is_ship_size = marauder_void_dwelling }
						}
						set_country_flag = mercenaries_available_3
						save_event_target_as = marauder_mercenary_country
					}
					observer_event = { id = observer.26 }
					every_playable_country = {
						limit = {
							is_ai = no
							has_communications = event_target:marauder_mercenary_country
						}
						country_event = { id = marauder.88 }
					}
				}
			}
			80 = {
			}
		}
	}
}

# Marauders 1 Mercenaries Available
country_event = {
	id = marauder.86
	title = "marauder_diplo_header_2"
	desc = marauder.86.a.desc

	picture_event_data = {
		portrait = event_target:encountered_marauder
		room = ethic_spaceship_room
	}

	is_triggered_only = yes
	force_open = yes
	diplomatic = yes

	immediate = {
		set_country_flag = marauder_diplomacy_engaged
		random_country = {
			limit = {
				is_country_type = dormant_marauders
				has_country_flag = marauder_1
			}
			save_event_target_as = encountered_marauder
		}
	}

	after = {
		hidden_effect = {
			remove_country_flag = marauder_diplomacy_engaged
		}
	}

	option = {
		name = marauder.86.a
	}
}

# Marauders 2 Mercenaries Available
country_event = {
	id = marauder.87
	title = "marauder_diplo_header_2"
	desc = marauder.87.a.desc

	picture_event_data = {
		portrait = event_target:encountered_marauder
		room = ethic_spaceship_room
	}

	is_triggered_only = yes
	force_open = yes
	diplomatic = yes

	immediate = {
		set_country_flag = marauder_diplomacy_engaged
		random_country = {
			limit = {
				is_country_type = dormant_marauders
				has_country_flag = marauder_2
			}
			save_event_target_as = encountered_marauder
		}
	}

	after = {
		hidden_effect = {
			remove_country_flag = marauder_diplomacy_engaged
		}
	}

	option = {
		name = marauder.86.a
	}
}

# Marauders 3 Mercenaries Available
country_event = {
	id = marauder.88
	title = "marauder_diplo_header_2"
	desc = marauder.88.a.desc

	picture_event_data = {
		portrait = event_target:encountered_marauder
		room = ethic_spaceship_room
	}

	is_triggered_only = yes
	force_open = yes
	diplomatic = yes

	immediate = {
		set_country_flag = marauder_diplomacy_engaged
		random_country = {
			limit = {
				is_country_type = dormant_marauders
				has_country_flag = marauder_3
			}
			save_event_target_as = encountered_marauder
		}
	}

	after = {
		hidden_effect = {
			remove_country_flag = marauder_diplomacy_engaged
		}
	}

	option = {
		name = marauder.86.a
	}
}

# Marauder Raid
event = {
	id = marauder.100
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		years_passed >= 25
		any_playable_country = {
			is_country_type = default
			NOT = { has_country_flag = under_marauder_attack }
			any_relation = {
				AND = {
					is_country_type = dormant_marauders
					has_communications = prev
					NOR = {
						has_country_flag = raid_ongoing
						has_country_flag = raid_cooldown
					}
				}
			}
		}
	}

	immediate = {
		random_list = {
			30 = {
				random_playable_country = {
					limit = {
						is_country_type = default
						NOT = { has_country_flag = under_marauder_attack }
						any_relation = {
							is_country_type = dormant_marauders
							has_communications = prev
							NOR = {
								has_country_flag = raid_ongoing
								has_country_flag = raid_cooldown
							}
						}
					}
					random_relation = {
						limit = {
							is_country_type = dormant_marauders
							has_communications = prev
							NOR = {
								has_country_flag = raid_ongoing
								has_country_flag = raid_cooldown
							}
						}
						save_event_target_as = raiding_marauder
						species = { save_event_target_as = marauder_species }
					}
					country_event = { id = marauder.101 days = 1 random = 10 }
				}
			}
			60 = {}
		}
	}
}

# Marauder Raid Announced
country_event = {
	id = marauder.101
	title = "marauder_diplo_header_4"
	desc = {
		text = marauder.101.1.desc
		trigger = {
			event_target:raiding_marauder = { has_country_flag = marauder_1 }
		}
	}
	desc = {
		text = marauder.101.2.desc
		trigger = {
			event_target:raiding_marauder = { has_country_flag = marauder_2 }
		}
	}
	desc = {
		text = marauder.101.3.desc
		trigger = {
			event_target:raiding_marauder = { has_country_flag = marauder_3 }
		}
	}

	diplomatic = yes

	picture_event_data = {
		portrait = event_target:raiding_marauder
		room = "ethic_spaceship_room"
	}

	is_triggered_only = yes

	trigger = {
		exists = event_target:raiding_marauder
		event_target:raiding_marauder = {
			is_country_type = dormant_marauders
			any_relation = { is_same_value = root }
			NOT = {
				any_owned_fleet = { has_fleet_flag = raiding_fleet }
			}
		}
		NOT = { has_country_flag = recently_raided_or_threatened }
	}

	immediate = {
		# Determine tribute level
		if = {
			limit = {
				has_monthly_income = { resource = minerals value <= 50 }
			}
			set_country_flag = marauder_tribute_1@event_target:raiding_marauder
		}
		if = {
			limit = {
				has_monthly_income = { resource = minerals value >= 50 }
				has_monthly_income = { resource = minerals value <= 100 }
			}
			set_country_flag = marauder_tribute_2@event_target:raiding_marauder
		}
		if = {
			limit = {
				has_monthly_income = { resource = minerals value > 100 }
				has_monthly_income = { resource = minerals value <= 150 }
			}
			set_country_flag = marauder_tribute_3@event_target:raiding_marauder
		}
		if = {
			limit = {
				has_monthly_income = { resource = minerals value > 150 }
				has_monthly_income = { resource = minerals value <= 200 }
			}
			set_country_flag = marauder_tribute_4@event_target:raiding_marauder
		}
		if = {
			limit = {
				has_monthly_income = { resource = minerals value > 200 }
				has_monthly_income = { resource = minerals value <= 250 }
			}
			set_country_flag = marauder_tribute_5@event_target:raiding_marauder
		}
		if = {
			limit = {
				has_monthly_income = { resource = minerals value > 250 }
			}
			set_country_flag = marauder_tribute_6@event_target:raiding_marauder
		}

		set_timed_country_flag = {
			flag = recently_raided_or_threatened
			days = 1800 # 5 years
		}
		set_country_flag = raid_target_of@event_target:raiding_marauder
		set_country_flag = under_marauder_attack
		if = {
			limit = {
				event_target:raiding_marauder = { has_country_flag = marauder_1 }
			}
			random_system = {
				limit = { has_star_flag = marauder_capital_1 }
				save_event_target_as = marauder_system
				random_system_planet = {
					limit = { has_planet_flag = raid_source }
					save_event_target_as = raid_source
				}
			}
		}
		if = {
			limit = {
				event_target:raiding_marauder = { has_country_flag = marauder_2 }
			}
			random_system = {
				limit = { has_star_flag = marauder_capital_2 }
				save_event_target_as = marauder_system
				random_system_planet = {
					limit = { has_planet_flag = raid_source }
					save_event_target_as = raid_source
				}
			}
		}
		if = {
			limit = {
				event_target:raiding_marauder = { has_country_flag = marauder_3 }
			}
			random_system = {
				limit = { has_star_flag = marauder_capital_3 }
				save_event_target_as = marauder_system
				random_system_planet = {
					limit = { has_planet_flag = raid_source }
					save_event_target_as = raid_source
				}
			}
		}
		set_relation_flag = {
			who = event_target:raiding_marauder
			flag = current_target
		}
		save_event_target_as = marauder_target
		event_target:raiding_marauder = {
			set_country_flag = raid_ongoing
			owner_species = { save_event_target_as = marauder_species }
		}
		create_country = {
			name = event_target:raiding_marauder
			type = "marauder_raiders"
			species = event_target:marauder_species
			flag = event_target:raiding_marauder
			effect = {
				save_event_target_as = marauder_raiding_country
				if = {
					limit = { event_target:raiding_marauder = { has_country_flag = marauder_1 } }
					set_country_flag = marauder_1
				}
				if = {
					limit = { event_target:raiding_marauder = { has_country_flag = marauder_2 } }
					set_country_flag = marauder_2
				}
				if = {
					limit = { event_target:raiding_marauder = { has_country_flag = marauder_3 } }
					set_country_flag = marauder_3
				}
				set_country_flag = raid_ongoing
			}
		}
		event_target:marauder_raiding_country = {
			every_country = { establish_communications_no_message = event_target:marauder_raiding_country }
			event_target:raiding_marauder = {
				set_country_flag = parent_of@event_target:marauder_raiding_country
				set_faction_hostility = {
					target = event_target:marauder_raiding_country
					set_hostile = no
					set_neutral = no
					set_friendly = yes
				}
			}
			create_leader = {
				class = admiral
				species = event_target:marauder_species
				name = random
				skill = 3
				leader_age_min = 25
				leader_age_max = 45
				traits = {
					trait = random_trait
					trait = leader_trait_mercenary_warrior
				}
			}
			create_fleet = {
				name = "NAME_Raiding_Fleet"
				effect = {
					set_owner = event_target:raiding_marauder # For ship names
					create_marauder_raiders = yes
					set_location = event_target:raid_source
					set_fleet_stance = aggressive
					set_fleet_bombardment_stance = indiscriminate
					set_aggro_range_measure_from = self
					set_aggro_range = 150
					set_fleet_flag = raiding_fleet
					set_owner = event_target:marauder_raiding_country # Real owner
					assign_leader = last_created_leader

					closest_system = {
						limit = {
							any_system_planet = {
								exists = owner
								is_owned_by = root
								is_occupied_flag = no
								num_pops > 0
							}
						}
						save_event_target_as = raid_system
					}
					event_target:raid_system = {
						random_system_planet = {
							limit = {
								exists = owner
								is_owned_by = root
								is_occupied_flag = no
								num_pops > 0
							}
							save_event_target_as = raid_planet
						}
					}
					auto_move_to_planet = {
						target = event_target:raid_planet
						clear_auto_move_on_arrival = no
					}
				}
			}
			set_faction_hostility = {
				target = event_target:marauder_target
				set_hostile = yes
				set_neutral = no
				set_friendly = no
			}
		}
	}

	### Marauder 1
	option = { # Offer Energy tribute
		name = marauder.101.a
		trigger = {
			event_target:raiding_marauder = { has_country_flag = marauder_1 }
		}
		response_text = marauder.101.1.a.response
		allow = {
			determine_energy_tribute = yes
		}
		tribute_cost_energy = yes
		hidden_effect = {
			remove_country_flag = raid_target_of@event_target:raiding_marauder
			remove_country_flag = under_marauder_attack
			remove_country_flag = marauder_tribute_1@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_2@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_3@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_4@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_5@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_6@event_target:raiding_marauder
			remove_relation_flag = {
				who = event_target:raiding_marauder
				flag = current_target
			}
			event_target:raiding_marauder = {
				remove_country_flag = raid_ongoing
				set_timed_country_flag = { flag = raid_cooldown days = @raidcooldown }
			}
			event_target:marauder_raiding_country = {
				random_owned_fleet = {
					limit = { has_fleet_flag = raiding_fleet }
					delete_fleet = this
				}
				destroy_country = yes
			}
		}
	}
	option = { # Offer Mineral tribute
		name = marauder.101.b
		trigger = {
			event_target:raiding_marauder = { has_country_flag = marauder_1 }
		}
		response_text = marauder.101.1.a.response
		allow = {
			determine_mineral_tribute = yes
		}
		tribute_cost_minerals = yes
		hidden_effect = {
			remove_country_flag = raid_target_of@event_target:raiding_marauder
			remove_country_flag = under_marauder_attack
			remove_country_flag = marauder_tribute_1@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_2@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_3@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_4@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_5@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_6@event_target:raiding_marauder
			remove_relation_flag = {
				who = event_target:raiding_marauder
				flag = current_target
			}
			event_target:raiding_marauder = {
				remove_country_flag = raid_ongoing
				set_timed_country_flag = { flag = raid_cooldown days = @raidcooldown }
			}
			event_target:marauder_raiding_country = {
				random_owned_fleet = {
					limit = { has_fleet_flag = raiding_fleet }
					delete_fleet = this
				}
				destroy_country = yes
			}
		}
	}
	option = { # Offer Food tribute
		name = marauder.101.c
		trigger = {
			event_target:raiding_marauder = { has_country_flag = marauder_1 }
		}
		response_text = marauder.101.1.a.response
		allow = {
			determine_food_tribute = yes
		}
		tribute_cost_food = yes
		hidden_effect = {
			remove_country_flag = raid_target_of@event_target:raiding_marauder
			remove_country_flag = under_marauder_attack
			remove_country_flag = marauder_tribute_1@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_2@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_3@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_4@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_5@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_6@event_target:raiding_marauder
			remove_relation_flag = {
				who = event_target:raiding_marauder
				flag = current_target
			}
			event_target:raiding_marauder = {
				remove_country_flag = raid_ongoing
				set_timed_country_flag = { flag = raid_cooldown days = @raidcooldown }
			}
			event_target:marauder_raiding_country = {
				random_owned_fleet = {
					limit = { has_fleet_flag = raiding_fleet }
					delete_fleet = this
				}
				destroy_country = yes
			}
		}
	}
	option = { # Refuse
		name = marauder.101.d
		trigger = {
			event_target:raiding_marauder = { has_country_flag = marauder_1 }
		}
		response_text = marauder.101.1.b.response
		default_hide_option = yes
	}
	### Marauder 2
	option = { # Offer Energy tribute
		name = marauder.101.a
		trigger = {
			event_target:raiding_marauder = { has_country_flag = marauder_2 }
		}
		response_text = marauder.101.2.a.response
		allow = {
			determine_energy_tribute = yes
		}
		tribute_cost_energy = yes
		hidden_effect = {
			remove_country_flag = raid_target_of@event_target:raiding_marauder
			remove_country_flag = under_marauder_attack
			remove_country_flag = marauder_tribute_1@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_2@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_3@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_4@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_5@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_6@event_target:raiding_marauder
			remove_relation_flag = {
				who = event_target:raiding_marauder
				flag = current_target
			}
			event_target:raiding_marauder = {
				remove_country_flag = raid_ongoing
				set_timed_country_flag = { flag = raid_cooldown days = @raidcooldown }
			}
			event_target:marauder_raiding_country = {
				random_owned_fleet = {
					limit = { has_fleet_flag = raiding_fleet }
					delete_fleet = this
				}
				destroy_country = yes
			}
		}
	}
	option = { # Offer Mineral tribute
		name = marauder.101.b
		trigger = {
			event_target:raiding_marauder = { has_country_flag = marauder_2 }
		}
		response_text = marauder.101.2.a.response
		allow = {
			determine_mineral_tribute = yes
		}
		tribute_cost_minerals = yes
		hidden_effect = {
			remove_country_flag = raid_target_of@event_target:raiding_marauder
			remove_country_flag = under_marauder_attack
			remove_country_flag = marauder_tribute_1@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_2@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_3@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_4@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_5@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_6@event_target:raiding_marauder
			remove_relation_flag = {
				who = event_target:raiding_marauder
				flag = current_target
			}
			event_target:raiding_marauder = {
				remove_country_flag = raid_ongoing
				set_timed_country_flag = { flag = raid_cooldown days = @raidcooldown }
			}
			event_target:marauder_raiding_country = {
				random_owned_fleet = {
					limit = { has_fleet_flag = raiding_fleet }
					delete_fleet = this
				}
				destroy_country = yes
			}
		}
	}
	option = { # Offer Food tribute
		name = marauder.101.c
		trigger = {
			event_target:raiding_marauder = { has_country_flag = marauder_2 }
		}
		response_text = marauder.101.2.a.response
		allow = {
			determine_food_tribute = yes
		}
		tribute_cost_food = yes
		hidden_effect = {
			remove_country_flag = raid_target_of@event_target:raiding_marauder
			remove_country_flag = under_marauder_attack
			remove_country_flag = marauder_tribute_1@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_2@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_3@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_4@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_5@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_6@event_target:raiding_marauder
			remove_relation_flag = {
				who = event_target:raiding_marauder
				flag = current_target
			}
			event_target:raiding_marauder = {
				remove_country_flag = raid_ongoing
				set_timed_country_flag = { flag = raid_cooldown days = @raidcooldown }
			}
			event_target:marauder_raiding_country = {
				random_owned_fleet = {
					limit = { has_fleet_flag = raiding_fleet }
					delete_fleet = this
				}
				destroy_country = yes
			}
		}
	}
	option = { # Refuse
		name = marauder.101.d
		trigger = {
			event_target:raiding_marauder = { has_country_flag = marauder_2 }
		}
		response_text = marauder.101.2.b.response
		default_hide_option = yes
	}

	### Marauder 3
	option = { # Offer Energy tribute
		name = marauder.101.a
		trigger = {
			event_target:raiding_marauder = { has_country_flag = marauder_3 }
		}
		response_text = marauder.101.3.a.response
		allow = {
			determine_energy_tribute = yes
		}
		tribute_cost_energy = yes
		hidden_effect = {
			remove_country_flag = raid_target_of@event_target:raiding_marauder
			remove_country_flag = under_marauder_attack
			remove_country_flag = marauder_tribute_1@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_2@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_3@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_4@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_5@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_6@event_target:raiding_marauder
			remove_relation_flag = {
				who = event_target:raiding_marauder
				flag = current_target
			}
			event_target:raiding_marauder = {
				remove_country_flag = raid_ongoing
				set_timed_country_flag = { flag = raid_cooldown days = @raidcooldown }
			}
			event_target:marauder_raiding_country = {
				random_owned_fleet = {
					limit = { has_fleet_flag = raiding_fleet }
					delete_fleet = this
				}
				destroy_country = yes
			}
		}
	}
	option = { # Offer Mineral tribute
		name = marauder.101.b
		trigger = {
			event_target:raiding_marauder = { has_country_flag = marauder_3 }
		}
		response_text = marauder.101.3.a.response
		allow = {
			determine_mineral_tribute = yes
		}
		tribute_cost_minerals = yes
		hidden_effect = {
			remove_country_flag = raid_target_of@event_target:raiding_marauder
			remove_country_flag = under_marauder_attack
			remove_country_flag = marauder_tribute_1@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_2@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_3@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_4@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_5@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_6@event_target:raiding_marauder
			remove_relation_flag = {
				who = event_target:raiding_marauder
				flag = current_target
			}
			event_target:raiding_marauder = {
				remove_country_flag = raid_ongoing
				set_timed_country_flag = { flag = raid_cooldown days = @raidcooldown }
			}
			event_target:marauder_raiding_country = {
				random_owned_fleet = {
					limit = { has_fleet_flag = raiding_fleet }
					delete_fleet = this
				}
				destroy_country = yes
			}
		}
	}
	option = { # Offer Food tribute
		name = marauder.101.c
		trigger = {
			event_target:raiding_marauder = { has_country_flag = marauder_3 }
		}
		response_text = marauder.101.3.a.response
		allow = {
			determine_food_tribute = yes
		}
		tribute_cost_food = yes
		hidden_effect = {
			remove_country_flag = raid_target_of@event_target:raiding_marauder
			remove_country_flag = under_marauder_attack
			remove_country_flag = marauder_tribute_1@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_2@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_3@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_4@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_5@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_6@event_target:raiding_marauder
			remove_relation_flag = {
				who = event_target:raiding_marauder
				flag = current_target
			}
			event_target:raiding_marauder = {
				remove_country_flag = raid_ongoing
				set_timed_country_flag = { flag = raid_cooldown days = @raidcooldown }
			}
			event_target:marauder_raiding_country = {
				random_owned_fleet = {
					limit = { has_fleet_flag = raiding_fleet }
					delete_fleet = this
				}
				destroy_country = yes
			}
		}
	}
	option = { # Refuse
		name = marauder.101.d
		trigger = {
			event_target:raiding_marauder = { has_country_flag = marauder_3 }
		}
		response_text = marauder.101.3.b.response
		default_hide_option = yes
	}
}

# Marauder Diplomacy while target of raid
country_event = {
	id = marauder.102
	title = "marauder_diplo_header_3"
	desc = {
		text = marauder.102.1.desc
		trigger = {
			from = { has_country_flag = marauder_1 }
		}
	}
	desc = {
		text = marauder.102.2.desc
		trigger = {
			from = { has_country_flag = marauder_2 }
		}
	}
	desc = {
		text = marauder.102.3.desc
		trigger = {
			from = { has_country_flag = marauder_3 }
		}
	}

	diplomatic = yes

	picture_event_data = {
		portrait = from
		room = "ethic_spaceship_room"
	}

	is_triggered_only = yes

	trigger = {
		OR = {
			AND = {
				has_relation_flag = {
					who = from
					flag = current_target
				}
				from = { is_country_type = dormant_marauders }
			}
			AND = {
				from = { is_country_type = marauder_raiders }
				any_country = {
					is_country_type = dormant_marauders
					has_country_flag = parent_of@from
					root = {
						has_relation_flag = {
							who = prev
							flag = current_target
						}
					}

				}
			}
		}
		NOT = { has_country_flag = marauder_diplomacy_engaged }
	}

	immediate = {
		from = {
			owner_species = { save_event_target_as = marauder_species }
		}
		set_country_flag = marauder_diplomacy_engaged
		if = {
			limit = {
				from = { is_country_type = marauder_raiders }
			}
			random_country = {
				limit = {
					is_country_type = dormant_marauders
					has_country_flag = parent_of@from
				}
				save_event_target_as = marauder_country
			}
			from = { save_event_target_as = marauder_raiding_country }
		}
		else = {
			from = { save_event_target_as = marauder_country }
			random_country = {
				limit = {
					is_country_type = marauder_raiders
					from = { has_country_flag = parent_of@prev }
				}
				save_event_target_as = marauder_raiding_country
			}
		}
	}

	after = {
		hidden_effect = {
			remove_country_flag = marauder_diplomacy_engaged
		}
	}

	# Marauder 1
	option = { # Offer Energy tribute
		name = marauder.101.a
		response_text = marauder.102.1.a.response
		trigger = {
			from = { has_country_flag = marauder_1 }
		}
		allow = {
			determine_energy_tribute_raided = yes
		}
		tribute_cost_energy_raided = yes
		hidden_effect = {
			remove_country_flag = raid_target_of@event_target:marauder_country
			remove_country_flag = under_marauder_attack
			#remove_country_flag = marauder_tribute_1@event_target:marauder_country
			#remove_country_flag = marauder_tribute_2@event_target:marauder_country
			#remove_country_flag = marauder_tribute_3@event_target:marauder_country
			#remove_country_flag = marauder_tribute_4@event_target:marauder_country
			#remove_country_flag = marauder_tribute_5@event_target:marauder_country
			#remove_country_flag = marauder_tribute_6@event_target:marauder_country
			remove_relation_flag = {
				who = event_target:marauder_country
				flag = current_target
			}
			event_target:marauder_country = {
				remove_country_flag = raid_ongoing
				set_timed_country_flag = { flag = raid_cooldown days = @raidcooldown }
			}
			event_target:marauder_raiding_country = {
				random_owned_fleet = {
					limit = { has_fleet_flag = raiding_fleet }
					delete_fleet = this
				}
				destroy_country = yes
			}
		}
	}
	option = { # Offer Mineral tribute
		name = marauder.101.b
		response_text = marauder.102.1.a.response
		trigger = {
			from = { has_country_flag = marauder_1 }
		}
		allow = {
			determine_mineral_tribute_raided = yes
		}
		tribute_cost_minerals_raided = yes
		hidden_effect = {
			remove_country_flag = raid_target_of@event_target:marauder_country
			remove_country_flag = under_marauder_attack
			#remove_country_flag = marauder_tribute_1@event_target:marauder_country
			#remove_country_flag = marauder_tribute_2@event_target:marauder_country
			#remove_country_flag = marauder_tribute_3@event_target:marauder_country
			#remove_country_flag = marauder_tribute_4@event_target:marauder_country
			#remove_country_flag = marauder_tribute_5@event_target:marauder_country
			#remove_country_flag = marauder_tribute_6@event_target:marauder_country
			remove_relation_flag = {
				who = event_target:marauder_country
				flag = current_target
			}
			event_target:marauder_country = {
				remove_country_flag = raid_ongoing
				set_timed_country_flag = { flag = raid_cooldown days = @raidcooldown }
			}
			event_target:marauder_raiding_country = {
				random_owned_fleet = {
					limit = { has_fleet_flag = raiding_fleet }
					delete_fleet = this
				}
				destroy_country = yes
			}
		}
	}
	option = { # Offer Food tribute
		name = marauder.101.c
		response_text = marauder.102.1.a.response
		trigger = {
			from = { has_country_flag = marauder_1 }
		}
		allow = {
			determine_food_tribute_raided = yes
		}
		tribute_cost_food_raided = yes
		hidden_effect = {
			remove_country_flag = raid_target_of@event_target:marauder_country
			remove_country_flag = under_marauder_attack
			#remove_country_flag = marauder_tribute_1@event_target:marauder_country
			#remove_country_flag = marauder_tribute_2@event_target:marauder_country
			#remove_country_flag = marauder_tribute_3@event_target:marauder_country
			#remove_country_flag = marauder_tribute_4@event_target:marauder_country
			#remove_country_flag = marauder_tribute_5@event_target:marauder_country
			#remove_country_flag = marauder_tribute_6@event_target:marauder_country
			remove_relation_flag = {
				who = event_target:marauder_country
				flag = current_target
			}
			event_target:marauder_country = {
				remove_country_flag = raid_ongoing
				set_timed_country_flag = { flag = raid_cooldown days = @raidcooldown }
			}
			event_target:marauder_raiding_country = {
				random_owned_fleet = {
					limit = { has_fleet_flag = raiding_fleet }
					delete_fleet = this
				}
				destroy_country = yes
			}
		}
	}
	option = { # Ugly
		name = marauder.102.d
		response_text = marauder.102.1.b.response
		is_dialog_only = yes
		trigger = {
			from = { has_country_flag = marauder_1 }
			NOR = {
				has_country_flag = marauder_ugly
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
			}
		}
		set_country_flag = marauder_ugly
	}

	# Marauder 2
	option = { # Offer Energy tribute
		name = marauder.101.a
		response_text = marauder.102.2.a.response
		trigger = {
			from = { has_country_flag = marauder_2 }
		}
		allow = {
			determine_energy_tribute_raided = yes
		}
		tribute_cost_energy_raided = yes
		hidden_effect = {
			remove_country_flag = raid_target_of@event_target:marauder_country
			remove_country_flag = under_marauder_attack
			#remove_country_flag = marauder_tribute_1@event_target:marauder_country
			#remove_country_flag = marauder_tribute_2@event_target:marauder_country
			#remove_country_flag = marauder_tribute_3@event_target:marauder_country
			#remove_country_flag = marauder_tribute_4@event_target:marauder_country
			#remove_country_flag = marauder_tribute_5@event_target:marauder_country
			#remove_country_flag = marauder_tribute_6@event_target:marauder_country
			remove_relation_flag = {
				who = event_target:marauder_country
				flag = current_target
			}
			event_target:marauder_country = {
				remove_country_flag = raid_ongoing
				set_timed_country_flag = { flag = raid_cooldown days = @raidcooldown }
			}
			event_target:marauder_raiding_country = {
				random_owned_fleet = {
					limit = { has_fleet_flag = raiding_fleet }
					delete_fleet = this
				}
				destroy_country = yes
			}
		}
	}
	option = { # Offer Mineral tribute
		name = marauder.101.b
		response_text = marauder.102.2.a.response
		trigger = {
			from = { has_country_flag = marauder_2 }
		}
		allow = {
			determine_mineral_tribute_raided = yes
		}
		tribute_cost_minerals_raided = yes
		hidden_effect = {
			remove_country_flag = raid_target_of@event_target:marauder_country
			remove_country_flag = under_marauder_attack
			#remove_country_flag = marauder_tribute_1@event_target:marauder_country
			#remove_country_flag = marauder_tribute_2@event_target:marauder_country
			#remove_country_flag = marauder_tribute_3@event_target:marauder_country
			#remove_country_flag = marauder_tribute_4@event_target:marauder_country
			#remove_country_flag = marauder_tribute_5@event_target:marauder_country
			#remove_country_flag = marauder_tribute_6@event_target:marauder_country
			remove_relation_flag = {
				who = event_target:marauder_country
				flag = current_target
			}
			event_target:marauder_country = {
				remove_country_flag = raid_ongoing
				set_timed_country_flag = { flag = raid_cooldown days = @raidcooldown }
			}
			event_target:marauder_raiding_country = {
				random_owned_fleet = {
					limit = { has_fleet_flag = raiding_fleet }
					delete_fleet = this
				}
				destroy_country = yes
			}
		}
	}
	option = { # Offer Food tribute
		name = marauder.101.c
		response_text = marauder.102.2.a.response
		trigger = {
			from = { has_country_flag = marauder_2 }
		}
		allow = {
			determine_food_tribute_raided = yes
		}
		tribute_cost_food_raided = yes
		hidden_effect = {
			remove_country_flag = raid_target_of@event_target:marauder_country
			remove_country_flag = under_marauder_attack
			#remove_country_flag = marauder_tribute_1@event_target:marauder_country
			#remove_country_flag = marauder_tribute_2@event_target:marauder_country
			#remove_country_flag = marauder_tribute_3@event_target:marauder_country
			#remove_country_flag = marauder_tribute_4@event_target:marauder_country
			#remove_country_flag = marauder_tribute_5@event_target:marauder_country
			#remove_country_flag = marauder_tribute_6@event_target:marauder_country
			remove_relation_flag = {
				who = event_target:marauder_country
				flag = current_target
			}
			event_target:marauder_country = {
				remove_country_flag = raid_ongoing
				set_timed_country_flag = { flag = raid_cooldown days = @raidcooldown }
			}
			event_target:marauder_raiding_country = {
				random_owned_fleet = {
					limit = { has_fleet_flag = raiding_fleet }
					delete_fleet = this
				}
				destroy_country = yes
			}
		}
	}

	# Marauder 3
	option = { # Offer Energy tribute
		name = marauder.101.a
		response_text = marauder.102.3.a.response
		trigger = {
			from = { has_country_flag = marauder_3 }
		}
		allow = {
			determine_energy_tribute_raided = yes
		}
		tribute_cost_energy_raided = yes
		hidden_effect = {
			remove_country_flag = raid_target_of@event_target:marauder_country
			remove_country_flag = under_marauder_attack
			#remove_country_flag = marauder_tribute_1@event_target:marauder_country
			#remove_country_flag = marauder_tribute_2@event_target:marauder_country
			#remove_country_flag = marauder_tribute_3@event_target:marauder_country
			#remove_country_flag = marauder_tribute_4@event_target:marauder_country
			#remove_country_flag = marauder_tribute_5@event_target:marauder_country
			#remove_country_flag = marauder_tribute_6@event_target:marauder_country
			remove_relation_flag = {
				who = event_target:marauder_country
				flag = current_target
			}
			event_target:marauder_country = {
				remove_country_flag = raid_ongoing
				set_timed_country_flag = { flag = raid_cooldown days = @raidcooldown }
			}
			event_target:marauder_raiding_country = {
				random_owned_fleet = {
					limit = { has_fleet_flag = raiding_fleet }
					delete_fleet = this
				}
				destroy_country = yes
			}
		}
	}
	option = { # Offer Mineral tribute
		name = marauder.101.b
		response_text = marauder.102.3.a.response
		trigger = {
			from = { has_country_flag = marauder_3 }
		}
		allow = {
			determine_mineral_tribute_raided = yes
		}
		tribute_cost_minerals_raided = yes
		hidden_effect = {
			remove_country_flag = raid_target_of@event_target:marauder_country
			remove_country_flag = under_marauder_attack
			#remove_country_flag = marauder_tribute_1@event_target:marauder_country
			#remove_country_flag = marauder_tribute_2@event_target:marauder_country
			#remove_country_flag = marauder_tribute_3@event_target:marauder_country
			#remove_country_flag = marauder_tribute_4@event_target:marauder_country
			#remove_country_flag = marauder_tribute_5@event_target:marauder_country
			#remove_country_flag = marauder_tribute_6@event_target:marauder_country
			remove_relation_flag = {
				who = event_target:marauder_country
				flag = current_target
			}
			event_target:marauder_country = {
				remove_country_flag = raid_ongoing
				set_timed_country_flag = { flag = raid_cooldown days = @raidcooldown }
			}
			event_target:marauder_raiding_country = {
				random_owned_fleet = {
					limit = { has_fleet_flag = raiding_fleet }
					delete_fleet = this
				}
				destroy_country = yes
			}
		}
	}
	option = { # Offer Food tribute
		name = marauder.101.c
		response_text = marauder.102.3.a.response
		trigger = {
			from = { has_country_flag = marauder_3 }
		}
		allow = {
			determine_food_tribute_raided = yes
		}
		tribute_cost_food_raided = yes
		hidden_effect = {
			remove_country_flag = raid_target_of@event_target:marauder_country
			remove_country_flag = under_marauder_attack
			#remove_country_flag = marauder_tribute_1@event_target:marauder_country
			#remove_country_flag = marauder_tribute_2@event_target:marauder_country
			#remove_country_flag = marauder_tribute_3@event_target:marauder_country
			#remove_country_flag = marauder_tribute_4@event_target:marauder_country
			#remove_country_flag = marauder_tribute_5@event_target:marauder_country
			#remove_country_flag = marauder_tribute_6@event_target:marauder_country
			remove_relation_flag = {
				who = event_target:marauder_country
				flag = current_target
			}
			event_target:marauder_country = {
				remove_country_flag = raid_ongoing
				set_timed_country_flag = { flag = raid_cooldown days = @raidcooldown }
			}
			event_target:marauder_raiding_country = {
				random_owned_fleet = {
					limit = { has_fleet_flag = raiding_fleet }
					delete_fleet = this
				}
				destroy_country = yes
			}
		}
	}

	option = { # Refuse
		name = marauder.102.e
		default_hide_option = yes
	}
}

# Raiders Hit Planet (HIDDEN)
planet_event = {
	id = marauder.103
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		planet_devastation >= 15
		from = { is_country_type = marauder_raiders }
		owner = {
			OR = {
				is_country_type = default
				is_country_type = awakened_fallen_empire
				is_country_type = fallen_empire
			}
		}
		NOT = { has_planet_flag = planet_raided }
	}

	immediate = {
		owner = { save_event_target_as = raid_victim }
		random_country = {
			limit = {
				is_country_type = dormant_marauders
				has_country_flag = parent_of@from
			}
			save_event_target_as = marauder_country
		}
		set_timed_planet_flag = {
			flag = planet_raided
			days = 600
		}
		from = {
			random_owned_fleet = {
				limit = { has_fleet_flag = raiding_fleet }
				fleet_event = { id = marauder.110 days = 20 }
			}
		}
		if = {
			limit = {
				owner = {
					NOT = { has_ethic = ethic_gestalt_consciousness }
				}
			}
			random_list = {
				50 = { planet_event = { id = marauder.104 } }
				50 = { planet_event = { id = marauder.105 } }
			}
			break = yes
		}
		if = {
			limit = {
				owner = {
					has_authority = auth_machine_intelligence
					NOT = { has_valid_civic = civic_machine_servitor }
				}
			}
			planet_event = { id = marauder.106 }
			break = yes
		}
		if = {
			limit = {
				owner = { has_valid_civic = civic_machine_servitor }
			}
			planet_event = { id = marauder.107 }
			break = yes
		}
		if = {
			limit = {
				owner = { has_authority = auth_hive_mind }
			}
			planet_event = { id = marauder.108 }
			break = yes
		}
	}
}

# Raiders Hit Planet
planet_event = {
	id = marauder.104
	title = "marauder.104.name"
	desc = "marauder.104.desc"
	picture = GFX_evt_burning_settlement
	show_sound = event_planetary_riot
	location = root

	is_triggered_only = yes

	option = {
		name = marauder.104.a
		owner = {
			if = {
				limit = { has_country_flag = marauder_tribute_1@event_target:marauder_country }
				add_resource = {
					energy = -200
					minerals = -200
					food = -50
				}
			}
			else_if = {
				limit = { has_country_flag = marauder_tribute_2@event_target:marauder_country }
				add_resource = {
					energy = -300
					minerals = -300
					food = -100
				}
			}
			else_if = {
				limit = { has_country_flag = marauder_tribute_3@event_target:marauder_country }
				add_resource = {
					energy = -500
					minerals = -500
					food = -150
				}
			}
			else_if = {
				limit = { has_country_flag = marauder_tribute_4@event_target:marauder_country }
				add_resource = {
					energy = -700
					minerals = -700
					food = -200
				}
			}
			else_if = {
				limit = { has_country_flag = marauder_tribute_5@event_target:marauder_country }
				add_resource = {
					energy = -900
					minerals = -900
					food = -250
				}
			}
			else_if = {
				limit = { has_country_flag = marauder_tribute_6@event_target:marauder_country }
				add_resource = {
					energy = -1100
					minerals = -1100
					food = -300
				}
			}
		}
	}
}

# Raiders Hit Planet (Slaves)
planet_event = {
	id = marauder.105
	title = "marauder.104.name"
	desc = "marauder.105.desc"
	picture = GFX_evt_surrender
	show_sound = event_planetary_riot
	location = root

	is_triggered_only = yes

	option = {
		name = marauder.105.a
		if = {
			limit = { num_pops > 1 }
			random_owned_pop = {
				kill_pop = yes
			}
		}
		if = {
			limit = { num_pops > 1 }
			random_owned_pop = {
				kill_pop = yes
			}
		}
	}
}

# Raiders Hit Planet (Machine Empire)
planet_event = {
	id = marauder.106
	title = "marauder.104.name"
	desc = "marauder.106.desc"
	picture = GFX_evt_burning_settlement
	show_sound = event_planetary_riot
	location = root

	is_triggered_only = yes

	option = {
		name = marauder.106.a
		owner = {
			if = {
				limit = { has_country_flag = marauder_tribute_1@event_target:marauder_country }
				add_resource = {
					energy = -200
					minerals = -200
					food = -50
				}
			}
			else_if = {
				limit = { has_country_flag = marauder_tribute_2@event_target:marauder_country }
				add_resource = {
					energy = -300
					minerals = -300
					food = -100
				}
			}
			else_if = {
				limit = { has_country_flag = marauder_tribute_3@event_target:marauder_country }
				add_resource = {
					energy = -500
					minerals = -500
					food = -150
				}
			}
			else_if = {
				limit = { has_country_flag = marauder_tribute_4@event_target:marauder_country }
				add_resource = {
					energy = -700
					minerals = -700
					food = -200
				}
			}
			else_if = {
				limit = { has_country_flag = marauder_tribute_5@event_target:marauder_country }
				add_resource = {
					energy = -900
					minerals = -900
					food = -250
				}
				break = yes
			}
			else_if = {
				limit = { has_country_flag = marauder_tribute_6@event_target:marauder_country }
				add_resource = {
					energy = -1100
					minerals = -1100
					food = -300
				}
			}
		}
	}
}

# Raiders Hit Planet (Servitor Machines)
planet_event = {
	id = marauder.107
	title = "marauder.104.name"
	desc = "marauder.107.desc"
	picture = GFX_evt_burning_settlement
	show_sound = event_planetary_riot
	location = root

	is_triggered_only = yes

	option = {
		name = marauder.107.a
		random_owned_pop = {
			limit = {
				is_robot_pop = no
				is_sapient = yes
			}
			kill_pop = yes
		}
		random_owned_pop = {
			limit = {
				is_robot_pop = no
				is_sapient = yes
			}
			kill_pop = yes
		}
		random_owned_pop = {
			limit = {
				is_robot_pop = no
				is_sapient = yes
			}
			kill_pop = yes
		}
		random_owned_pop = {
			limit = {
				is_robot_pop = no
				is_sapient = yes
			}
			kill_pop = yes
		}
	}
}

# Raiders Hit Planet (Hive Mind)
planet_event = {
	id = marauder.108
	title = "marauder.104.name"
	desc = "marauder.108.desc"
	picture = GFX_evt_burning_settlement
	show_sound = event_planetary_riot
	location = root

	is_triggered_only = yes

	option = {
		name = marauder.108.a
	owner = {
			if = {
				limit = { has_country_flag = marauder_tribute_1@event_target:marauder_country }
				add_resource = {
					energy = -200
					minerals = -200
					food = -50
				}
			}
			else_if = {
				limit = { has_country_flag = marauder_tribute_2@event_target:marauder_country }
				add_resource = {
					energy = -300
					minerals = -300
					food = -100
				}
			}
			else_if = {
				limit = { has_country_flag = marauder_tribute_3@event_target:marauder_country }
				add_resource = {
					energy = -500
					minerals = -500
					food = -150
				}
			}
			else_if = {
				limit = { has_country_flag = marauder_tribute_4@event_target:marauder_country }
				add_resource = {
					energy = -700
					minerals = -700
					food = -200
				}
			}
			else_if = {
				limit = { has_country_flag = marauder_tribute_5@event_target:marauder_country }
				add_resource = {
					energy = -900
					minerals = -900
					food = -250
				}
			}
			else_if = {
				limit = { has_country_flag = marauder_tribute_6@event_target:marauder_country }
				add_resource = {
					energy = -1100
					minerals = -1100
					food = -300
				}
			}
		}
	}
}

# Raiders Withdraw (HIDDEN)
fleet_event = {
	id = marauder.110
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		set_fleet_flag = raid_accomplished
		owner = {
			save_event_target_as = raiding_marauder
			if = {
				limit = { has_country_flag = marauder_1 }
				random_system = {
					limit = { has_star_flag = marauder_capital_1 }
					solar_system = { save_event_target_as = marauder_system }
					random_system_planet = {
						limit = { has_planet_flag = raid_source }
						save_event_target_as = raid_source
					}
				}
			}
			if = {
				limit = { has_country_flag = marauder_2 }
				random_system = {
					limit = { has_star_flag = marauder_capital_2 }
					solar_system = { save_event_target_as = marauder_system }
					random_system_planet = {
						limit = { has_planet_flag = raid_source }
						save_event_target_as = raid_source
					}
				}
			}
			if = {
				limit = { has_country_flag = marauder_3 }
				random_system = {
					limit = { has_star_flag = marauder_capital_3 }
					solar_system = { save_event_target_as = marauder_system }
					random_system_planet = {
						limit = { has_planet_flag = raid_source }
						save_event_target_as = raid_source
					}
				}
			}
		}
		solar_system = { save_event_target_as = fleet_system }
		clear_fleet_actions = this
		auto_move_to_planet = {
			target = event_target:raid_source
			destroy_on_arrival = yes
			clear_auto_move_on_arrival = yes
		}
		fleet_event = { id = marauder.118 days = 360 } # Kill fleet after 1 year regardless
		random_country = {
			limit = {
				is_country_type = dormant_marauders
				has_country_flag = parent_of@root.owner
			}
			save_event_target_as = raid_parent
			remove_country_flag = raid_ongoing
			set_timed_country_flag = { flag = raid_cooldown days = @raidcooldown }
		}
		owner = { remove_country_flag = raid_ongoing }
		if = {
			limit = {
				exists = event_target:raid_parent
			}
			event_target:raid_victim = {
				country_event = { id = marauder.111 }
				remove_country_flag = raid_target_of@event_target:raid_parent
				remove_country_flag = under_marauder_attack
				remove_country_flag = marauder_tribute_1@event_target:raid_parent
				remove_country_flag = marauder_tribute_2@event_target:raid_parent
				remove_country_flag = marauder_tribute_3@event_target:raid_parent
				remove_country_flag = marauder_tribute_4@event_target:raid_parent
				remove_country_flag = marauder_tribute_5@event_target:raid_parent
				remove_country_flag = marauder_tribute_6@event_target:raid_parent
				remove_relation_flag = {
					who = event_target:raid_parent
					flag = current_target
				}
				remove_relation_flag = {
					who = event_target:raid_parent
					flag = current_hired_target
				}
			}
			if = {
				limit = {
					any_country = { has_country_flag = hired@event_target:raid_parent }
				}
				random_country = {
					limit = { has_country_flag = hired@event_target:raid_parent }
					country_event = { id = marauder.122 }
					remove_country_flag = hired@event_target:raid_parent
				}
			}
		}
	}
}

# Raiders Withdraw
country_event = {
	id = marauder.111
	title = "marauder_diplo_header_4"
	desc = {
		text = marauder.111.1.desc
		trigger = {
			event_target:raid_parent = { has_country_flag = marauder_1 }
		}
	}
	desc = {
		text = marauder.111.2.desc
		trigger = {
			event_target:raid_parent = { has_country_flag = marauder_2 }
		}
	}
	desc = {
		text = marauder.111.3.desc
		trigger = {
			event_target:raid_parent = { has_country_flag = marauder_3 }
		}
	}

	diplomatic = yes

	picture_event_data = {
		portrait = event_target:raid_parent
		room = "ethic_spaceship_room"
	}

	is_triggered_only = yes

	option = {
		name = marauder.111.a
	}
}

# Marauder Diplomacy while target of Hired raid
country_event = {
	id = marauder.112
	title = "marauder_diplo_header_3"
	desc = {
		text = marauder.112.1.desc
		trigger = {
			from = { has_country_flag = marauder_1 }
		}
	}
	desc = {
		text = marauder.112.2.desc
		trigger = {
			from = { has_country_flag = marauder_2 }
		}
	}
	desc = {
		text = marauder.112.3.desc
		trigger = {
			from = { has_country_flag = marauder_3 }
		}
	}

	diplomatic = yes

	picture_event_data = {
		portrait = from
		room = "ethic_spaceship_room"
	}

	is_triggered_only = yes

	trigger = {
		OR = {
			AND = {
				has_relation_flag = {
					who = from
					flag = current_hired_target
				}
				from = { is_country_type = dormant_marauders }
			}
			AND = {
				from = { is_country_type = marauder_raiders }
				any_country = {
					is_country_type = dormant_marauders
					has_country_flag = parent_of@from
					root = {
						has_relation_flag = {
							who = prev
							flag = current_hired_target
						}
					}

				}
			}
		}
		NOT = { has_country_flag = marauder_diplomacy_engaged }
	}

	immediate = {
		from = {
			owner_species = { save_event_target_as = marauder_species }
		}
		set_country_flag = marauder_diplomacy_engaged
	}

	after = {
		hidden_effect = {
			remove_country_flag = marauder_diplomacy_engaged
		}
	}

	# Marauder 1
	option = {
		name = marauder.112.a
		trigger = {
			from = {
				has_country_flag = marauder_1
				NOR = {
					has_valid_civic = "civic_fanatic_purifiers"
					has_valid_civic = "civic_hive_devouring_swarm"
					has_valid_civic = "civic_machine_terminator"
				}
			}
		}
		response_text = marauder.112.1.a.response
	}

	# Marauder 2
	option = {
		name = marauder.112.a
		trigger = {
			from = {
				has_country_flag = marauder_2
				NOR = {
					has_valid_civic = "civic_fanatic_purifiers"
					has_valid_civic = "civic_hive_devouring_swarm"
					has_valid_civic = "civic_machine_terminator"
				}
			}
		}
		response_text = marauder.112.2.a.response
	}

	# Marauder 3
	option = {
		name = marauder.112.a
		trigger = {
			from = {
				has_country_flag = marauder_3
				NOR = {
					has_valid_civic = "civic_fanatic_purifiers"
					has_valid_civic = "civic_hive_devouring_swarm"
					has_valid_civic = "civic_machine_terminator"
				}
			}
		}
		response_text = marauder.112.3.a.response
	}

	option = {
		name = marauder.112.b
		default_hide_option = yes
	}
}

# Raiders Driven Off (HIDDEN)
event = {
	id = marauder.113
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		any_country = {
			is_country_type = marauder_raiders
			has_country_flag = raid_ongoing
			any_owned_fleet = {
				exists = solar_system
				OR = {
					AND = {
						has_fleet_flag = marauder_raider_fleet_1
						NOT = { has_fleet_flag = raid_accomplished }
						is_in_combat = no
						fleet_power < 1500
					}
					AND = {
						has_fleet_flag = marauder_raider_fleet_2
						NOT = { has_fleet_flag = raid_accomplished }
						is_in_combat = no
						fleet_power < 2500
					}
					AND = {
						has_fleet_flag = marauder_raider_fleet_3
						NOT = { has_fleet_flag = raid_accomplished }
						is_in_combat = no
						fleet_power < 3500
					}
					AND = {
						has_fleet_flag = marauder_raider_fleet_4
						NOT = { has_fleet_flag = raid_accomplished }
						is_in_combat = no
						fleet_power < 6500
					}
				}
			}
		}
	}

	immediate = {
		random_country = {
			limit = {
				is_country_type = marauder_raiders
				has_country_flag = raid_ongoing
				any_owned_fleet = {
					exists = solar_system
					OR = {
						AND = {
							has_fleet_flag = marauder_raider_fleet_1
							is_in_combat = no
							fleet_power < 1500
						}
						AND = {
							has_fleet_flag = marauder_raider_fleet_2
							is_in_combat = no
							fleet_power < 2500
						}
						AND = {
							has_fleet_flag = marauder_raider_fleet_3
							is_in_combat = no
							fleet_power < 3500
						}
						AND = {
							has_fleet_flag = marauder_raider_fleet_4
							is_in_combat = no
							fleet_power < 6500
						}
					}
				}
			}
			save_event_target_as = marauder_raiding_country
			random_country = {
				limit = {
					has_country_flag = parent_of@event_target:marauder_raiding_country
				}
				save_event_target_as = marauder_country
			}
		}
		if = {
			limit = {
				NOT = { exists = event_target:marauder_country }
			}
			event_target:marauder_raiding_country = {
				every_owned_fleet = { fleet_event = { id = marauder.118 } }
			}
		}
		else = {
			event_target:marauder_country = {
				remove_country_flag = raid_ongoing
				set_timed_country_flag = { flag = raid_cooldown days = @raidcooldown }
				if = {
					limit = { has_country_flag = marauder_1 }
					random_system = {
						limit = { has_star_flag = marauder_capital_1 }
						random_system_planet = {
							limit = { has_planet_flag = raid_source }
							save_event_target_as = raid_source
						}
					}
				}
				if = {
					limit = { has_country_flag = marauder_2 }
					random_system = {
						limit = { has_star_flag = marauder_capital_2 }
						random_system_planet = {
							limit = { has_planet_flag = raid_source }
							save_event_target_as = raid_source
						}
					}
				}
				if = {
					limit = { has_country_flag = marauder_3 }
					random_system = {
						limit = { has_star_flag = marauder_capital_3 }
						random_system_planet = {
							limit = { has_planet_flag = raid_source }
							save_event_target_as = raid_source
						}
					}
				}
				event_target:marauder_raiding_country = {
					remove_country_flag = raid_ongoing
					every_owned_fleet = {
						remove_auto_move_target = yes
						if = {
							limit = { exists = solar_system }
							solar_system = { save_event_target_as = retreating_fleet_system }
						}
						auto_move_to_planet = {
							target = event_target:raid_source
							destroy_on_arrival = yes
							clear_auto_move_on_arrival = yes
						}
						fleet_event = { id = marauder.118 days = 360 } # Kill fleet after 1 year regardless
					}
				}
				random_country = {
					limit = { has_country_flag = raid_target_of@event_target:marauder_country }
					save_event_target_as = marauder_target
					country_event = { id = marauder.114 }
					remove_country_flag = raid_target_of@event_target:marauder_country
					remove_country_flag = under_marauder_attack
					remove_country_flag = marauder_tribute_1@event_target:marauder_country
					remove_country_flag = marauder_tribute_2@event_target:marauder_country
					remove_country_flag = marauder_tribute_3@event_target:marauder_country
					remove_country_flag = marauder_tribute_4@event_target:marauder_country
					remove_country_flag = marauder_tribute_5@event_target:marauder_country
					remove_country_flag = marauder_tribute_6@event_target:marauder_country
					remove_relation_flag = {
						who = event_target:marauder_country
						flag = current_target
					}
					remove_relation_flag = {
						who = event_target:marauder_country
						flag = current_hired_target
					}
				}
				if = {
					limit = {
						any_playable_country = {
							is_country_type = default
							has_country_flag = hired@event_target:marauder_country
						}
					}
					random_country = {
						limit = { has_country_flag = hired@event_target:marauder_country }
						country_event = { id = marauder.117 }
						remove_country_flag = hired@event_target:marauder_country
					}
				}
			}
		}
	}
}

# Raiders Driven Off
country_event = {
	id = marauder.114
	title = "marauder.114.name"
	desc = "marauder.114.desc"
	picture = GFX_evt_small_space_battle
	show_sound = event_radio_chatter
	location = event_target:retreating_fleet_system

	is_triggered_only = yes

	option = {
		name = marauder.114.a
	}
}

# Raider fleet destroyed (HIDDEN)
country_event = {
	id = marauder.115
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		is_country_type = marauder_raiders
		has_country_flag = raid_ongoing
		fromfrom = {
			has_fleet_flag = raiding_fleet
		}
	}

	immediate = {
		remove_country_flag = raid_ongoing
		if = {
			limit = {
				any_country = {
					has_country_flag = parent_of@root
				}
			}
			random_country = {
				limit = {
					has_country_flag = parent_of@root
				}
				save_event_target_as = raiding_marauder
			}
			fromfrom = {
				solar_system = { save_event_target_as = destroyed_fleet_system }
			}
			random_country = {
				limit = { has_country_flag = raid_target_of@event_target:raiding_marauder }
				country_event = { id = marauder.116 }
				remove_country_flag = raid_target_of@event_target:raiding_marauder
				remove_country_flag = under_marauder_attack
				remove_country_flag = marauder_tribute_1@event_target:raiding_marauder
				remove_country_flag = marauder_tribute_2@event_target:raiding_marauder
				remove_country_flag = marauder_tribute_3@event_target:raiding_marauder
				remove_country_flag = marauder_tribute_4@event_target:raiding_marauder
				remove_country_flag = marauder_tribute_5@event_target:raiding_marauder
				remove_country_flag = marauder_tribute_6@event_target:raiding_marauder
				remove_relation_flag = {
					who = event_target:raiding_marauder
					flag = current_target
				}
				remove_relation_flag = {
					who = event_target:raiding_marauder
					flag = current_hired_target
				}
			}
			event_target:raiding_marauder = {
				remove_country_flag = raid_ongoing
				set_timed_country_flag = { flag = raid_cooldown days = @raidcooldown }
				from = { save_event_target_as = fleet_destroyer }
				if = {
					limit = {
						any_playable_country = {
							is_country_type = default
							has_country_flag = hired@event_target:raiding_marauder
						}
					}
					random_country = {
						limit = { has_country_flag = hired@event_target:raiding_marauder }
						country_event = { id = marauder.124 }
						remove_country_flag = hired@event_target:raiding_marauder
					}
				}
			}
		}
	}
}

# Raider fleet destroyed
country_event = {
	id = marauder.116
	title = "marauder.116.name"
	desc = "marauder.116.desc"
	picture = GFX_evt_small_space_battle
	show_sound = event_radio_chatter
	location = event_target:destroyed_fleet_system

	is_triggered_only = yes

	option = {
		name = marauder.116.a
	}
}

# Raiders Driven Off (Hired Them)
country_event = {
	id = marauder.117
	title = "marauder.114.name"
	desc = "marauder.117.desc"
	picture = GFX_evt_pirate_armada
	show_sound = event_radio_chatter
	location = event_target:retreating_fleet_system

	is_triggered_only = yes

	option = {
		name = marauder.117.a
	}
}

# Kill Raiding Fleet if it gets stuck
fleet_event = {
	id = marauder.118
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		delete_fleet = this
	}
}

# Hired Raiders Approach
country_event = {
	id = marauder.120
	title = "marauder.120.name"
	desc = "marauder.120.desc"
	picture = GFX_evt_pirate_armada
	show_sound = event_radio_chatter

	is_triggered_only = yes

	option = {
		name = ONSCREEN
		hidden_effect = {
			country_event = { id = marauder.121 }
		}
	}
}

# Hired Raiders Approach (previously unknown)
country_event = {
	id = marauder.123
	title = "marauder.120.name"
	desc = "marauder.123.desc"
	picture = GFX_evt_pirate_armada
	show_sound = event_radio_chatter

	is_triggered_only = yes

	immediate = {
		establish_communications_no_message = event_target:raiding_marauder
	}

	option = {
		name = ONSCREEN
		hidden_effect = {
			country_event = { id = marauder.121 }
		}
	}
}

# Hired Raiders Approach - Transmission
country_event = {
	id = marauder.121
	title = "marauder_diplo_header_4"
	desc = {
		text = marauder.121.1.desc
		trigger = {
			event_target:raiding_marauder = { has_country_flag = marauder_1 }
		}
	}
	desc = {
		text = marauder.121.2.desc
		trigger = {
			event_target:raiding_marauder = { has_country_flag = marauder_2 }
		}
	}
	desc = {
		text = marauder.121.3.desc
		trigger = {
			event_target:raiding_marauder = { has_country_flag = marauder_3 }
		}
	}

	diplomatic = yes

	picture_event_data = {
		portrait = event_target:raiding_marauder
		room = "ethic_spaceship_room"
	}

	is_triggered_only = yes

	option = {
		name = marauder.121.a
	}
}

# Hired Raiders Return
country_event = {
	id = marauder.122
	title = "marauder.122.name"
	desc = "marauder.122.desc"
	picture = GFX_evt_pirate_armada
	show_sound = event_radio_chatter
	location = event_target:fleet_system

	is_triggered_only = yes

	option = {
		name = marauder.122.a
	}
}

# Hired Raiders Destroyed
country_event = {
	id = marauder.124
	title = "marauder.124.name"
	desc = "marauder.124.desc"
	picture = GFX_evt_small_space_battle
	show_sound = event_space_battle
	location = event_target:destroyed_fleet_system

	is_triggered_only = yes

	option = {
		name = marauder.124.a
	}
}

# AI hires Raiders
event = {
	id = marauder.150
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		years_passed >= 50
		any_playable_country = {
			is_country_type = default
			is_ai = yes
			is_homicidal = no
			any_rival_country = {
				NOR = {
					has_country_flag = under_marauder_attack
					has_country_flag = target_of_hired_ai_raid
				}
			}
			resource_stockpile_compare = { resource = energy value >= 5000 }
			any_relation = {
				is_country_type = dormant_marauders
				has_communications = prev
				NOR = {
					has_country_flag = raid_ongoing
					has_country_flag = raid_cooldown
				}
			}
		}
	}

	immediate = {
		# define hired_marauders for use in weights
		random_playable_country = {
			limit = {
				is_ai = yes
				is_homicidal = no
				any_rival_country = {
					NOR = {
						has_country_flag = under_marauder_attack
						has_country_flag = target_of_hired_ai_raid
					}
				}
				resource_stockpile_compare = { resource = energy value >= 5000 }
				any_relation = {
					is_country_type = dormant_marauders
					has_communications = prev
					NOR = {
						has_country_flag = raid_ongoing
						has_country_flag = raid_cooldown
					}
				}
			}
			save_event_target_as = hired_marauders
		}
		random_list = {
			3 = {
				modifier = {
					factor = 0
					event_target:hired_marauders = {
						OR = {
							has_ai_personality = honorbound_warriors
							has_ai_personality = xenophobic_isolationists
						}
					}
				}
				modifier = {
					factor = 0.6
					event_target:hired_marauders = {
						has_ai_personality = peaceful_traders
					}
				}
				# moved out of random_list
				#random_country = {
				#	limit = {
				#		is_country_type = default
				#		is_ai = yes
				#		NOR = {
				#			has_valid_civic = civic_fanatic_purifiers
				#			has_valid_civic = civic_hive_devouring_swarm
				#			has_valid_civic = civic_machine_terminator
				#		}
				#		any_relation = {
				#			prev = { is_rival = prev }
				#		}
				#		resource_stockpile_compare = { resource = energy value >= 5000 }
				#	}
				#	save_event_target_as = hired_marauders
				event_target:hired_marauders = {
					add_resource = { energy = @raidcost }
					random_rival_country = {
						limit = {
							NOR = {
								has_country_flag = under_marauder_attack
								has_country_flag = target_of_hired_ai_raid
							}
						}
						save_event_target_as = marauder_target
						set_timed_country_flag = { flag = target_of_hired_ai_raid days = 7200 }
					}
					random_relation = {
						limit = {
							is_country_type = dormant_marauders
							NOR = {
								has_country_flag = raid_ongoing
								has_country_flag = raid_cooldown
							}
						}
						save_event_target_as = raiding_marauder
					}
				}
				if = {
					limit = {
						event_target:raiding_marauder = { has_country_flag = marauder_1 }
					}
					random_system = {
						limit = { has_star_flag = marauder_capital_1 }
						save_event_target_as = marauder_system
						random_system_planet = {
							limit = { has_planet_flag = raid_source }
							save_event_target_as = raid_source
						}
					}
				}
				if = {
					limit = {
						event_target:raiding_marauder = { has_country_flag = marauder_2 }
					}
					random_system = {
						limit = { has_star_flag = marauder_capital_2 }
						save_event_target_as = marauder_system
						random_system_planet = {
							limit = { has_planet_flag = raid_source }
							save_event_target_as = raid_source
						}
					}
				}
				if = {
					limit = {
						event_target:raiding_marauder = { has_country_flag = marauder_3 }
					}
					random_system = {
						limit = { has_star_flag = marauder_capital_3 }
						save_event_target_as = marauder_system
						random_system_planet = {
							limit = { has_planet_flag = raid_source }
							save_event_target_as = raid_source
						}
					}
				}
				event_target:raiding_marauder = {
					set_country_flag = raid_ongoing
					owner_species = { save_event_target_as = marauder_species }
				}
				create_country = {
					name = event_target:raiding_marauder
					type = "marauder_raiders"
					species = event_target:marauder_species
					flag = event_target:raiding_marauder
					effect = {
						save_event_target_as = marauder_raiding_country
						if = {
							limit = { event_target:raiding_marauder = { has_country_flag = marauder_1 } }
							set_country_flag = marauder_1
						}
						if = {
							limit = { event_target:raiding_marauder = { has_country_flag = marauder_2 } }
							set_country_flag = marauder_2
						}
						if = {
							limit = { event_target:raiding_marauder = { has_country_flag = marauder_3 } }
							set_country_flag = marauder_3
						}
						set_country_flag = raid_ongoing
					}
				}
				event_target:marauder_raiding_country = {
					every_country = { establish_communications_no_message = event_target:marauder_raiding_country }
					event_target:raiding_marauder = {
						set_country_flag = parent_of@event_target:marauder_raiding_country
						set_faction_hostility = {
							target = event_target:marauder_raiding_country
							set_hostile = no
							set_neutral = no
							set_friendly = yes
						}
					}
					create_leader = {
						class = admiral
						species = event_target:marauder_species
						name = random
						skill = 3
						leader_age_min = 25
						leader_age_max = 45
						traits = {
							trait = random_trait
							trait = leader_trait_mercenary_warrior
						}
					}
					create_fleet = {
						name = "NAME_Raiding_Fleet"
						effect = {
							set_owner = event_target:raiding_marauder # For ship names
							create_marauder_raiders = yes
							set_location = event_target:raid_source
							set_fleet_stance = aggressive
							set_fleet_bombardment_stance = indiscriminate
							set_aggro_range_measure_from = self
							set_aggro_range = 150
							set_fleet_flag = hired_raiding_fleet
							set_fleet_flag = raiding_fleet
							set_owner = event_target:marauder_raiding_country # Real owner
							assign_leader = last_created_leader

							closest_system = {
								limit = {
									any_system_planet = {
										exists = owner
										owner = { is_same_empire = event_target:marauder_target }
										num_pops > 0
									}
								}
								save_event_target_as = raid_system
							}
							event_target:raid_system = {
								random_system_planet = {
									limit = {
										exists = owner
										owner = { is_same_empire = event_target:marauder_target }
										num_pops > 0
									}
									save_event_target_as = raid_planet
								}
							}
							auto_move_to_planet = {
								target = event_target:raid_planet
								clear_auto_move_on_arrival = no
							}
						}
					}
					set_faction_hostility = {
						target = event_target:marauder_target
						set_hostile = yes
						set_neutral = no
						set_friendly = no
					}
				}
				event_target:marauder_target = {
					set_country_flag = raid_target_of@event_target:raiding_marauder
					set_country_flag = under_marauder_attack
					set_relation_flag = {
						who = event_target:raiding_marauder
						flag = current_hired_target
					}
					if = {
						limit = { has_communications = event_target:raiding_marauder }
						country_event = { id = marauder.120 days = 1 random = 30 }
					}
					else = {
						country_event = { id = marauder.123  days = 1 random = 30 }
					}
				}
			}
			110 = {}
		}
	}
}

# AI hires Mercenaries
event = {
	id = marauder.151
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		mid_game_years_passed >= -10
		any_playable_country = {
			is_country_type = default
			is_ai = yes
			NOR = {
				is_homicidal = yes
				has_country_flag = ai_hired_mercs
			}
			resource_stockpile_compare = { resource = energy value >= 6000 }
			is_at_war = yes
			any_war = {
				any_war_participant = {
					is_at_war_with = prevprev
					relative_power = {
						who = prevprev
						value >= equivalent
					}
				}
			}
			any_relation = {
				is_country_type = dormant_marauders
				has_communications = prev
				NOR = {
					has_country_flag = raid_ongoing
					has_country_flag = raid_cooldown
				}
				OR = {
					AND = {
						has_country_flag = marauder_1
						has_country_flag = mercenaries_available_1
						NAND = {
							has_country_flag = merc_fleet_1_hired
							has_country_flag = merc_fleet_2_hired
							has_country_flag = merc_fleet_3_hired
						}
					}
					AND = {
						has_country_flag = marauder_2
						has_country_flag = mercenaries_available_2
						NAND = {
							has_country_flag = merc_fleet_1_hired
							has_country_flag = merc_fleet_2_hired
							has_country_flag = merc_fleet_3_hired
						}
					}
					AND = {
						has_country_flag = marauder_3
						has_country_flag = mercenaries_available_3
						NAND = {
							has_country_flag = merc_fleet_1_hired
							has_country_flag = merc_fleet_2_hired
							has_country_flag = merc_fleet_3_hired
						}
					}
				}
			}
		}
	}

	immediate = {
		random_playable_country = {
			limit = {
				is_country_type = default
				is_ai = yes
				NOR = {
					is_homicidal = yes
					has_country_flag = ai_hired_mercs
				}
				resource_stockpile_compare = { resource = energy value >= 6000 }
				is_at_war = yes
				any_war = {
					any_war_participant = {
						is_at_war_with = prevprev
						relative_power = {
							who = prevprev
							value >= equivalent
						}
					}
				}
				any_relation = {
					is_country_type = dormant_marauders
					has_communications = prev
					NOR = {
						has_country_flag = raid_ongoing
						has_country_flag = raid_cooldown
					}
					OR = {
						AND = {
							has_country_flag = marauder_1
							has_country_flag = mercenaries_available_1
							NAND = {
								has_country_flag = merc_fleet_1_hired
								has_country_flag = merc_fleet_2_hired
								has_country_flag = merc_fleet_3_hired
							}
						}
						AND = {
							has_country_flag = marauder_2
							has_country_flag = mercenaries_available_2
							NAND = {
								has_country_flag = merc_fleet_1_hired
								has_country_flag = merc_fleet_2_hired
								has_country_flag = merc_fleet_3_hired
							}
						}
						AND = {
							has_country_flag = marauder_3
							has_country_flag = mercenaries_available_3
							NAND = {
								has_country_flag = merc_fleet_1_hired
								has_country_flag = merc_fleet_2_hired
								has_country_flag = merc_fleet_3_hired
							}
						}
					}
				}
			}
			save_event_target_as = mercenary_hirer
			random_relation = {
				limit = {
					is_country_type = dormant_marauders
					has_communications = prev
					NOR = {
						has_country_flag = raid_ongoing
						has_country_flag = raid_cooldown
					}
					OR = {
						AND = {
							has_country_flag = marauder_1
							has_country_flag = mercenaries_available_1
							NAND = {
								has_country_flag = merc_fleet_1_hired
								has_country_flag = merc_fleet_2_hired
								has_country_flag = merc_fleet_3_hired
							}
						}
						AND = {
							has_country_flag = marauder_2
							has_country_flag = mercenaries_available_2
							NAND = {
								has_country_flag = merc_fleet_1_hired
								has_country_flag = merc_fleet_2_hired
								has_country_flag = merc_fleet_3_hired
							}
						}
						AND = {
							has_country_flag = marauder_3
							has_country_flag = mercenaries_available_3
							NAND = {
								has_country_flag = merc_fleet_1_hired
								has_country_flag = merc_fleet_2_hired
								has_country_flag = merc_fleet_3_hired
							}
						}
					}
				}
				save_event_target_as = marauder_merc_country
				owner_species = { save_event_target_as = marauder_species }
			}

			random_list = {
				# Large Fleet
				10 = {
					event_target:marauder_merc_country = { set_country_flag = merc_fleet_1_hired }
					if = {
						limit = { event_target:marauder_merc_country = { has_country_flag = marauder_1 } }
						event_target:mercenary_hirer = {
							create_marauder_merc_admiral = yes
							create_fleet = {
								name = "NAME_Armada_of_the_Voidborn"
								effect = {
									set_owner = event_target:mercenary_hirer
									save_event_target_as = hired_merc_fleet
									create_armada_of_the_voidborn = yes
									set_location = event_target:mercenary_hirer.capital_scope
									assign_leader = last_created_leader
									set_fleet_flag = armada_of_the_voidborn
									fleet_event = { id = marauder.50 days = 1800 }
								}
								settings = {
									can_upgrade = no
									can_disband = no
									can_change_composition = no
									can_change_leader = no
									uses_naval_capacity = no
								}
							}
						}
						event_target:mercenary_hirer = { set_timed_country_flag = { flag = ai_hired_mercs days = 1800 } }
					}
					if = {
						limit = { event_target:marauder_merc_country = { has_country_flag = marauder_2 } }
						event_target:mercenary_hirer = {
							create_marauder_merc_admiral = yes
							create_fleet = {
								name = "NAME_234th_Dwamak_Bashers"
								effect = {
									set_owner = event_target:mercenary_hirer
									save_event_target_as = hired_merc_fleet
									create_dwamak_bashers = yes
									set_location = event_target:mercenary_hirer.capital_scope
									assign_leader = last_created_leader
									set_fleet_flag = dwamak_bashers
									fleet_event = { id = marauder.50 days = 1800 }
								}
								settings = {
									can_upgrade = no
									can_disband = no
									can_change_composition = no
									can_change_leader = no
									uses_naval_capacity = no
								}
							}
						}
						event_target:mercenary_hirer = { set_timed_country_flag = { flag = ai_hired_mercs days = 1800 } }
					}
					if = {
						limit = { event_target:marauder_merc_country = { has_country_flag = marauder_3 } }
						event_target:mercenary_hirer = {
							create_marauder_merc_admiral = yes
							create_fleet = {
								name = "NAME_Her_Chosen_Champions"
								effect = {
									set_owner = event_target:mercenary_hirer
									save_event_target_as = hired_merc_fleet
									create_her_chosen_champions = yes
									set_location = event_target:mercenary_hirer.capital_scope
									assign_leader = last_created_leader
									set_fleet_flag = her_chosen_champions
									fleet_event = { id = marauder.50 days = 1800 }
								}
								settings = {
									can_upgrade = no
									can_disband = no
									can_change_composition = no
									can_change_leader = no
									uses_naval_capacity = no
								}
							}
						}
						event_target:mercenary_hirer = { set_timed_country_flag = { flag = ai_hired_mercs days = 1800 } }
					}
					modifier = {
						factor = 0
						event_target:marauder_merc_country = { has_country_flag = merc_fleet_1_hired }
						event_target:mercenary_hirer = { resource_stockpile_compare = { resource = energy value < 12000 } }
					}
				}
				# Medium Fleet
				10 = {
					event_target:marauder_merc_country = { set_country_flag = merc_fleet_2_hired }
					if = {
						limit = { event_target:marauder_merc_country = { has_country_flag = marauder_1 } }
						event_target:mercenary_hirer = {
							create_marauder_merc_admiral = yes
							create_fleet = {
								name = "NAME_Star_Rider_Flotilla"
								effect = {
									set_owner = event_target:mercenary_hirer
									save_event_target_as = hired_merc_fleet
									create_star_rider_flotilla = yes
									set_location = event_target:mercenary_hirer.capital_scope
									assign_leader = last_created_leader
									set_fleet_flag = star_rider_flotilla
									fleet_event = { id = marauder.50 days = 1800 }
								}
								settings = {
									can_upgrade = no
									can_disband = no
									can_change_composition = no
									can_change_leader = no
									uses_naval_capacity = no
								}
							}
						}
						event_target:mercenary_hirer = { set_timed_country_flag = { flag = ai_hired_mercs days = 1800 } }
					}
					if = {
						limit = { event_target:marauder_merc_country = { has_country_flag = marauder_2 } }
						event_target:mercenary_hirer = {
							create_marauder_merc_admiral = yes
							create_fleet = {
								name = "NAME_Unhinged_Screamer_Flotilla"
								effect = {
									set_owner = event_target:mercenary_hirer
									save_event_target_as = hired_merc_fleet
									create_unhinged_screamer_flotilla = yes
									set_location = event_target:mercenary_hirer.capital_scope
									assign_leader = last_created_leader
									set_fleet_flag = unhinged_screamer_flotilla
									fleet_event = { id = marauder.50 days = 1800 }
								}
								settings = {
									can_upgrade = no
									can_disband = no
									can_change_composition = no
									can_change_leader = no
									uses_naval_capacity = no
								}
							}
						}
						event_target:mercenary_hirer = { set_timed_country_flag = { flag = ai_hired_mercs days = 1800 } }
					}
					if = {
						limit = { event_target:marauder_merc_country = { has_country_flag = marauder_3 } }
						event_target:mercenary_hirer = {
							create_marauder_merc_admiral = yes
							create_fleet = {
								name = "NAME_Order_of_Eternal_Night"
								effect = {
									set_owner = event_target:mercenary_hirer
									save_event_target_as = hired_merc_fleet
									create_order_of_eternal_night = yes
									set_location = event_target:mercenary_hirer.capital_scope
									assign_leader = last_created_leader
									set_fleet_flag = order_of_eternal_night
									fleet_event = { id = marauder.50 days = 1800 }
								}
								settings = {
									can_upgrade = no
									can_disband = no
									can_change_composition = no
									can_change_leader = no
									uses_naval_capacity = no
								}
							}
						}
						event_target:mercenary_hirer = { set_timed_country_flag = { flag = ai_hired_mercs days = 1800 } }
					}
					modifier = {
						factor = 0
						event_target:marauder_merc_country = { has_country_flag = merc_fleet_2_hired }
						event_target:mercenary_hirer = { resource_stockpile_compare = { resource = energy value < 9000 } }
					}
				}
				# Small Fleet
				10 = {
					event_target:marauder_merc_country = { set_country_flag = merc_fleet_3_hired }
					if = {
						limit = { event_target:marauder_merc_country = { has_country_flag = marauder_1 } }
						event_target:mercenary_hirer = {
							create_marauder_merc_admiral = yes
							create_fleet = {
								name = "NAME_First_Storm_Wing"
								effect = {
									set_owner = event_target:mercenary_hirer
									save_event_target_as = hired_merc_fleet
									create_first_storm_wing = yes
									assign_leader = last_created_leader
									set_location = event_target:mercenary_hirer.capital_scope
									set_fleet_flag = first_storm_wing
									fleet_event = { id = marauder.50 days = 1800 }
								}
								settings = {
									can_upgrade = no
									can_disband = no
									can_change_composition = no
									can_change_leader = no
									uses_naval_capacity = no
								}
							}
						}
						event_target:mercenary_hirer = { set_timed_country_flag = { flag = ai_hired_mercs days = 1800 } }
					}
					if = {
						limit = { event_target:marauder_merc_country = { has_country_flag = marauder_2 } }
						event_target:mercenary_hirer = {
							create_marauder_merc_admiral = yes
							create_fleet = {
								name = "NAME_Frenzied_Volunteer_Squadron"
								effect = {
									set_owner = event_target:mercenary_hirer
									save_event_target_as = hired_merc_fleet
									create_frenzied_volunteer_squadron = yes
									assign_leader = last_created_leader
									set_location = event_target:mercenary_hirer.capital_scope
									set_fleet_flag = frenzied_volunteer_squadron
									fleet_event = { id = marauder.50 days = 1800 }
								}
								settings = {
									can_upgrade = no
									can_disband = no
									can_change_composition = no
									can_change_leader = no
									uses_naval_capacity = no
								}
							}
						}
						event_target:mercenary_hirer = { set_timed_country_flag = { flag = ai_hired_mercs days = 1800 } }
					}
					if = {
						limit = { event_target:marauder_merc_country = { has_country_flag = marauder_3 } }
						event_target:mercenary_hirer = {
							create_marauder_merc_admiral = yes
							create_fleet = {
								name = "NAME_Twilight_Congregation"
								effect = {
									set_owner = event_target:mercenary_hirer
									save_event_target_as = hired_merc_fleet
									create_twilight_congregation = yes
									assign_leader = last_created_leader
									set_location = event_target:mercenary_hirer.capital_scope
									set_fleet_flag = twilight_congregation
									fleet_event = { id = marauder.50 days = 1800 }
								}
								settings = {
									can_upgrade = no
									can_disband = no
									can_change_composition = no
									can_change_leader = no
									uses_naval_capacity = no
								}
							}
						}
						event_target:mercenary_hirer = { set_timed_country_flag = { flag = ai_hired_mercs days = 1800 } }
					}
					modifier = {
						factor = 0
						event_target:marauder_merc_country = { has_country_flag = merc_fleet_3_hired }
					}
				}
				100 = {}
			}
		}
	}

}

# Raiding End Failsafe
event = {
	id = marauder.160
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		any_country = {
			is_country_type = dormant_marauders
			has_country_flag = raid_ongoing
			NOT = {
				any_country = {
					is_country_type = marauder_raiders
					prev = { has_country_flag = parent_of@prev }
				}
			}
		}
	}

	immediate = {
		random_country = {
			limit = {
				is_country_type = dormant_marauders
				has_country_flag = raid_ongoing
				NOT = {
					any_country = {
						is_country_type = marauder_raiders
						prev = { has_country_flag = parent_of@prev }
					}
				}
			}
			save_event_target_as = raiding_marauder
			remove_country_flag = raid_ongoing
		}
		random_playable_country = {
			limit = { has_country_flag = raid_target_of@event_target:raiding_marauder }
			remove_country_flag = raid_target_of@event_target:raiding_marauder
			remove_country_flag = under_marauder_attack
			remove_country_flag = marauder_tribute_1@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_2@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_3@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_4@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_5@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_6@event_target:raiding_marauder
			remove_relation_flag = {
				who = event_target:raiding_marauder
				flag = current_target
			}
			remove_relation_flag = {
				who = event_target:raiding_marauder
				flag = current_hired_target
			}
		}
		if = {
			limit = {
				any_playable_country = { has_country_flag = hired@event_target:raiding_marauder }
			}
			random_playable_country = {
				limit = { has_country_flag = hired@event_target:raiding_marauder }
				remove_country_flag = hired@event_target:raiding_marauder
			}
		}
	}
}

### CRISIS BEGINS

country_event = {
	id = marauder.500
	hide_window = yes

	trigger = {
		OR = {
			AND = {
				mid_game_years_passed >= 10
				end_game_years_passed < 0
			}
			has_global_flag = horde_triggered
		}
		is_country_type = dormant_marauders
		NOT = { has_global_flag = marauder_crisis_started }
		OR = {
			AND = {
				has_country_flag = marauder_1
				any_system_within_border = { has_star_flag = marauder_capital_1 }
			}
			AND = {
				has_country_flag = marauder_2
				any_system_within_border = { has_star_flag = marauder_capital_2 }
			}
			AND = {
				has_country_flag = marauder_3
				any_system_within_border = { has_star_flag = marauder_capital_3 }
			}
		}
	}

	mean_time_to_happen = {
		years = 100
		modifier = {
			factor = 0.66
			mid_game_years_passed >= 50
		}
		modifier = {
			factor = 1.5
			count_country = {
				limit = { is_country_type = dormant_marauders }
				count > 1
			}
			count_country = {
				limit = { is_country_type = dormant_marauders }
				count < 3
			}
		}
		modifier = {
			factor = 2.0
			count_country = {
				limit = { is_country_type = dormant_marauders }
				count > 2
			}
		}
	}

	immediate = {
		set_country_type = awakened_marauders
		set_global_flag = marauder_crisis_started
		set_global_flag = marauder_crisis_ongoing
		save_global_event_target_as = raider_khanate
		if = {
			limit = { has_country_flag = marauder_1 }
			random_system = {
				limit = { has_star_flag = marauder_capital_1 }
				random_system_planet = {
					limit = { has_planet_flag = raid_source }
					save_global_event_target_as = marauder_rally_point
					set_planet_flag = marauder_rally_point
				}
			}
		}
		if = {
			limit = { has_country_flag = marauder_2 }
			random_system = {
				limit = { has_star_flag = marauder_capital_2 }
				random_system_planet = {
					limit = { has_planet_flag = raid_source }
					save_global_event_target_as = marauder_rally_point
					set_planet_flag = marauder_rally_point
				}
			}
		}
		if = {
			limit = { has_country_flag = marauder_3 }
			random_system = {
				limit = { has_star_flag = marauder_capital_3 }
				random_system_planet = {
					limit = { has_planet_flag = raid_source }
					save_global_event_target_as = marauder_rally_point
					set_planet_flag = marauder_rally_point
				}
			}
		}
		change_government = {
			civics = { civic = civic_great_khans_vision }
		}
		set_name = random
		change_country_flag = {
			icon = {
				category = "pirate"
				file = "flag_pirate_11.dds"
			}
			background= {
				category = "backgrounds"
				file = "00_solid.dds"
			}
			colors={
				"red"
				"red"
				"null"
				"null"
			}
		}
		create_ship_design = { design = "NAME_Pirate_Transport" }
		add_ship_design = last_created_design
		create_ship_design = { design = "NAME_Clan_Builder" }
		add_ship_design = last_created_design

		### Ruler Khan
		create_leader = {
			class = ruler
			species = owner_main_species
			name = random
			skill = 10
			event_leader = yes
			leader_age_min = 22
			leader_age_max = 40
			traits = {
				trait = leader_trait_ruler_great_khan
			}
		}
		last_created_leader = {
			set_leader_flag = great_khan
			save_global_event_target_as = great_khan_ruler
		}
		assign_leader = last_created_leader
		set_timed_global_flag = { flag = khan_no_die days = 7200 } # Should only die in battle first 20 years
		country_event = { id = marauder.514 days = 10800 random = 5000 } # Khan dies of old age if still around

		### Admiral Khan
		clone_leader = {
			target = event_target:great_khan_ruler
			class = admiral
			skill = 10
			event_leader = yes
			traits = {
				trait = leader_trait_great_khan
			}
			effect = {
				set_leader_flag = great_khan
				save_global_event_target_as = great_khan
			}
		}

		create_1st_khan_fleet = yes
		create_marauder_fleet = yes
		create_marauder_fleet = yes
		create_marauder_fleet = yes
		create_marauder_armies = yes
		create_marauder_armies = yes
		create_marauder_armies = yes
		create_marauder_armies = yes
		create_marauder_constructors = yes
		create_marauder_constructors = yes
		create_marauder_constructors = yes
		create_marauder_constructors = yes
		create_marauder_constructors = yes
		country_event = { id = marauder.520 days = 180 } # Start reinforcement cycle
		if = {
			limit = {
				NOT = { has_global_flag = horde_triggered }
			}
			observer_event = { id = observer.13 }
			every_playable_country = {
				limit = { is_country_type = default }
				establish_communications_no_message = root
				country_event = { id = marauder.501 }
			}
		}
		else = {
			observer_event = { id = observer.18 }
			every_playable_country = {
				limit = { is_country_type = default }
				establish_communications_no_message = root
				country_event = { id = marauder.526 }
			}
		}
		every_country = {
			limit = {
				is_ai = yes
				is_country_type = default
			}
			establish_communications_no_message = root
		}

		# Mercenaries Defect (Marauder 1)
		if = {
			limit = { has_country_flag = marauder_1 }
			every_country = {
				limit = {
					OR = {
						any_owned_fleet = {
							OR = {
								has_fleet_flag = armada_of_the_voidborn
								has_fleet_flag = star_rider_flotilla
								has_fleet_flag = first_storm_wing
							}
						}
						any_owned_leader = {
							has_leader_flag = hired_merc_leader_1
						}
					}
				}
				country_event = { id = marauder.77 days = 20 }
			}
		}
		# Mercenaries Defect (Marauder 2)
		else_if = {
			limit = { has_country_flag = marauder_2 }
			every_country = {
				limit = {
					OR = {
						any_owned_fleet = {
							OR = {
								has_fleet_flag = dwamak_bashers
								has_fleet_flag = unhinged_screamer_flotilla
								has_fleet_flag = frenzied_volunteer_squadron
							}
						}
						any_owned_leader = {
							has_leader_flag = hired_merc_leader_1
						}
					}
				}
				country_event = { id = marauder.77 days = 20 }
			}
		}
		# Mercenaries Defect (Marauder 3)
		else_if = {
			limit = { has_country_flag = marauder_3 }
			every_country = {
				limit = {
					OR = {
						any_owned_fleet = {
							OR = {
								has_fleet_flag = her_chosen_champions
								has_fleet_flag = order_of_eternal_night
								has_fleet_flag = twilight_congregation
							}
						}
						any_owned_leader = {
							has_leader_flag = hired_merc_leader_1
						}
					}
				}
				country_event = { id = marauder.77 days = 20 }
			}
		}

		# Mercenaries Join the Great Khan
		country_event = { id = marauder.78 days = 20 }

		# Should not attack Enclaves
		every_country = {
			limit = { is_country_type = enclave }
			event_target:raider_khanate = {
				set_faction_hostility = {
					target = prev
					set_hostile = no
					set_neutral = no
					set_friendly = yes
				}
			}
		}
	}
}

# The Drums of War
country_event = {
	id = marauder.501
	title = "marauder.501.name"
	desc = "marauder.501.desc"
	picture = GFX_evt_khan_throne_room
	show_sound = event_radio_chatter
	location = event_target:marauder_rally_point

	is_triggered_only = yes

	option = {
		name = marauder.501.a
		hidden_effect = {
			country_event = { id = marauder.502 }
		}
	}
}

# Great Khan's Announcement
country_event = {
	id = marauder.502
	title = "greatkhan_diplo_header"
	desc = "marauder.502.desc"

	diplomatic = yes

	picture_event_data = {
		portrait = event_target:raider_khanate
		room = "ethic_spaceship_room"
	}

	is_triggered_only = yes

	immediate = {
		set_global_flag = great_khan_announcement
	}

	option = {
		name = marauder.502.a
		trigger = {
			NOT = { has_authority = auth_machine_intelligence }
		}
	}
	option = {
		name = marauder.502.b
		trigger = {
			has_authority = auth_machine_intelligence
		}
	}
}

# Horde Conquers Planet (HIDDEN)
country_event = {
	id = marauder.503
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		is_country_type = awakened_marauders
	}

	immediate = {
		fromfrom = {
			save_event_target_as = conquered_planet
			set_owner = root
		}
		from = {
			country_event = { id = marauder.504 }
			change_variable = {
				which = "planets_lost_to_marauder"
				value = 1
			}
			set_country_flag = former_owner@fromfrom
		}
		fromfrom = {
			# Create Defense Armies
			create_army = {
				owner = root
				species = root.species
				type = "defense_army"
			}
			create_army = {
				owner = root
				species = root.species
				type = "defense_army"
			}
			create_army = {
				owner = root
				species = root.species
				type = "defense_army"
			}
			create_army = {
				owner = root
				species = root.species
				type = "defense_army"
			}
			create_army = {
				owner = root
				species = root.species
				type = "defense_army"
			}
			create_army = {
				owner = root
				species = root.species
				type = "defense_army"
			}
			# Create Marauder Pops
			if = {
				limit = { free_housing < 1 }
				while = {
					count = 4
					limit = {
						num_pops > 1
					}
					random_owned_pop = {
						kill_pop = yes
					}
				}
				while = {
					count = 4
					create_pop = {
						species = root.species
					}
				}
			}
			if = {
				limit = {
					free_housing > 1
					free_housing < 6
				}
				while = {
					count = 4
					limit = {
						num_pops > 1
					}
					random_owned_pop = {
						kill_pop = yes
					}
				}
				while = {
					count = 8
					create_pop = {
						species = root.species
					}
				}
			}
			if = {
				limit = { free_housing > 5 }
				while = {
					count = 3
					limit = {
						num_pops > 1
					}
					random_owned_pop = {
						kill_pop = yes
					}
				}
				while = {
					count = 12
					create_pop = {
						species = root.species
					}
				}
			}
			# Flip Starbase ownership or create a new one
			if = {
				limit = {
					solar_system = {
						exists = starbase
						starbase = {
							fleet = {
								owner = { NOT = { is_same_value = root } }
							}
						}
					}
				}
				solar_system = {
					starbase = { set_owner = root }
				}
			}
			else = {
				solar_system = {
					create_starbase = {
						size = "starbase_marauder"
						owner = root
					}
				}
			}
		}
	}
}

# Horde Conquers Planet
country_event = {
	id = marauder.504
	title = "marauder.504.name"
	desc = "marauder.504.desc"
	picture = GFX_evt_ground_combat
	show_sound = event_ground_battle

	is_triggered_only = yes

	option = {
		name = marauder.504.a
	}
}

# Great Khan Defeated First Time (HIDDEN)
country_event = {
	id = marauder.505
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		is_country_type = awakened_marauders
		fromfrom = {
			exists = leader
			fleet = { num_ships = 0 }
			leader = { has_leader_flag = great_khan }
		}
		NOT = { has_country_flag = great_khan_defeated_once }
	}

	immediate = {
		set_country_flag = great_khan_defeated_once
		from = { save_event_target_as = khan_destroyer }
		fromfrom = {
			solar_system = { save_event_target_as = khan_death_system }
			leader = {
				save_event_target_as = great_khan
				exile_leader_as = exiled_khan
			}
		}
		observer_event = { id = observer.14 }
		every_playable_country = {
			limit = { is_ai = no }
			country_event = { id = marauder.506 }
		}
		random_country = {
			limit = { is_country_type = global_event }
			country_event = { id = marauder.523 days = 180 random = 180 }
		}
	}
}

# Great Khan Defeated First Time
country_event = {
	id = marauder.506
	title = "marauder.506.name"
	desc = "marauder.506.desc"
	picture = GFX_evt_sabotaged_ship
	show_sound = event_ship_explosion

	is_triggered_only = yes

	option = {
		name = marauder.506.a
	}
}

# Return of the Great Khan (HIDDEN)
country_event = {
	id = marauder.523
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		if = {
			limit = { exists = from }
			from = {
				country_event = { id = marauder.507 }
			}
		}
		else = {
			every_playable_country = {
				limit = { is_ai = no }
				country_event = { id = marauder.524 }
			}
		}
	}
}

# Return of the Great Khan (HIDDEN)
country_event = {
	id = marauder.507
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		create_2nd_khan_fleet = yes
		create_marauder_fleet = yes
		create_marauder_armies = yes
		create_marauder_armies = yes
		observer_event = { id = observer.15 }
		every_playable_country = {
			limit = { is_ai = no }
			country_event = { id = marauder.508 }
		}
	}
}

# Return of the Great Khan
country_event = {
	id = marauder.508
	title = "greatkhan_diplo_header"
	desc = {
		trigger = {
			OR = {
				is_subject_type = satrapy
				has_country_flag = rebelling_satrapy
			}
		}
		text = "marauder.508.desc.1"
	}

	desc = {
		trigger = {
			NOR = {
				is_subject_type = satrapy
				has_country_flag = rebelling_satrapy
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
			}
		}
		text = "marauder.508.desc.2"
	}

	desc = {
		trigger = {
			OR = {
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
			}
		}
		text = "marauder.508.desc.3"
	}

	diplomatic = yes

	picture_event_data = {
		portrait = event_target:raider_khanate
		room = "ethic_spaceship_room"
	}

	is_triggered_only = yes

	option = {
		name = marauder.508.a
	}
}

# Great Khan Defeated Second Time (HIDDEN)
country_event = {
	id = marauder.509
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		is_country_type = awakened_marauders
		fromfrom = {
			exists = leader
			fleet = { num_ships = 0 }
			leader = { has_leader_flag = great_khan }
		}
		has_country_flag = great_khan_defeated_once
	}

	immediate = {
		set_global_flag = great_khan_dead
		set_country_flag = khan_dead_event_fine
		from = {
			save_event_target_as = khan_destroyer
			set_country_flag = no_khan_do
			if = {
				limit = { is_ai = no }
				country_event = { id = marauder.710 days = 2 }
			}
		}
		fromfrom = {
			solar_system = { save_event_target_as = khan_death_system }
		}
		observer_event = { id = observer.16 }
		every_playable_country = {
			limit = { is_ai = no }
			country_event = { id = marauder.510 }
		}
		country_event = { id = marauder.600 days = 200 random = 100 }
		if = {
			limit = {
				exists = event_target:great_khan_ruler
			}
			event_target:great_khan_ruler = {
				kill_leader = { show_notification = no }
			}
		}
		if = {
			limit = {
				exists = event_target:great_khan
			}
			event_target:great_khan = {
				kill_leader = { show_notification = no }
			}
		}
	}
}

# Great Khan Dies
country_event = {
	id = marauder.510
	title = "marauder.510.name"
	desc = "marauder.510.desc"
	picture = GFX_evt_space_funeral
	show_sound = event_airlock

	is_triggered_only = yes

	option = {
		name = marauder.510.a
	}
}

# Great Khan Dies for Other Reasons
event = {
	id = marauder.511
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		has_global_flag = marauder_crisis_started
		NOR = {
			has_global_flag = khan_no_die
			has_global_flag = great_khan_dead
		}
	}

	immediate = {
		random_list = {
			2 = {
				event_target:raider_khanate = {
					country_event = { id = marauder.512 }
				}
			}
			98 = {}
		}
	}
}

# Great Khan Dies for Other Reasons
country_event = {
	id = marauder.512
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		set_global_flag = great_khan_dead
		set_country_flag = khan_dead_event_fine
		random_list = {
			10 = { set_country_flag = khan_dead_poison }
			10 = { set_country_flag = khan_dead_disease }
			10 = { set_country_flag = khan_dead_assassin }
			10 = { set_country_flag = khan_dead_concubine }
		}
		observer_event = { id = observer.17 }
		every_playable_country = {
			limit = { is_ai = no }
			country_event = { id = marauder.513 }
		}
		country_event = { id = marauder.600 days = 200 random = 100 }
		if = {
			limit = {
				exists = event_target:great_khan_ruler
			}
			event_target:great_khan_ruler = {
				kill_leader = { show_notification = no }
			}
		}
		if = {
			limit = {
				exists = event_target:great_khan
			}
			event_target:great_khan = {
				kill_leader = { show_notification = no }
			}
		}
	}
}

# Great Khan Dies
country_event = {
	id = marauder.513
	title = "marauder.510.name"
	desc = {
		text = marauder.513.a.desc
		trigger = { from = { has_country_flag = khan_dead_poison } }
	}
	desc = {
		text = marauder.513.b.desc
		trigger = { from = { has_country_flag = khan_dead_disease } }
	}
	desc = {
		text = marauder.513.c.desc
		trigger = { from = { has_country_flag = khan_dead_assassin } }
	}
	desc = {
		text = marauder.513.d.desc
		trigger = { from = { has_country_flag = khan_dead_concubine } }
	}
	desc = {
		text = marauder.513.e.desc
		trigger = { from = { has_country_flag = khan_dead_age } }
	}
	picture = GFX_evt_space_funeral
	show_sound = event_life_support_fail

	is_triggered_only = yes

	option = {
		name = marauder.510.a
	}
}

# Great Khan Dies of Old Ages
country_event = {
	id = marauder.514
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		is_country_type = awakened_marauders
		NOT = { has_country_flag = khan_dead_age }
	}

	immediate = {
		set_global_flag = great_khan_dead
		set_country_flag = khan_dead_event_fine
		set_country_flag = khan_dead_age
		observer_event = { id = observer.17 }
		every_playable_country = {
			limit = { is_ai = no }
			country_event = { id = marauder.513 }
		}
		country_event = { id = marauder.600 days = 200 random = 100 }
		if = {
			limit = {
				exists = event_target:great_khan_ruler
			}
			event_target:great_khan_ruler = {
				kill_leader = { show_notification = no }
			}
		}
		if = {
			limit = {
				exists = event_target:great_khan
			}
			event_target:great_khan = {
				kill_leader = { show_notification = no }
			}
		}
	}
}

# Marauder Planet Liberated (HIDDEN)
country_event = {
	id = marauder.515
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		from = { is_country_type = awakened_marauders }
	}

	immediate = {
		random_country = {
			limit = { has_country_flag = former_owner@fromfrom }
			save_event_target_as = planet_former_owner
		}
		fromfrom = { save_event_target_as = liberated_planet }
		if = { # Planet belonged to liberator
			limit = {
				exists = event_target:planet_former_owner
				event_target:planet_former_owner = { is_same_empire = root }
			}
			country_event = { id = marauder.516 }
			break = yes
		}
		if = { # Planet belonged to someone else
			limit = {
				exists = event_target:planet_former_owner
				event_target:planet_former_owner = {
					NOT = { is_same_value = root }
				}
			}
			country_event = { id = marauder.517 }
			break = yes
		}
		if = { # Planet's former owner no longer exists
			limit = {
				NOT = { exists = event_target:planet_former_owner }
			}
			country_event = { id = marauder.518 }
		}
	}
}

# Liberated Own Planet
country_event = {
	id = marauder.516
	title = "marauder.516.name"
	desc = "marauder.516.desc"
	picture = GFX_evt_victorious_army
	show_sound = event_ground_battle
	location = event_target:liberated_planet

	is_triggered_only = yes

	option = {
		name = marauder.516.a
		event_target:liberated_planet = {
			set_owner = root
		}
	}
}

# Liberated Someone Else's Planet
country_event = {
	id = marauder.517
	title = "marauder.516.name"
	desc = "marauder.517.desc"
	picture = GFX_evt_victorious_army
	show_sound = event_ground_battle

	is_triggered_only = yes

	option = { # Keep planet
		name = marauder.517.a
		custom_tooltip = marauder.517.a.tooltip
		event_target:planet_former_owner = {
			add_opinion_modifier = {
				who = root
				modifier = opinion_kept_marauder_planet
			}
		}
		event_target:liberated_planet = {
			set_owner = root
		}
	}
	option = { # Return to former owner
		name = marauder.517.b
		custom_tooltip = marauder.517.b.tooltip
		event_target:liberated_planet = {
			set_owner = event_target:planet_former_owner
		}
		event_target:planet_former_owner = {
			add_opinion_modifier = {
				who = root
				modifier = opinion_returned_marauder_planet
			}
		}
		add_favors = {
			target = event_target:planet_former_owner
			value = 1
		}
		hidden_effect = {
			event_target:planet_former_owner = {
				country_event = { id = marauder.519 }
			}
		}
	}
}

# Liberated Dead Country's Planet
country_event = {
	id = marauder.518
	title = "marauder.516.name"
	desc = "marauder.518.desc"
	picture = GFX_evt_victorious_army
	show_sound = event_ground_battle

	is_triggered_only = yes

	option = {
		name = marauder.516.a
		event_target:liberated_planet = {
			set_owner = root
		}
	}
}

# Liberated Returned to Our Control
country_event = {
	id = marauder.519
	title = "marauder.516.name"
	desc = "marauder.519.desc"
	picture = GFX_evt_ground_combat
	show_sound = event_ground_battle

	is_triggered_only = yes

	option = {
		name = marauder.516.a
	}
}

# Marauder Reinforcement Cycle
country_event = {
	id = marauder.520
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		has_global_flag = marauder_crisis_started
		any_planet_within_border = {
			has_planet_flag = marauder_rally_point # Make sure home system still owned
		}
	}

	immediate = {
		create_marauder_constructors = yes
		if = {
			limit = { num_armies < 40 }
			create_marauder_armies = yes
		}
		# If at fleet cap, check again later
		if = {
			limit = {
				fleet_power > 100000
			}
			country_event = { id = marauder.520 days = 340 }
			break = yes
		}
		create_marauder_fleet = yes
		country_event = { id = marauder.520 days = 340 }
	}
}

# Great Khan Dies
country_event = {
	id = marauder.524
	title = "marauder.524.name"
	desc = {
		text = marauder.524.a.desc
		trigger = {
			NOT = { is_same_value = event_target:khan_destroyer }
		}
	}
	desc = {
		text = marauder.524.b.desc
		trigger = { is_same_value = event_target:khan_destroyer }
	}
	picture = GFX_evt_space_funeral
	show_sound = event_airlock

	is_triggered_only = yes

	option = {
		name = marauder.524.a
		trigger = {
			NOT = { is_same_value = event_target:khan_destroyer }
		}
	}
	option = {
		name = marauder.524.b
		trigger = {
			is_same_value = event_target:khan_destroyer
		}
		add_relic = r_khans_throne
	}
}

# Horde Triggered Through Destruction of Stations
country_event = {
	id = marauder.525
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		NOT = { has_global_flag = marauder_crisis_started }
		is_country_type = dormant_marauders
		fromfrom = { is_ship_size = marauder_void_dwelling }
		from = { is_country_type = default }
		count_owned_ship = {
			limit = { is_ship_size = marauder_void_dwelling }
			count >= 3
		}
	}

	immediate = {
		from = { save_event_target_as = awakened_horde }
		random_list = {
			2 = {
				set_global_flag = horde_triggered
				country_event = { id = marauder.500 }
			}
			100 = {}
		}
	}
}

# The Sleeper Awakes
country_event = {
	id = marauder.526
	title = "marauder.526.name"
	desc = "marauder.526.desc"
	picture = GFX_evt_khan_throne_room
	show_sound = event_radio_chatter

	is_triggered_only = yes

	option = {
		name = marauder.501.a
		hidden_effect = {
			country_event = { id = marauder.502 }
		}
	}
}

# Marauder Great Khan Diplomacy
country_event = {
	id = marauder.550
	title = "greatkhan_diplo_header"

	desc = {
		trigger = {
			NOR = {
				is_subject_type = satrapy
				has_country_flag = rebelling_satrapy
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
			}
		}
		text = "marauder.550.a.desc"
	}
	desc = {
		trigger = {
			NOR = {
				is_subject_type = satrapy
				has_country_flag = rebelling_satrapy
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
			}
		}
		text = "marauder.550.b.desc"
	}
	desc = {
		trigger = {
			NOR = {
				is_subject_type = satrapy
				has_country_flag = rebelling_satrapy
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
			}
		}
		text = "marauder.550.c.desc"
	}
	desc = {
		trigger = {
			NOR = {
				is_subject_type = satrapy
				has_country_flag = rebelling_satrapy
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
			}
		}
		text = "marauder.550.d.desc"
	}
	desc = {
		trigger = {
			NOR = {
				is_subject_type = satrapy
				has_country_flag = rebelling_satrapy
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
			}
		}
		text = "marauder.550.e.desc"
	}
	desc = {
		trigger = {
			NOR = {
				is_subject_type = satrapy
				has_country_flag = rebelling_satrapy
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
			}
		}
		text = "marauder.550.f.desc"
	}
	desc = {
		trigger = {
			NOR = {
				is_subject_type = satrapy
				has_country_flag = rebelling_satrapy
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
			}
		}
		text = "marauder.550.g.desc"
	}
	desc = {
		trigger = {
			NOR = {
				is_subject_type = satrapy
				has_country_flag = rebelling_satrapy
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
			}
		}
		text = "marauder.550.h.desc"
	}
	desc = {
		trigger = {
			NOR = {
				is_subject_type = satrapy
				has_country_flag = rebelling_satrapy
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
			}
		}
		text = "marauder.550.i.desc"
	}
	desc = {
		trigger = { is_subject_type = satrapy }
		text = "marauder.550.j.desc"
	}
	desc = {
		trigger = { is_subject_type = satrapy }
		text = "marauder.550.k.desc"
	}
	desc = {
		trigger = {
			is_subject_type = satrapy
			has_authority = auth_machine_intelligence
		}
		text = "marauder.550.l.desc"
	}
	desc = {
		trigger = {
			is_subject_type = satrapy
			has_authority = auth_machine_intelligence
		}
		text = "marauder.550.m.desc"
	}
	desc = {
		trigger = {
			is_subject_type = satrapy
			has_authority = auth_hive_mind
		}
		text = "marauder.550.n.desc"
	}
	desc = {
		trigger = {
			is_subject_type = satrapy
			has_authority = auth_hive_mind
		}
		text = "marauder.550.o.desc"
	}
	desc = {
		trigger = {
			is_subject_type = satrapy
			NOT = { has_ethic = ethic_gestalt_consciousness }
		}
		text = "marauder.550.p.desc"
	}
	desc = {
		trigger = {
			is_subject_type = satrapy
			NOT = { has_ethic = ethic_gestalt_consciousness }
		}
		text = "marauder.550.q.desc"
	}
	desc = {
		trigger = { has_country_flag = rebelling_satrapy }
		text = "marauder.550.r.desc"
	}
	desc = {
		trigger = { has_country_flag = rebelling_satrapy }
		text = "marauder.550.s.desc"
	}
	desc = {
		trigger = { has_country_flag = rebelling_satrapy }
		text = "marauder.550.t.desc"
	}
	desc = {
		trigger = { has_country_flag = rebelling_satrapy }
		text = "marauder.550.u.desc"
	}
	desc = {
		trigger = {
			OR = {
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
			}
		}
		text = "marauder.550.v.desc"
	}
	desc = {
		trigger = {
			from = { has_country_flag = marauder_2 }
		}
		text = "marauder.550.w.desc"
	}

	picture_event_data = {
		portrait = event_target:raider_khanate
		room = ethic_spaceship_room
	}

	is_triggered_only = yes
	force_open = yes
	diplomatic = yes

	trigger = {
		from = { is_country_type = awakened_marauders }
		NOR = {
			has_country_flag = marauder_diplomacy_engaged
			has_global_flag = great_khan_dead
		}
	}

	immediate = {
		set_country_flag = marauder_diplomacy_engaged
	}

	after = {
		hidden_effect = {
			remove_country_flag = marauder_diplomacy_engaged
		}
	}

	option = { # Submit?
		name = marauder.550.a
		trigger = {
			NOR = {
				is_subject_type = satrapy
				has_country_flag = rebelling_satrapy
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
			}
		}
		hidden_effect = {
			country_event = { id = marauder.551 }
		}
	}

	option = { # Submit? Already rebelled
		name = marauder.550.a
		trigger = {
			has_country_flag = rebelling_satrapy
		}
		response_text = marauder.550.a.2.response
		is_dialog_only = yes
	}

	option = {
		name = marauder.550.b
		trigger = {
			from = { has_country_flag = marauder_2 }
			NOR = {
				has_country_flag = asked_about_language
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
			}
		}
		response_text = marauder.550.b.response
		is_dialog_only = yes
		hidden_effect = {
			set_country_flag = asked_about_language
		}
	}

	option = {
		name = marauder.550.c
		trigger = {
			from = { has_country_flag = marauder_3 }
			NOR = {
				has_country_flag = asked_about_religion
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
			}
		}
		response_text = marauder.550.c.response
		is_dialog_only = yes
		hidden_effect = {
			set_country_flag = asked_about_religion
		}
	}

	option = { # Rebel?
		name = marauder.550.d
		trigger = {
			is_subject_type = satrapy
		}
		allow = {
			custom_tooltip = {
				fail_text = marauder.550.d_fail
				NOT = { has_country_flag = rebellion_cooldown }
			}
		}
		hidden_effect = {
			country_event = { id = marauder.554 }
		}
	}

	option = {
		name = marauder.20.e
		default_hide_option = yes
	}
}

# Submit?
country_event = {
	id = marauder.551
	title = "greatkhan_diplo_header"
	desc = marauder.551.a.desc

	picture_event_data = {
		portrait = event_target:raider_khanate
		room = ethic_spaceship_room
	}

	is_triggered_only = yes
	force_open = yes
	diplomatic = yes

	immediate = {
		set_country_flag = marauder_diplomacy_engaged
	}

	after = {
		hidden_effect = {
			remove_country_flag = marauder_diplomacy_engaged
		}
	}

	option = {
		name = marauder.551.a
		trigger = { has_been_declared_crisis = no }
		response_text = marauder.551.a.response
		if = {
			limit = { is_overlord = yes }
			every_subject = {
				set_subject_of = {
					who = event_target:raider_khanate
					subject_type = satrapy
				}
				hidden_effect = {
					country_event = { id = marauder.553 days = 10 }
					add_modifier = {
						modifier = "satrapy_of_horde"
						days = -1
					}
					event_target:raider_khanate = {
						set_faction_hostility = {
							target = prev
							set_hostile = no
							set_neutral = no
							set_friendly = yes
						}
					}
				}
			}
		}
		set_subject_of = {
			who = event_target:raider_khanate
			subject_type = satrapy
		}
		hidden_effect = {
			set_timed_country_flag = { flag = rebellion_cooldown days = 360 } # Can't rebel for a year after submitting.
			save_event_target_as = new_satrapy
			observer_event = { id = observer.19 }
			every_playable_country = {
				limit = {
					is_ai = no
					has_communications = root
					NOT = { is_same_value = root }
				}
				country_event = { id = marauder.552 }
			}
			country_event = { id = marauder.553 days = 10 }
			event_target:raider_khanate = {
				set_faction_hostility = {
        			target = root
        			set_hostile = no
        			set_neutral = no
        			set_friendly = yes
        		}
        	}
        	add_modifier = {
				modifier = "satrapy_of_horde"
				days = -1
			}
		}
	}

	option = {
		name = marauder.551.b
		response_text = marauder.551.b.response
		default_hide_option = yes
	}
}

# New Satrapy
country_event = {
	id = marauder.552
	title = "marauder.552.name"
	desc = "marauder.552.desc"
	picture = GFX_evt_khan_throne_room
	show_sound = event_conversation

	is_triggered_only = yes

	option = {
		name = marauder.552.a
	}
}

# Marauder Establishes Base in Capital System
country_event = {
	id = marauder.553
	title = "marauder.553.name"
	desc = "marauder.553.desc"
	picture = GFX_evt_khan_throne_room
	show_sound = event_conversation
	location = event_target:garrison_base

	is_triggered_only = yes

	immediate = {
		save_event_target_as = satrapy_empire
		capital_scope = {
			save_event_target_as = capital_planet
			solar_system = { save_event_target_as = capital_system }
		}
		create_fleet = {
			effect = {
				set_owner = event_target:raider_khanate
				create_ship = {
					name = "NAME_Garrison_Base"
					design = "NAME_Void_Dwelling"
					graphical_culture = "pirate_01"
				}
				set_location = {
					target = event_target:capital_planet
					distance = 50
					angle = random
				}
			}
		}
		last_created_fleet = {
			save_event_target_as = garrison_base
			set_fleet_flag = satrapy_garrison
			fleet_event = { id = marauder.560 days = 10 }
		}
		create_fleet = {
			name = "NAME_Garrison_Fleet"
			effect = {
				set_owner = event_target:raider_khanate
				while = {
					count = 22
					create_ship = {
						name = random
						design = "NAME_Outrider"
						graphical_culture = "pirate_01"
					}
				}
				while = {
					count = 14
					create_ship = {
						name = random
						design = "NAME_Lancer"
						graphical_culture = "pirate_01"
					}
				}
				while = {
					count = 8
					create_ship = {
						name = random
						design = "NAME_Void_Champion"
						graphical_culture = "pirate_01"
					}
				}
				set_formation_scale = 2
				set_fleet_stance = aggressive
				set_aggro_range_measure_from = self
				set_aggro_range = 250
				set_location = {
					target = event_target:garrison_base
					distance = 20
					angle = random
				}
			}
			settings = {
				garrison = yes
			}
		}
		last_created_fleet = {
			set_fleet_flag = satrapy_garrison_fleet
		}
	}

	option = {
		name = marauder.553.a
	}
}

# Rebel?
country_event = {
	id = marauder.554
	title = "greatkhan_diplo_header"
	desc = marauder.554.a.desc

	picture_event_data = {
		portrait = event_target:raider_khanate
		room = ethic_spaceship_room
	}

	is_triggered_only = yes
	force_open = yes
	diplomatic = yes

	immediate = {
		set_country_flag = marauder_diplomacy_engaged
	}

	after = {
		hidden_effect = {
			remove_country_flag = marauder_diplomacy_engaged
		}
	}

	option = {
		name = marauder.554.a
		response_text = marauder.554.a.response
		set_subject_of = {
			who = none
		}
		hidden_effect = {
			set_country_flag = rebelling_satrapy
			remove_modifier = "satrapy_of_horde"
			event_target:raider_khanate = {
				set_faction_hostility = {
					target = root
					set_hostile = yes
					set_neutral = no
					set_friendly = no
				}
			}
		}
	}

	option = {
		name = marauder.554.b
		response_text = marauder.554.b.response
		default_hide_option = yes
	}
}

# AI Empire Submits to Marauder
country_event = {
	id = marauder.555
	hide_window = yes

	trigger = {
		has_been_declared_crisis = no
		has_global_flag = marauder_crisis_started
		NOT = { has_global_flag = great_khan_dead }
		exists = event_target:raider_khanate
		is_country_type = default
		is_subject = no
		is_ai = yes
		NOR = {
			has_valid_civic = "civic_fanatic_purifiers"
			has_valid_civic = "civic_hive_devouring_swarm"
			has_valid_civic = "civic_machine_terminator"
		}
		check_variable = {
			which = "planets_lost_to_marauder"
			value > 2
		}
		OR = {
			relative_power = {
				who = event_target:raider_khanate
				category = fleet
				value = inferior
			}
			relative_power = {
				who = event_target:raider_khanate
				category = fleet
				value = pathetic
			}
		}
	}

	mean_time_to_happen = {
		years = 5
		modifier = {
			factor = 0.5
			check_variable = {
				which = "planets_lost_to_marauder"
				value > 10
			}
		}
		modifier = {
			factor = 0.5
			has_ai_personality = peaceful_traders
		}
		modifier = {
			factor = 0.1
			check_variable = {
				which = "planets_lost_to_marauder"
				value > 20
			}
		}
		modifier = {
			factor = 0.1
			has_ai_personality = fanatic_befrienders
		}
		modifier = {
			factor = 3
			has_ai_personality = honorbound_warriors
		}
		modifier = {
			factor = 2
			has_ai_personality = xenophobic_isolationists
		}
	}

	immediate = {
		save_event_target_as = new_satrapy
		if = {
			limit = { is_overlord = yes }
			every_subject = {
				set_subject_of = {
					who = event_target:raider_khanate
					subject_type = satrapy
				}
				hidden_effect = {
					country_event = { id = marauder.553 days = 10 }
					add_modifier = {
						modifier = "satrapy_of_horde"
						days = -1
					}
					event_target:raider_khanate = {
						set_faction_hostility = {
							target = prev
							set_hostile = no
							set_neutral = no
							set_friendly = yes
						}
					}
				}
			}
		}
		set_subject_of = {
			who = event_target:raider_khanate
			subject_type = satrapy
		}
		country_event = { id = marauder.553 days = 10 }
		add_modifier = {
			modifier = "satrapy_of_horde"
			days = -1
		}
		event_target:raider_khanate = {
			set_faction_hostility = {
				target = event_target:new_satrapy
				set_hostile = no
				set_neutral = no
				set_friendly = yes
			}
		}
		observer_event = { id = observer.19 }
		every_playable_country = {
			limit = {
				is_ai = no
				has_communications = event_target:new_satrapy
			}
			country_event = { id = marauder.552 }
		}
	}
}

# Marauder Auxiliary Reinforcements
fleet_event = {
	id = marauder.560
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		has_global_flag = marauder_crisis_started
		NOT = { has_global_flag = great_khan_dead }
		owner = { is_same_empire = event_target:raider_khanate }
	}

	immediate = {
		fleet_event = { id = marauder.560 days = 400 random = 400 }
		event_target:satrapy_empire = {
			owner_species = { save_event_target_as = satrapy_species }
		}
		if = {
			limit = {
				event_target:satrapy_empire = {
					max_naval_capacity < 100
				}
			}
			event_target:raider_khanate = { create_small_marauder_auxiliaries = yes }
			break = yes
		}
		if = {
			limit = {
				event_target:satrapy_empire = {
					max_naval_capacity > 99
					max_naval_capacity < 200
				}
			}
			event_target:raider_khanate = { create_medium_marauder_auxiliaries = yes }
			break = yes
		}
		if = {
			limit = {
				event_target:satrapy_empire = {
					max_naval_capacity > 199
					max_naval_capacity < 300
				}
			}
			event_target:raider_khanate = { create_large_marauder_auxiliaries = yes }
			break = yes
		}
		if = {
			limit = {
				event_target:satrapy_empire = {
					max_naval_capacity > 299
				}
			}
			event_target:raider_khanate = { create_very_large_marauder_auxiliaries = yes }
		}
	}
}

### The Future of the Horde (HIDDEN)
country_event = {
	id = marauder.600
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		is_country_type = awakened_marauders
		NOT = { has_country_flag = marauder600_happened }
	}

	immediate = {
		set_country_flag = marauder600_happened
		remove_global_flag = marauder_crisis_ongoing
		random_list = {
			60 = {
				# Fractures into Diadochi
				country_event = { id = marauder.601 }
				modifier = {
					factor = 0 # Should not happen if Marauder is too small
					num_owned_planets < 6
				}
			}
			10 = {
				# Stays united in New Khanate
				country_event = { id = marauder.602 }
				modifier = {
					factor = 0 # Can only happens if Horde owns planets
					num_owned_planets < 1
				}
			}
			10 = {
				# Turns into Democratic Federation
				modifier = {
					factor = 0 # Can only happen if there are enough Satrapies
					count_country = {
						limit = { is_subject_type = satrapy }
						count < 2
					}
				}
				modifier = {
					factor = 0 # Can only happens if Horde owns planets
					num_owned_planets < 1
				}
				country_event = { id = marauder.603 }
			}
			10 = {
				# Reverts to old ways
				modifier = {
					factor = 0 # Fallback option if Horde owns no planets
					num_owned_planets > 0
				}
				country_event = { id = marauder.604 }
			}
		}
	}
}

# The Diadochi (HIDDEN)
country_event = {
	id = marauder.601
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		owner_species = { save_event_target_as = marauder_species }
		every_owned_fleet = {
			limit = {
				count_owned_ship = {
					count < 1
					limit = { is_ship_size = starbase_marauder }
				}
			}
			delete_fleet = this
		}
		every_country = {
			limit = { has_modifier = satrapy_of_horde }
			remove_modifier = "satrapy_of_horde"
			set_subject_of = {
				who = none
			}
			country_event = { id = marauder.670 days = 4 }
		}

		# Two Diadochi (Marauder small)
		if = {
			limit = {
				OR = {
					num_owned_planets < 10
					count_system_within_border = {
						count < 4
						limit = {
							any_system_planet = {
								has_owner = yes
								is_owned_by = root
							}
							is_potential_diadochi_system = yes
						}
					}
				}
			}

			assign_third_diadochi_planets = yes
			assign_fourth_diadochi_planets = yes

			assign_diadochi_systems = yes

			create_third_diadochi = yes
			create_fourth_diadochi = yes

			set_diadochi_claims = yes

			observer_event = { id = observer.20 }
			every_playable_country = {
				limit = { is_ai = no }
				country_event = { id = marauder.620 }
			}
			destroy_country = yes
		}

		# Four Diadochi
		else = {

			assign_first_diadochi_planets = yes
			assign_second_diadochi_planets = yes
			assign_third_diadochi_planets = yes
			assign_fourth_diadochi_planets = yes

			assign_diadochi_systems = yes

			create_first_diadochi = yes
			create_second_diadochi = yes
			create_third_diadochi = yes
			create_fourth_diadochi = yes

			set_diadochi_claims = yes

			observer_event = { id = observer.20 }
			every_playable_country = {
				limit = { is_ai = no }
				country_event = { id = marauder.620 }
			}
			destroy_country = yes
		}
	}
}

# The New Khanate (HIDDEN)
country_event = {
	id = marauder.602
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		owner_species = { save_event_target_as = marauder_species }
		every_owned_fleet = {
			limit = {
				count_owned_ship = {
					count < 1
					limit = { is_ship_size = starbase_marauder }
				}
			}
			delete_fleet = this
		}
		every_subject = {
			country_event = { id = marauder.671 days = 10 }
		}
		create_country = {
			name_list = random
			species = event_target:marauder_species
			type = default
			authority = auth_imperial
			civics = { civic = civic_great_khans_legacy }
			origin = "origin_khan_successor"
			ethos = {
				ethic = ethic_fanatic_militarist
				ethic = ethic_xenophobe
			}
			ignore_initial_colony_error = yes
		}
		last_created_country = {
			save_event_target_as = new_khanate
			set_country_flag = new_khanate_flag
			set_name = random
		}
		every_owned_fleet = {
			set_owner = event_target:new_khanate
		}
		every_owned_planet = {
			set_owner = event_target:new_khanate
			set_controller = event_target:new_khanate
		}
		every_system_within_border = {
			limit = { exists = starbase }
			starbase = {
				set_owner = event_target:new_khanate
			}
		}
		event_target:new_khanate = {
			add_resource = {
				minerals = 20000
				energy = 20000
				alloys = 20000
				consumer_goods = 20000
				food = 20000
				influence = 1000
			}
			copy_techs_from = { target = root }
			every_owned_starbase = {
				set_starbase_size = starbase_outpost
			}
			if = {
				limit = {
					any_owned_starbase = { has_starbase_size = starbase_outpost }
				}
				random_owned_starbase = {
					limit = { has_starbase_size = starbase_outpost }
					set_starbase_size = starbase_starhold
					set_starbase_module = {
						slot = 1
						module = shipyard
					}
					set_starbase_module = {
						slot = 2
						module = shipyard
					}
					set_starbase_module = {
						slot = 3
						module = shipyard
					}
				}
				if = {
					limit = {
						any_owned_starbase = { has_starbase_size = starbase_outpost }
					}
					random_owned_starbase = {
						limit = { has_starbase_size = starbase_outpost }
						set_starbase_size = starbase_starhold
					}
				}
				if = {
					limit = {
						any_owned_starbase = { has_starbase_size = starbase_outpost }
					}
					random_owned_starbase = {
						limit = { has_starbase_size = starbase_outpost }
						set_starbase_size = starbase_starhold
					}
				}
			}
			# Survey Own Space
			every_planet_within_border = {
				set_surveyed = {
					surveyed = yes
					surveyor = event_target:new_khanate
				}

			}
			# Survey Rest of Horde's Space
			root = {
				every_planet_within_border = {
					set_surveyed = {
						surveyed = yes
						surveyor = event_target:new_khanate
					}
				}
			}
			# Mining and Research Stations
			every_planet_within_border = {
				limit = {
					has_deposit_for = shipclass_mining_station
					has_mining_station = no
				}
				create_mining_station = {
					owner = event_target:new_khanate
				}
			}
			every_planet_within_border = {
				limit = {
					has_deposit_for = shipclass_research_station
					has_research_station = no
				}
				create_research_station = {
					owner = event_target:new_khanate
				}
			}
			create_marauder_successor_fleet = yes
			create_marauder_successor_fleet = yes
			create_marauder_successor_fleet = yes
		}
		# Establish Communications
		every_country = {
			limit = { has_communications = root }
			establish_communications_no_message = event_target:new_khanate
		}
		every_country = {
			limit = { has_modifier = satrapy_of_horde }
			remove_modifier = "satrapy_of_horde"
		}
		observer_event = { id = observer.22 }
		every_playable_country = {
			limit = { is_ai = no }
			country_event = { id = marauder.640 }
		}
		destroy_country = yes
	}
}

# Democratic Federation (HIDDEN)
country_event = {
	id = marauder.603
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		owner_species = { save_event_target_as = marauder_species }
		every_owned_fleet = {
			limit = {
				count_owned_ship = {
					count < 1
					limit = { is_ship_size = starbase_marauder }
				}
			}
			delete_fleet = this
		}
		create_country = {
			name_list = random
			species = event_target:marauder_species
			type = default
			authority = auth_democratic
			civics = random
			origin = "origin_khan_successor"
			ethos = {
				ethic = ethic_fanatic_egalitarian
				ethic = ethic_xenophile
			}
			ignore_initial_colony_error = yes
		}
		last_created_country = {
			save_event_target_as = new_khanate
			set_country_flag = democratic_khanate_flag
			set_name = random
		}
		every_owned_fleet = {
			set_owner = event_target:new_khanate
		}
		every_owned_planet = {
			set_owner = event_target:new_khanate
			set_controller = event_target:new_khanate
		}
		every_system_within_border = {
			limit = { exists = starbase }
			starbase = {
				set_owner = event_target:new_khanate
			}
		}
		event_target:new_khanate = {
			add_resource = {
				minerals = 20000
				energy = 20000
				alloys = 20000
				consumer_goods = 20000
				food = 20000
				influence = 1000
			}
			copy_techs_from = { target = root }
			every_owned_starbase = {
				set_starbase_size = starbase_outpost
			}
			if = {
				limit = {
					any_owned_starbase = { has_starbase_size = starbase_outpost }
				}
				random_owned_starbase = {
					limit = { has_starbase_size = starbase_outpost }
					set_starbase_size = starbase_starhold
					set_starbase_module = {
						slot = 1
						module = shipyard
					}
					set_starbase_module = {
						slot = 2
						module = shipyard
					}
					set_starbase_module = {
						slot = 3
						module = shipyard
					}
				}
			}
			# Survey Own Space
			every_planet_within_border = {
				set_surveyed = {
					surveyed = yes
					surveyor = event_target:new_khanate
				}
			}
			# Survey Rest of Marauder's Space
			root = {
				every_planet_within_border = {
					set_surveyed = {
						surveyed = yes
						surveyor = event_target:new_khanate
					}
				}
			}
			# Survey Rest of Horde's Space
			root = {
				every_planet_within_border = {
					set_surveyed = {
						surveyed = yes
						surveyor = event_target:new_khanate
					}
				}
			}
			# Mining and Research Stations
			every_planet_within_border = {
				limit = {
					has_deposit_for = shipclass_mining_station
					has_mining_station = no
				}
				create_mining_station = {
					owner = event_target:new_khanate
				}
			}
			every_planet_within_border = {
				limit = {
					has_deposit_for = shipclass_research_station
					has_research_station = no
				}
				create_research_station = {
					owner = event_target:new_khanate
				}
			}
			create_marauder_successor_fleet = yes
			create_marauder_successor_fleet = yes
			create_marauder_successor_fleet = yes
		}

		# Establish Communications
		every_country = {
			limit = { has_communications = root }
			establish_communications_no_message = event_target:new_khanate
		}
		every_country = {
			limit = { has_modifier = satrapy_of_horde }
			country_event = { id = marauder.660}
			remove_modifier = "satrapy_of_horde"
			set_subject_of = {
				who = none
			}
		}
		observer_event = { id = observer.23 }
		every_country = {
			limit = {
				NOT = { is_subject_type = satrapy }
				is_ai = no
			}
			country_event = { id = marauder.661}
		}
		destroy_country = yes
	}
}

# The Old Ways (HIDDEN)
country_event = {
	id = marauder.604
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		owner_species = { save_event_target_as = marauder_species }
		create_country = {
			name_list = random
			species = event_target:marauder_species
			type = dormant_marauders
			civics = { civic = civic_anarcho_tribalism }
			flag = {
				icon = {
					category = "pirate"
					file = "flag_pirate_5.dds"
				}
				background= {
					category = "backgrounds"
					file = "00_solid.dds"
				}
				colors={
					"black"
					"black"
					"null"
					"null"
				}
			}
			ethos = {
				ethic = ethic_fanatic_militarist
				ethic = ethic_xenophobe
			}
			ignore_initial_colony_error = yes
		}
		last_created_country = {
			save_event_target_as = restored_marauders
			set_country_flag = restored_marauders_flag
			set_name = random
			if = {
				limit = { root = { has_country_flag = marauder_1 } }
				set_country_flag = marauder_1
				break = yes
			}
			if = {
				limit = { root = { has_country_flag = marauder_2 } }
				set_country_flag = marauder_2
				break = yes
			}
			if = {
				limit = { root = { has_country_flag = marauder_3 } }
				set_country_flag = marauder_3

			}
		}
		every_owned_fleet = {
			limit = {
				OR = {
					has_fleet_flag = satrapy_garrison
					has_fleet_flag = satrapy_garrison_fleet
					has_fleet_flag = horde_auxuliaries
				}
			}
			destroy_fleet = this
		}
		every_owned_fleet = {
			set_owner = event_target:restored_marauders
		}
		every_system_within_border = {
			limit = { exists = starbase }
			starbase = {
				set_owner = event_target:restored_marauders
			}
		}

		# Establish Communications
		every_country = {
			limit = { has_communications = root }
			establish_communications_no_message = event_target:restored_marauders
		}
		every_country = {
			limit = { has_modifier = satrapy_of_horde }
			remove_modifier = "satrapy_of_horde"
			country_event = { id = marauder.670 days = 10 }
		}
		observer_event = { id = observer.21 }
		every_playable_country = {
			limit = { is_ai = no }
			country_event = { id = marauder.630}
		}
		destroy_country = yes
	}
}

# The Horde Splinters
country_event = {
	id = marauder.620
	title = "marauder.620.name"
	desc = "marauder.620.desc"
	picture = GFX_evt_arguing_senate
	show_sound = event_conversation

	is_triggered_only = yes

	option = {
		name = marauder.620.a
	}
}

# The Old Ways
country_event = {
	id = marauder.630
	title = "marauder.630.name"
	desc = "marauder.630.desc"
	picture = GFX_evt_smugglers_in_bar
	show_sound = event_conversation

	is_triggered_only = yes

	option = {
		name = marauder.630.a
	}
}

# The New Khanate
country_event = {
	id = marauder.640
	title = "marauder.640.name"
	desc = "marauder.640.desc"
	picture = GFX_evt_arguing_senate
	show_sound = event_conversation

	is_triggered_only = yes

	option = {
		name = marauder.640.a
	}
}

# The New Galactic Horde (Satrapy)
country_event = {
	id = marauder.660
	title = "marauder.660.name"
	desc = "marauder.660.desc"
	picture = GFX_evt_arguing_senate
	show_sound = event_conversation

	is_triggered_only = yes

	option = {
		name = marauder.660.a
		ai_chance = {
			factor = 100
		}
		join_alliance = {
			who = event_target:new_khanate
			name = NAME_Galactic_Horde
			override_requirements = yes
		}
	}
	option = {
		name = marauder.660.b
	}
}

# The New Galactic Horde (Non-Satrapy)
country_event = {
	id = marauder.661
	title = "marauder.660.name"
	desc = "marauder.661.desc"
	picture = GFX_evt_arguing_senate
	show_sound = event_conversation

	is_triggered_only = yes

	option = {
		name = marauder.661.a
	}
}

# Horde Diplomacy after Great Khan's death
country_event = {
	id = marauder.665
	title = "TRANSMISSION"
	desc = "marauder.665.a.desc"

	picture_event_data = {
		room = no_video_feed_room
	}

	is_triggered_only = yes
	force_open = yes
	diplomatic = yes

	trigger = {
		from = { is_country_type = awakened_marauders }
		has_global_flag = great_khan_dead
	}

	immediate = {
		set_country_flag = marauder_diplomacy_engaged
	}

	after = {
		hidden_effect = {
			remove_country_flag = marauder_diplomacy_engaged
		}
	}

	option = {
		name = marauder.665.a
		default_hide_option = yes
	}
}

# Satrapy No Longer
country_event = {
	id = marauder.670
	title = "marauder.670.name"
	desc = "marauder.670.desc"
	picture = GFX_evt_arguing_senate
	show_sound = event_conversation

	is_triggered_only = yes

	option = {
		name = marauder.670.a
	}
}

# Garrison Station Scuttled
country_event = {
	id = marauder.671
	title = "marauder.671.name"
	desc = "marauder.671.desc"
	picture = GFX_evt_large_explosion
	show_sound = event_ship_explosion

	is_triggered_only = yes

	option = {
		name = marauder.671.a
	}
}

### Neighbor Events

event = {
	id = marauder.699
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		any_playable_country = {
			is_country_type = default
			any_system_within_border = {
				any_neighbor_system = {
					exists = space_owner
					space_owner = {
						is_country_type = dormant_marauders
						has_communications = prevprevprev
					}
				}
			}
		}
	}

	immediate = {
		random_playable_country = {
			limit = {
				any_system_within_border = {
					any_neighbor_system = {
						exists = space_owner
						space_owner = {
							is_country_type = dormant_marauders
							has_communications = prevprevprev
						}
					}
				}
			}
			random_list = {
				20 = {
					country_event = { id = marauder.700 }
				}
				80 = {}
			}
		}
	}
}

country_event = {
	id = marauder.700
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		random_system_within_border = {
			limit = {
				any_neighbor_system = {
					exists = space_owner
					space_owner = { is_country_type = dormant_marauders }
				}
			}
			save_event_target_as = border_system
			random_system_planet = {
				limit = {
					is_star = no
					is_moon = no
				}
				save_event_target_as = border_planet
			}
			random_neighbor_system = {
				limit = {
					exists = space_owner
					space_owner = { is_country_type = dormant_marauders }
				}
				space_owner = {
					save_event_target_as = marauder_neighbor
					owner_species = { save_event_target_as = marauder_neighbor_species }
				}
			}
		}

		random_list = {
			10 = {
				if = {
					limit = {
						has_policy_flag = refugees_allowed
						any_owned_planet = {
							habitability = { who = event_target:marauder_neighbor_species value > 0.4 }
							#free_housing > 0
						}
					}
					random_owned_planet = {
						limit = {
							habitability = { who = event_target:marauder_neighbor_species value > 0.4 }
							#free_housing > 0
						}
						weights = {
							base = 1
							modifier = {
								add = 5
								free_housing > 0
							}
							modifier = {
								add = 10
								free_housing > 1
							}
							modifier = {
								factor = 2
								habitability = { who = event_target:marauder_neighbor_species value > 0.6 }
							}
						}
						create_pop = {
							species = event_target:marauder_neighbor_species
							ethos = {
								ethic = "ethic_militarist"
							}
						}
						planet_event = { id = marauder.701 }
					}
				}
			}
			10 = {
				country_event = { id = marauder.702 }
			}
			10 = {
				country_event = { id = marauder.703 }
			}
			10 = {
				country_event = { id = marauder.704 }
			}
			10 = {
				country_event = { id = marauder.705 }
			}
			10 = {
				country_event = { id = marauder.706 }
			}
			10 = {
				country_event = { id = marauder.707 }
			}
		}
	}
}

# Refugees
planet_event = {
	id = marauder.701
	title = "marauder.701.name"
	desc = "marauder.701.desc"
	picture = GFX_evt_colony_settlement
	show_sound = event_radio_chatter
	location = root

	is_triggered_only = yes

	trigger = {
		owner = {
			NOT = { has_country_flag = marauder_neighbor_event_1 }
		}
	}

	immediate = {
		owner = {
			set_country_flag = marauder_neighbor_event_1
		}
	}

	option = {
		name = marauder.701.a
	}
}

# Battle Tactics
country_event = {
	id = marauder.702
	title = "marauder.702.name"
	desc = {
		text = marauder.702.a.desc
		trigger = {
			NOR = {
				has_authority = auth_hive_mind
				has_authority = auth_machine_intelligence
			}
		}
	}
	desc = {
		text = marauder.702.b.desc
		trigger = {
			has_authority = auth_hive_mind
		}
	}
	desc = {
		text = marauder.702.c.desc
		trigger = {
			has_authority = auth_machine_intelligence
		}
	}
	picture = GFX_evt_machine_space_battle
	show_sound = event_space_battle

	is_triggered_only = yes

	trigger = {
		NOT = { has_country_flag = marauder_neighbor_event_2 }
	}

	immediate = {
		set_country_flag = marauder_neighbor_event_2
	}

	option = {
		name = EXCELLENT
		add_modifier = {
			modifier = "marauder_skirmishing"
			days = 3600
		}
	}
}

# New Admiral
country_event = {
	id = marauder.703
	title = "marauder.703.name"
	desc = "marauder.703.desc"
	picture = GFX_evt_hangar_bay
	show_sound = event_radio_chatter

	is_triggered_only = yes

	trigger = {
		NOT = { has_country_flag = marauder_neighbor_event_3 }
	}

	immediate = {
		set_country_flag = marauder_neighbor_event_3
	}

	option = {
		name = marauder.703.a
		trigger = {
			is_homicidal = no
		}
		create_leader = {
			class = admiral
			species = event_target:marauder_neighbor_species
			name = random
			skill = 4
			leader_age_min = 25
			leader_age_max = 45
			traits = {
				trait = leader_trait_mercenary_warrior
				trait = random_trait
			}
		}
		custom_tooltip = gain_marauder_admiral
	}
	option = {
		name = marauder.703.b
		trigger = {
			is_homicidal = no
		}
	}
	option = {
		name = marauder.703.c
		trigger = {
			has_valid_civic = civic_machine_terminator
		}
		add_resource = { influence = 50 }
	}
	option = {
		name = marauder.703.d
		trigger = {
			has_valid_civic = civic_hive_devouring_swarm
		}
		add_resource = {
			food = 1
			influence = 50
		}
	}
	option = {
		name = marauder.703.e
		trigger = {
			has_valid_civic = civic_fanatic_purifiers
		}
		add_resource = { influence = 50 }
	}
}

# New Fleet
country_event = {
	id = marauder.704
	title = "marauder.704.name"
	desc = "marauder.704.desc"
	picture = GFX_evt_pirate_armada
	show_sound = event_radio_chatter

	is_triggered_only = yes

	trigger = {
		NOT = { has_country_flag = marauder_neighbor_event_4 }
		years_passed >= 30
	}

	immediate = {
		set_country_flag = marauder_neighbor_event_4
	}

	option = {
		name = marauder.704.a
		create_fleet = {
			name = "NAME_Salvaged_Fleet"
			effect = {
				set_owner = root
				while = {
					count = 4
					create_ship = {
						name = random
						prefix = no
						design = "NAME_Outrider"
						graphical_culture = "pirate_01"
					}
				}
				while = {
					count = 2
					create_ship = {
						name = random
						prefix = no
						design = "NAME_Lancer"
						graphical_culture = "pirate_01"
					}
				}
				while = {
					count = 1
					create_ship = {
						name = random
						prefix = no
						design = "NAME_Void_Champion"
						graphical_culture = "pirate_01"
					}
				}
				set_location = root.capital_scope
			}
		}
		custom_tooltip = gain_marauder_fleet
	}
	option = {
		name = marauder.704.b
		add_resource = { minerals = 200 }
	}
}

# Resource Cache
country_event = {
	id = marauder.705
	title = "marauder.705.name"
	desc = "marauder.705.desc"
	picture = GFX_evt_space_debris
	show_sound = event_scanner

	is_triggered_only = yes

	trigger = {
		NOT = { has_country_flag = marauder_neighbor_event_5 }
	}

	immediate = {
		set_country_flag = marauder_neighbor_event_5
	}

	option = {
		name = EXCELLENT
		add_resource = {
			minerals = 300
			energy = 300
		}
	}
}

# Abandoned Habitat
country_event = {
	id = marauder.706
	title = "marauder.706.name"
	desc = "marauder.706.desc"
	picture = GFX_evt_space_debris
	show_sound = event_scanner

	is_triggered_only = yes

	trigger = {
		NOT = { has_country_flag = marauder_neighbor_event_6 }
	}

	immediate = {
		set_country_flag = marauder_neighbor_event_6
	}

	option = {
		name = marauder.706.a
		add_resource = { minerals = 400 }
	}
}

# Shuttle
country_event = {
	id = marauder.707
	title = "marauder.707.name"
	desc = "marauder.707.desc"
	picture = GFX_evt_machine_space_battle
	show_sound = event_ship_thrusters

	is_triggered_only = yes

	trigger = {
		NOT = { has_country_flag = marauder_neighbor_event_7 }
	}

	immediate = {
		set_country_flag = marauder_neighbor_event_7
	}

	option = {
		name = marauder.707.a
		add_resource = { energy = 400 }
	}
}

# Great Khan's Throne
country_event = {
	id = marauder.710
	title = "marauder.710.name"
	desc = "marauder.710.desc"
	picture = GFX_evt_space_walk
	show_sound = event_ship_thrusters

	is_triggered_only = yes

	option = {
		name = EXCELLENT
		add_relic = r_khans_throne
	}
}

# on_leader_death - make extra sure that flag is set
country_event = {
	id = marauder.711
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		from = {
			has_leader_flag = great_khan
		}
	}
	immediate = {
		set_global_flag = great_khan_dead
		if = {
			limit = { exists = event_target:great_khan_ruler }
			event_target:great_khan_ruler = {
				kill_leader = { show_notification = no }
			}
		}
		if = {
			limit = { exists = event_target:great_khan }
			event_target:great_khan = {
				kill_leader = { show_notification = no }
			}
		}
		country_event = { id = marauder.712 days = 10 }
	}
}

# copy of marauder.514, fallback for when the Khan mysteriously dies outside of the events meant to kill them.
country_event = {
	id = marauder.712
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		NOT = { has_country_flag = khan_dead_event_fine }
	}
	immediate = {
		set_global_flag = great_khan_dead
		set_country_flag = khan_dead_event_fine
		set_country_flag = khan_dead_age
		observer_event = { id = observer.17 }
		every_playable_country = {
			limit = { is_ai = no }
			country_event = { id = marauder.513 }
		}
		country_event = { id = marauder.600 days = 200 random = 100 }
		if = {
			limit = {
				exists = event_target:great_khan_ruler
			}
			event_target:great_khan_ruler = {
				kill_leader = { show_notification = no }
			}
		}
		if = {
			limit = {
				exists = event_target:great_khan
			}
			event_target:great_khan = {
				kill_leader = { show_notification = no }
			}
		}
	}
}
