### Federations Scripted Effects

# Create The Lesser Messenger effect

create_lesser_messenger = {
	custom_tooltip = get_messenger
	hidden_effect = {
		owner = {
			create_fleet = {
				name = "NAME_Lesser_Messenger"
				settings = {
					spawn_debris = no
				}
				effect = {
					set_owner = prev
					create_ship_design = {
						design = "NAME_Lessenger"
					}
					create_ship = {
						name = "NAME_Lesser_Messenger"
						design = last_created_design
						prefix = no
						upgradable = no
					}
					set_location = fromfrom.planet
					set_lessenger_damage = yes
				}
			}
		}
	}
}

set_lessenger_damage = {
	random_list = {
		33 = {
			add_modifier = {
				modifier = lessenger_75
				days = -1
			}
			enable_special_project = {
				name = "LESSENGER_REMODEL"
				owner = this.owner
				location = this
			}
		}
		33 = {
			add_modifier = {
				modifier = lessenger_50
				days = -1
			}
			enable_special_project = {
				name = "LESSENGER_REMODEL"
				owner = this.owner
				location = this
			}
		}
		33 = {
			add_modifier = {
				modifier = lessenger_25
				days = -1
			}
			enable_special_project = {
				name = "LESSENGER_REMODEL"
				owner = this.owner
				location = this
			}
		}
	}
}

remove_lessenger_damage = {
	every_controlled_ship = {
		remove_modifier = lessenger_75
		remove_modifier = lessenger_50
		remove_modifier = lessenger_25
	}
}

scion_engineering_tech = {
	if = {
		limit = {
			NOT = { has_technology = tech_alloys_1 }
			can_research_technology = tech_alloys_1
		}
		give_technology = { tech = tech_alloys_1 }
	}
	else_if = {
		limit = {
			NOT = { has_technology = tech_mineral_purification_2 }
			can_research_technology = tech_mineral_purification_2
		}
		give_technology = { tech = tech_mineral_purification_2 }
	}
	else_if = {
		limit = {
			NOT = { has_technology = tech_space_defense_station_improvement }
			can_research_technology = tech_space_defense_station_improvement
		}
		give_technology = { tech = tech_space_defense_station_improvement }
	}
	else_if = {
		limit = {
			NOT = { has_technology = tech_battleships }
			can_research_technology = tech_battleships
		}
		give_technology = { tech = tech_battleships }
	}
	else_if = {
		limit = {
			NOT = { has_technology = tech_battleship_hull_2 }
			can_research_technology = tech_battleship_hull_2
		}
		give_technology = { tech = tech_battleship_hull_2 }
	}
}

scion_physics_tech = {
	if = {
		limit = {
			NOT = { has_technology = tech_space_science_2 }
			can_research_technology = tech_space_science_2
		}
		give_technology = { tech = tech_space_science_2 }
	}
	else_if = {
		limit = {
			NOT = { has_technology = tech_self_aware_logic }
			can_research_technology = tech_self_aware_logic
		}
		give_technology = { tech = tech_self_aware_logic }
	}
	else_if = {
		limit = {
			NOT = { has_technology = tech_antimatter_power }
			can_research_technology = tech_antimatter_power
		}
		give_technology = { tech = tech_antimatter_power }
	}
	else_if = {
		limit = {
			NOT = { has_technology = tech_combat_computers_autonomous }
			can_research_technology = tech_combat_computers_autonomous
		}
		give_technology = { tech = tech_combat_computers_autonomous }
	}
	else_if = {
		limit = {
			NOT = { has_technology = tech_jump_drive_1 }
			can_research_technology = tech_jump_drive_1
		}
		give_technology = { tech = tech_jump_drive_1 }
	}
}

scion_society_tech = {
	if = {
		limit = {
			NOT = { has_technology = tech_eco_simulation }
			can_research_technology = tech_eco_simulation
		}
		give_technology = { tech = tech_eco_simulation }
	}
	else_if = {
		limit = {
			NOT = { has_technology = tech_society_2 }
			can_research_technology = tech_society_2
		}
		give_technology = { tech = tech_society_2 }
	}
	else_if = {
		limit = {
			NOT = { has_technology = tech_colonization_4 }
			can_research_technology = tech_colonization_4
		}
		give_technology = { tech = tech_colonization_4 }
	}
	else_if = {
		limit = {
			NOT = { has_technology = tech_climate_restoration }
			can_research_technology = tech_climate_restoration
		}
		give_technology = { tech = tech_climate_restoration }
	}
	else_if = {
		limit = {
			NOT = { has_technology = tech_ascension_theory }
			can_research_technology = tech_ascension_theory
		}
		give_technology = { tech = tech_ascension_theory }
	}
}

federation_origin_planet_setup = {
	set_planet_size = 18
	random_list = {
		1 = { change_pc = pc_tropical }
		1 = { change_pc = pc_arid }
		1 = { change_pc = pc_continental }
		1 = { change_pc = pc_ocean }
		1 = { change_pc = pc_tundra }
		1 = { change_pc = pc_arctic }
		1 = { change_pc = pc_alpine }
		1 = { change_pc = pc_savannah }
		1 = { change_pc = pc_desert }
	}
	reroll_planet = yes
}

scion_fe_intervention = {
	if = {
		limit = { fleet_power < 2000 }
		root = { create_fe_intervention_1 = yes }
	}
	else_if = {
		limit = {
			fleet_power >= 2000
			fleet_power < 3999
		}
		root = { create_fe_intervention_2 = yes }
	}
	else_if = {
		limit = {
			fleet_power >= 4000
			fleet_power < 5999
		}
		root = { create_fe_intervention_3 = yes }
	}
	else_if = {
		limit = {
			fleet_power >= 6000
			fleet_power < 9999
		}
		root = { create_fe_intervention_4 = yes }
	}
	else_if = {
		limit = {
			fleet_power >= 10000
			fleet_power < 19999
		}
		root = { create_fe_intervention_5 = yes }
	}
	else_if = {
		limit = {
			fleet_power >= 20000
			fleet_power < 39999
		}
		root = { create_fe_intervention_6 = yes }
	}
	else_if = {
		limit = {
			fleet_power >= 40000
			fleet_power < 59999
		}
		root = { create_fe_intervention_7 = yes }
	}
	else_if = {
		limit = {
			fleet_power >= 60000
		}
		root = { create_fe_intervention_8 = yes }
	}
}

create_fe_intervention_leader = {
	create_leader = {
		class = admiral
		species = event_target:fe_species
		name = random
		skill = 7
		event_leader = yes	# prevents this leader from leading factions and winning elections
		effect = {
			save_event_target_as = fe_intervention_admiral
		}
	}
}

create_fe_intervention_1 = {
	set_country_flag = borrowed_fleet_from@event_target:scion_master
	create_fe_intervention_leader = yes
	capital_scope = {
		create_fleet = {
			effect = {
				set_owner = event_target:scion_master # For ship names
				set_fleet_flag = scion_borrowed_fleet
				while = {
					count = 1
					create_fallen_empire_small_ship = yes
				}
				set_location = {
					target = prev
					distance = 45
					angle = random
				}
				set_owner = root
				assign_leader = event_target:fe_intervention_admiral
			}
			settings = {
				can_upgrade = no
				can_disband = no
				can_change_composition = no
				can_change_leader = no
				uses_naval_capacity = no
			}
		}
	}
}

create_fe_intervention_2 = {
	set_country_flag = borrowed_fleet_from@event_target:scion_master
	create_fe_intervention_leader = yes
	capital_scope = {
		create_fleet = {
			effect = {
				set_owner = event_target:scion_master # For ship names
				set_fleet_flag = scion_borrowed_fleet
				while = {
					count = 3
					create_fallen_empire_small_ship = yes
				}
				set_location = {
					target = prev
					distance = 45
					angle = random
				}
				set_owner = root
				assign_leader = event_target:fe_intervention_admiral
			}
			settings = {
				can_upgrade = no
				can_disband = no
				can_change_composition = no
				can_change_leader = no
				uses_naval_capacity = no
			}
		}
	}
}

create_fe_intervention_3 = {
	set_country_flag = borrowed_fleet_from@event_target:scion_master
	create_fe_intervention_leader = yes
	capital_scope = {
		create_fleet = {
			effect = {
				set_owner = event_target:scion_master # For ship names
				set_fleet_flag = scion_borrowed_fleet
				while = {
					count = 1
					create_fallen_empire_large_ship = yes
				}
				set_location = {
					target = prev
					distance = 45
					angle = random
				}
				set_owner = root
				assign_leader = event_target:fe_intervention_admiral
			}
			settings = {
				can_upgrade = no
				can_disband = no
				can_change_composition = no
				can_change_leader = no
				uses_naval_capacity = no
			}
		}
	}
}

create_fe_intervention_4 = {
	set_country_flag = borrowed_fleet_from@event_target:scion_master
	create_fe_intervention_leader = yes
	capital_scope = {
		create_fleet = {
			effect = {
				set_owner = event_target:scion_master # For ship names
				set_fleet_flag = scion_borrowed_fleet
				while = {
					count = 1
					create_fallen_empire_large_ship = yes
				}
				while = {
					count = 2
					create_fallen_empire_small_ship = yes
				}
				set_location = {
					target = prev
					distance = 45
					angle = random
				}
				set_owner = root
				assign_leader = event_target:fe_intervention_admiral
			}
			settings = {
				can_upgrade = no
				can_disband = no
				can_change_composition = no
				can_change_leader = no
				uses_naval_capacity = no
			}
		}
	}
}

create_fe_intervention_5 = {
	set_country_flag = borrowed_fleet_from@event_target:scion_master
	create_fe_intervention_leader = yes
	capital_scope = {
		create_fleet = {
			effect = {
				set_owner = event_target:scion_master # For ship names
				set_fleet_flag = scion_borrowed_fleet
				while = {
					count = 1
					create_fallen_empire_large_ship = yes
				}
				while = {
					count = 4
					create_fallen_empire_small_ship = yes
				}
				set_location = {
					target = prev
					distance = 45
					angle = random
				}
				set_owner = root
				assign_leader = event_target:fe_intervention_admiral
			}
			settings = {
				can_upgrade = no
				can_disband = no
				can_change_composition = no
				can_change_leader = no
				uses_naval_capacity = no
			}
		}
	}
}

create_fe_intervention_6 = {
	set_country_flag = borrowed_fleet_from@event_target:scion_master
	create_fe_intervention_leader = yes
	capital_scope = {
		create_fleet = {
			effect = {
				set_owner = event_target:scion_master # For ship names
				set_fleet_flag = scion_borrowed_fleet
				while = {
					count = 2
					create_fallen_empire_large_ship = yes
				}
				while = {
					count = 4
					create_fallen_empire_small_ship = yes
				}
				set_location = {
					target = prev
					distance = 45
					angle = random
				}
				set_owner = root
				assign_leader = event_target:fe_intervention_admiral
			}
			settings = {
				can_upgrade = no
				can_disband = no
				can_change_composition = no
				can_change_leader = no
				uses_naval_capacity = no
			}
		}
	}
}

create_fe_intervention_7 = {
	set_country_flag = borrowed_fleet_from@event_target:scion_master
	create_fe_intervention_leader = yes
	capital_scope = {
		create_fleet = {
			effect = {
				set_owner = event_target:scion_master # For ship names
				set_fleet_flag = scion_borrowed_fleet
				while = {
					count = 3
					create_fallen_empire_large_ship = yes
				}
				while = {
					count = 6
					create_fallen_empire_small_ship = yes
				}
				set_location = {
					target = prev
					distance = 45
					angle = random
				}
				set_owner = root
				assign_leader = event_target:fe_intervention_admiral
			}
			settings = {
				can_upgrade = no
				can_disband = no
				can_change_composition = no
				can_change_leader = no
				uses_naval_capacity = no
			}
		}
	}
}

create_fe_intervention_8 = {
	set_country_flag = borrowed_fleet_from@event_target:scion_master
	create_fe_intervention_leader = yes
	capital_scope = {
		create_fleet = {
			effect = {
				set_owner = event_target:scion_master # For ship names
				set_fleet_flag = scion_borrowed_fleet
				while = {
					count = 6
					create_fallen_empire_large_ship = yes
				}
				while = {
					count = 12
					create_fallen_empire_small_ship = yes
				}
				set_location = {
					target = prev
					distance = 45
					angle = random
				}
				set_owner = root
				assign_leader = event_target:fe_intervention_admiral
			}
			settings = {
				can_upgrade = no
				can_disband = no
				can_change_composition = no
				can_change_leader = no
				uses_naval_capacity = no
			}
		}
	}
}

create_common_ground_member = {
	if = {
		limit = {
			root = { has_spiritualist_government = yes }
		}
		create_country = {
			name_list = random
			species = event_target:fed_planet_$NUM$_species
			type = default
			origin = "origin_common_ground_npc"
			ignore_initial_colony_error = yes
			day_zero_contact = no
			randomize_ethos = yes
			ethos = {
				ethic = "ethic_xenophile"
				ethic = "ethic_spiritualist"
				ethic = "ethic_fanatic_spiritualist"
			}
			effect = {
				save_event_target_as = fed_member_$NUM$
				establish_communications_no_message = root
			}
		}
	}
	else_if = {
		limit = {
			root = { has_militarist_government = yes }
		}
		create_country = {
			name_list = random
			species = event_target:fed_planet_$NUM$_species
			type = default
			origin = "origin_common_ground_npc"
			ignore_initial_colony_error = yes
			day_zero_contact = no
			randomize_ethos = yes
			ethos = {
				ethic = "ethic_xenophile"
				ethic = "ethic_militarist"
				ethic = "ethic_fanatic_militarist"
			}
			effect = {
				save_event_target_as = fed_member_$NUM$
				establish_communications_no_message = root
			}
		}
	}
	else_if = {
		limit = {
			root = { has_pacifist_government = yes }
		}
		create_country = {
			name_list = random
			species = event_target:fed_planet_$NUM$_species
			type = default
			origin = "origin_common_ground_npc"
			ignore_initial_colony_error = yes
			day_zero_contact = no
			randomize_ethos = yes
			ethos = {
				ethic = "ethic_xenophile"
				ethic = "ethic_pacifist"
				ethic = "ethic_fanatic_pacifist"
			}
			effect = {
				save_event_target_as = fed_member_$NUM$
				establish_communications_no_message = root
			}
		}
	}
	else_if = {
		limit = {
			root = { has_materialist_government = yes }
		}
		create_country = {
			name_list = random
			species = event_target:fed_planet_$NUM$_species
			type = default
			origin = "origin_common_ground_npc"
			ignore_initial_colony_error = yes
			day_zero_contact = no
			randomize_ethos = yes
			ethos = {
				ethic = "ethic_xenophile"
				ethic = "ethic_materialist"
				ethic = "ethic_fanatic_materialist"
			}
			effect = {
				save_event_target_as = fed_member_$NUM$
				establish_communications_no_message = root
			}
		}
	}
	else_if = {
		limit = {
			root = { is_authoritarian = yes }
		}
		create_country = {
			name_list = random
			species = event_target:fed_planet_$NUM$_species
			type = default
			origin = "origin_common_ground_npc"
			ignore_initial_colony_error = yes
			day_zero_contact = no
			randomize_ethos = yes
			ethos = {
				ethic = "ethic_xenophile"
				ethic = "ethic_authoritarian"
				ethic = "ethic_fanatic_authoritarian"
			}
			effect = {
				save_event_target_as = fed_member_$NUM$
				establish_communications_no_message = root
			}
		}
	}
	else_if = {
		limit = {
			root = { is_egalitarian = yes }
		}
		create_country = {
			name_list = random
			species = event_target:fed_planet_$NUM$_species
			type = default
			origin = "origin_common_ground_npc"
			ignore_initial_colony_error = yes
			day_zero_contact = no
			randomize_ethos = yes
			ethos = {
				ethic = "ethic_xenophile"
				ethic = "ethic_egalitarian"
				ethic = "ethic_fanatic_egalitarian"
			}
			effect = {
				save_event_target_as = fed_member_$NUM$
				establish_communications_no_message = root
			}
		}
	}
	else = {
		create_country = {
			name_list = random
			species = event_target:fed_planet_$NUM$_species
			type = default
			origin = "origin_common_ground_npc"
			ignore_initial_colony_error = yes
			day_zero_contact = no
			randomize_ethos = yes
			ethos = {
				ethic = "ethic_xenophile"
				ethic = "ethic_fanatic_xenophile"
			}
			effect = {
				save_event_target_as = fed_member_$NUM$
				establish_communications_no_message = root
			}
		}
	}
}

create_hegemon_member = {
	if = {
		limit = {
			root = { has_spiritualist_government = yes }
		}
		create_country = {
			name = random
			name_list = random
			species = event_target:fed_planet_$NUM$_species
			type = default
			origin = "origin_hegemon_npc"
			ignore_initial_colony_error = yes
			day_zero_contact = no
			randomize_ethos = yes
			ethos = {
				ethic = "ethic_xenophile"
				ethic = "ethic_spiritualist"
				ethic = "ethic_fanatic_spiritualist"
			}
			effect = {
				save_event_target_as = fed_member_$NUM$
				establish_communications_no_message = root
			}
		}
	}
	else_if = {
		limit = {
			root = { has_militarist_government = yes }
		}
		create_country = {
			name = random
			name_list = random
			species = event_target:fed_planet_$NUM$_species
			type = default
			origin = "origin_hegemon_npc"
			ignore_initial_colony_error = yes
			day_zero_contact = no
			randomize_ethos = yes
			ethos = {
				ethic = "ethic_xenophile"
				ethic = "ethic_militarist"
				ethic = "ethic_fanatic_militarist"
			}
			effect = {
				save_event_target_as = fed_member_$NUM$
				establish_communications_no_message = root
			}
		}
	}
	else_if = {
		limit = {
			root = { has_pacifist_government = yes }
		}
		create_country = {
			name = random
			name_list = random
			species = event_target:fed_planet_$NUM$_species
			type = default
			origin = "origin_hegemon_npc"
			ignore_initial_colony_error = yes
			day_zero_contact = no
			randomize_ethos = yes
			ethos = {
				ethic = "ethic_xenophile"
				ethic = "ethic_pacifist"
				ethic = "ethic_fanatic_pacifist"
			}
			effect = {
				save_event_target_as = fed_member_$NUM$
				establish_communications_no_message = root
			}
		}
	}
	else_if = {
		limit = {
			root = { has_materialist_government = yes }
		}
		create_country = {
			name = random
			name_list = random
			species = event_target:fed_planet_$NUM$_species
			type = default
			origin = "origin_hegemon_npc"
			ignore_initial_colony_error = yes
			day_zero_contact = no
			randomize_ethos = yes
			ethos = {
				ethic = "ethic_xenophile"
				ethic = "ethic_materialist"
				ethic = "ethic_fanatic_materialist"
			}
			effect = {
				save_event_target_as = fed_member_$NUM$
				establish_communications_no_message = root
			}
		}
	}
	else_if = {
		limit = {
			root = { is_authoritarian = yes }
		}
		create_country = {
			name = random
			name_list = random
			species = event_target:fed_planet_$NUM$_species
			type = default
			origin = "origin_hegemon_npc"
			ignore_initial_colony_error = yes
			day_zero_contact = no
			randomize_ethos = yes
			ethos = {
				ethic = "ethic_xenophile"
				ethic = "ethic_authoritarian"
				ethic = "ethic_fanatic_authoritarian"
			}
			effect = {
				save_event_target_as = fed_member_$NUM$
				establish_communications_no_message = root
			}
		}
	}
	else_if = {
		limit = {
			root = { is_egalitarian = yes }
		}
		create_country = {
			name = random
			name_list = random
			species = event_target:fed_planet_$NUM$_species
			type = default
			origin = "origin_hegemon_npc"
			ignore_initial_colony_error = yes
			day_zero_contact = no
			randomize_ethos = yes
			ethos = {
				ethic = "ethic_xenophile"
				ethic = "ethic_egalitarian"
				ethic = "ethic_fanatic_egalitarian"
			}
			effect = {
				save_event_target_as = fed_member_$NUM$
				establish_communications_no_message = root
			}
		}
	}
	else = {
		create_country = {
			name = random
			name_list = random
			species = event_target:fed_planet_$NUM$_species
			type = default
			origin = "origin_hegemon_npc"
			ignore_initial_colony_error = yes
			day_zero_contact = no
			randomize_ethos = yes
			ethos = {
				ethic = "ethic_xenophile" # intentional outlier
			}
			effect = {
				save_event_target_as = fed_member_$NUM$
				establish_communications_no_message = root
			}
		}
	}
}

create_starting_leaders = {
	create_leader = {
		class = governor
		species = owner_main_species
	}
	create_leader = {
		class = scientist
		species = owner_main_species
	}
	create_leader = {
		class = scientist
		species = owner_main_species
	}
	create_leader = {
		class = scientist
		species = owner_main_species
	}
}

generate_lost_colony_parent_bonus = {
	while = {
		count = 2
		add_district_and_planet_size_if_needed_effect = {
			district = district_city
		}
	}
	while = {
		count = 2
		add_district_and_planet_size_if_needed_effect = {
			district = district_mining
		}
	}
	add_district_and_planet_size_if_needed_effect = {
		district = district_generator
	}
	add_district_and_planet_size_if_needed_effect = {
		district = district_farming
	}
	add_district_and_planet_size_if_needed_effect = {
		district = district_industrial
	}

	add_building = building_research_lab_1
	add_building = building_holo_theatres
	add_building = building_precinct_house

	while = {
		limit = { num_pops < 57 }
		create_pop = {
			species = owner_main_species
			ethos = random
		}
	}

	owner = {
		create_fleet = {
			effect = {
				set_owner = prev
				create_ship = {
					name = random
					random_existing_design = science
				}
				set_fleet_stance = evasive
				set_location = prev.capital_scope.star
				owner = {
					create_leader = {
						class = scientist
						sub_type = survey
						name = random
						species = owner_main_species
					}
				}
				set_leader = last_created_leader
			}
		}
	}
}

thesis_disband = {
	while = {
		limit = {
			any_owned_leader = {
				has_leader_flag = thesis_team
			}
		}
		random_owned_leader = {
			limit = {
				has_leader_flag = thesis_team
			}
			remove_leader_flag = thesis_team
		}
	}
}

wenkwort_continue_patrol = {
	random_list = {
		2 = { event_target:wenkwort_artem = { save_event_target_as = wenkwort_patrol_destination } }
		2 = { event_target:wenkwort_rellrait = { save_event_target_as = wenkwort_patrol_destination} }
		2 = { event_target:wenkwort_toxic = { save_event_target_as = wenkwort_patrol_destination} }
		1 = { event_target:wenkwort_truin = { save_event_target_as = wenkwort_patrol_destination} }
		1 = { event_target:wenkwort_gasgiant = { save_event_target_as = wenkwort_patrol_destination} }
		1 = { event_target:wenkwort_moon = { save_event_target_as = wenkwort_patrol_destination } }
	}
	auto_move_to_planet = {
		target = event_target:wenkwort_patrol_destination
		clear_auto_move_on_arrival = no
		arrival_effect = wenkwort_continue_patrol
	}
}

hegemony_join_operation_reward = {
	federation = {
		switch = {
			trigger = has_federation_flag
			hegemony_joint_operation_complete_success = {
				if = {
					limit = {
						NOT = { federation_level = 5 }
					}
					add_federation_experience = 1000
				}
				else = {
					add_cohesion = 100
				}
				event_target:federation_leader = {
					capital_scope = {
						add_deposit = d_federation_hegemony_monument_2
						create_ambient_object = {
							type = federation_hegemony_monument
							location = this
							scale = 0.6
						}
					}
				}
				hidden_effect = { set_federation_flag = had_successful_hegemony_joint_operation }
			}
			hegemony_joint_operation_partial_success = {
				if = {
					limit = {
						NOT = { federation_level = 5 }
					}
					add_federation_experience = 500
				}
				else = {
					add_cohesion = 50
				}
				event_target:federation_leader = {
					capital_scope = {
						add_deposit = d_federation_hegemony_monument_1
						create_ambient_object = {
							type = federation_hegemony_monument
							location = this
							scale = 0.6
						}
					}
				}
				hidden_effect = { set_federation_flag = had_successful_hegemony_joint_operation }
			}
			hegemony_joint_operation_partial_failure = {
				if = {
					limit = {
						NOT = { federation_level = 5 }
					}
					add_federation_experience = 250
				}
				else = {
					add_cohesion = 25
				}
			}
			hegemony_joint_operation_complete_failure = {
				add_cohesion = -50
				event_target:federation_leader = {
					add_resource = {
						influence = -50
					}
				}
			}
		}
	}
}

shattered_ring_world_conversion_effect = {
	export_trigger_value_to_variable = {
		trigger = num_districts
		parameters = {
			type = $DISTRICT$
		}
		variable = $VARIABLE$
	}
	multiply_variable = { which = $VARIABLE$ value = 4 }
	divide_variable = { which = $VARIABLE$ value = 5 }
	floor_variable = $VARIABLE$
	while = {
		count = $VARIABLE$
		remove_district = $DISTRICT$
	}
	clear_variable = $VARIABLE$
}

relic_world_conversion_effect = {
	export_trigger_value_to_variable = {
		trigger = num_districts
		parameters = {
			type = $DISTRICT$
		}
		variable = $VARIABLE$
	}
	divide_variable = { which = $VARIABLE$ value = 2 }
	floor_variable = $VARIABLE$
	while = {
		count = $VARIABLE$
		remove_district = $DISTRICT$
	}
	clear_variable = $VARIABLE$
}

set_industrial_focus_flags =  {
	if = {
		limit = {
			has_designation = col_factory
		}
		set_planet_flag = factory_planet
	}
	else_if = {
		limit = {
			has_designation = col_foundry
		}
		set_planet_flag = foundry_planet
	}
}

set_ecu_industrial_districts_effect = {
	if = {
		limit = {
			has_planet_flag = factory_planet
		}
		remove_planet_flag = factory_planet
		swap_districts_effect = {
			DISTRICT1 = district_arcology_arms_industry
			DISTRICT2 = district_arcology_civilian_industry
		}
	}
	else_if = {
		limit = {
			has_planet_flag = foundry_planet
		}
		remove_planet_flag = foundry_planet
	}
	else = {
		split_districts_effect = {
			DISTRICT1 = district_arcology_arms_industry
			DISTRICT2 = district_arcology_civilian_industry
		}
	}
}

swap_districts_effect = {
	export_trigger_value_to_variable = {
		trigger = num_districts
		parameters = {
			type = $DISTRICT1$
		}
		variable = swap_districts_variable
	}
	while = {
		count = swap_districts_variable
		remove_district = $DISTRICT1$
		add_district_if_possible_effect = {
			district = $DISTRICT2$
		}
	}
	clear_variable = swap_districts_variable
}

split_districts_effect = {
	export_trigger_value_to_variable = {
		trigger = num_districts
		parameters = {
			type = $DISTRICT1$
		}
		variable = split_districts_variable
	}
	divide_variable = { which = split_districts_variable value = 2 }
	floor_variable = split_districts_variable
	while = {
		count = split_districts_variable
		remove_district = $DISTRICT1$
		add_district_if_possible_effect = {
			district = $DISTRICT2$
		}
	}
	clear_variable = split_districts_variable
}

spawn_shattered_ring_guaranteed_1_effect = {
	spawn_planet = {
		class = "pc_ringworld_tech"
		name = "NAME_Ring_Section"
		orbit_angle = -30
		orbit_distance = 45
	}
	spawn_planet = {
		class = "pc_ringworld_seam"
		name = "NAME_Ring_Section"
		orbit_angle = 0
		orbit_distance = 45
	}
	
	spawn_planet = {
		class = "pc_shattered_ring_habitable"
		name = "NAME_Habitable_Section_B"
		orbit_angle = 30
		orbit_distance = 45
		deposit_blockers = none
		modifiers = none
		flags = { ignore_startup_effect megastructure }
		init_effect = {
			prevent_anomaly = yes
			shattered_ring_blocker_effect = yes
		}
	}
}

spawn_shattered_ring_guaranteed_2_effect = {
	spawn_planet = {
		class = "pc_ringworld_seam"
		name = "NAME_Ring_Section"
		orbit_angle = 150
		orbit_distance = 45
	}
	
	spawn_planet = {
		class = "pc_ringworld_tech"
		name = "NAME_Ring_Section"
		orbit_angle = 180
		orbit_distance = 45
	}

	spawn_planet = {
		class = "pc_shattered_ring_habitable"
		name = "NAME_Habitable_Section_D"
		orbit_angle = 210
		orbit_distance = 45
		deposit_blockers = none
		modifiers = none
		flags = { ignore_startup_effect megastructure }
		init_effect = {
			prevent_anomaly = yes
			shattered_ring_blocker_effect = yes
		}
	}
}

shattered_ring_blocker_effect = {
	# Shattered rings start with 25 district slots.

	# -2 Districts (23 total)
	while = {
		count = 2
		random_list = {
			1 = { add_deposit = d_segment_rubble_1 }
			1 = { add_deposit = d_segment_rubble_1_small }
			1 = { add_deposit = d_segment_rubble_2 }
			1 = { add_deposit = d_segment_rubble_3 }
			1 = { add_deposit = d_segment_rubble_4 }
		}
	}
	
	# -8 Districts
	add_deposit = d_sr_diurnal_regulator
	add_deposit = d_sr_vacuum_fields
	add_deposit = d_sr_ring_gyros
	add_deposit = d_sr_power_grid

	# -10 Disticts 
	add_deposit = d_decrepit_tunnels_2
	add_deposit = d_decrepit_tunnels_2
	add_deposit = d_decrepit_tunnels_2
	add_deposit = d_decrepit_tunnels_2
	add_deposit = d_decrepit_tunnels_2


	# -5 Districts
	add_deposit = d_malfunctioning_reactor
}
