

ariphaos_patch_remove_habitat = {
	save_event_target_as = habitat_to_remove
	solar_system= { 
		random_system_planet = { 
		limit = { any_moon = { is_planet = event_target:habitat_to_remove } } 
			remove_planet_flag = has_megastructure 
		} 
	}
	#destroy_colony = yes
	remove_planet = yes
}

# We basically reimplement the on_action here.
ariphaos_patch_purge_pop = {
	planet = {
		planet_event = {
			id = crisis.202
			scopes = {
				fromfrom = prev
				from = controller
			}
		}
		planet_event = {
			id = crisis.2044
			scopes = {
				fromfrom = prev
				from = controller
			}
		}
		planet_event = {
			id = action.21
			scopes = {
				fromfrom = prev
				from = controller
			}
		}
		planet_event = {
			id = utopia.180
			scopes = {
				fromfrom = prev
				from = controller
			}
		}
		planet_event = {
			id = utopia.181
			scopes = {
				fromfrom = prev
				from = controller
			}
		}
		planet_event = {
			id = syndaw.1330
			scopes = {
				fromfrom = prev
				from = controller
			}
		}
	}
	kill_pop = yes
}

ariphaos_patch_leader_add_traits = {
	###########################################
	# Erudite
	###########################################
	if = {
		limit = {
			species = { 
				has_trait = trait_erudite 
				NOR = {
					has_trait = trait_cybernetic 
					has_trait = trait_psionic 
					has_trait = trait_latent_psionic	
					has_trait = trait_machine_unit
					has_trait = trait_mechanical
				}
			}
		}
		if = {
			limit = { leader_class = admiral }
			add_trait = leader_trait_admiral_erudite
			add_ruler_trait = leader_trait_ruler_erudite
		}
		else_if = {
			limit = { leader_class = general }
			add_trait = leader_trait_general_erudite
			add_ruler_trait = leader_trait_ruler_erudite
		}
		else_if = {
			limit = { leader_class = governor }
			add_trait = leader_trait_governor_erudite
			add_ruler_trait = leader_trait_ruler_erudite
		}
		else_if = {
			limit = { leader_class = scientist }
			add_trait = leader_trait_scientist_erudite
			add_ruler_trait = leader_trait_ruler_erudite
		}
		else_if = {
			limit = { leader_class = ruler }
			add_trait = leader_trait_ruler_erudite
			add_ruler_trait = leader_trait_ruler_erudite
		}
	}

	###########################################
	# Cyborg
	###########################################
	
	if = {
		limit = {
			species = { 
				has_trait = trait_cybernetic 
				NOR = {
					has_trait = trait_machine_unit
					has_trait = trait_mechanical
				}
			}
		}
		if = {
			limit = { leader_class = admiral }
			add_trait = leader_trait_admiral_cyborg
			add_ruler_trait = leader_trait_ruler_cyborg
		}
		else_if = {
			limit = { leader_class = general }
			add_trait = leader_trait_general_cyborg
			add_ruler_trait = leader_trait_ruler_cyborg
		}
		else_if = {
			limit = { leader_class = governor }
			add_trait = leader_trait_governor_cyborg
			add_ruler_trait = leader_trait_ruler_cyborg
		}
		else_if = {
			limit = { leader_class = scientist }
			add_trait = leader_trait_scientist_cyborg
			add_ruler_trait = leader_trait_ruler_cyborg
		}
		else_if = {
			limit = { leader_class = ruler }
			add_trait = leader_trait_ruler_cyborg
			add_ruler_trait = leader_trait_ruler_cyborg
		}
	}
	
	###########################################
	# Synthetic
	###########################################
	
	if = {
		limit = {
			species = { 
				has_trait = trait_mechanical
			}
		}
		if = {
			limit = { leader_class = admiral }
			add_trait = leader_trait_admiral_synthetic
			add_ruler_trait = leader_trait_ruler_synthetic
		}
		else_if = {
			limit = { leader_class = general }
			add_trait = leader_trait_general_synthetic
			add_ruler_trait = leader_trait_ruler_synthetic
		}
		else_if = {
			limit = { leader_class = governor }
			add_trait = leader_trait_governor_synthetic
			add_ruler_trait = leader_trait_ruler_synthetic
		}
		else_if = {
			limit = { leader_class = scientist }
			add_trait = leader_trait_scientist_synthetic
			add_ruler_trait = leader_trait_ruler_synthetic
		}
		else_if = {
			limit = { leader_class = ruler }
			add_trait = leader_trait_ruler_synthetic
			add_ruler_trait = leader_trait_ruler_synthetic
		}
	}
	
	###########################################
	# Psionic
	###########################################
	
	if = {
		limit = {
			species = { 
				has_trait = trait_psionic
				NOR = {
					has_trait = trait_cybernetic 
					has_trait = trait_machine_unit
					has_trait = trait_mechanical
				}
			}
		}
		if = {
			limit = { 
				leader_class = admiral 
				NOT = { has_trait = leader_trait_admiral_chosen }
			}
			add_trait = leader_trait_admiral_psionic
			add_ruler_trait = leader_trait_ruler_psionic
		}
		else_if = {
			limit = { 
				leader_class = general
				NOT = { has_trait = leader_trait_general_chosen }
			}
			add_trait = leader_trait_general_psionic
			add_ruler_trait = leader_trait_ruler_psionic
		}
		else_if = {
			limit = { 
				leader_class = governor
				NOT = { has_trait = leader_trait_governor_chosen }
			}
			add_trait = leader_trait_governor_psionic
			add_ruler_trait = leader_trait_ruler_psionic
		}
		else_if = {
			limit = { 
				leader_class = scientist
				NOT = { has_trait = leader_trait_scientist_chosen }
			}
			add_trait = leader_trait_scientist_psionic
			add_ruler_trait = leader_trait_ruler_psionic
		}
		else_if = {
			limit = { 
				leader_class = ruler 
				NOT = { has_ruler_trait = leader_trait_ruler_chosen }
			}
			add_trait = leader_trait_ruler_psionic
			add_ruler_trait = leader_trait_ruler_psionic
		}
	}
}