### Tiyanki ###
# Checks if Tiyanki country (global event target) exists
# Creates the country and saves it if it does not
create_tiyanki_country = {
	optimize_memory
	if = {
		limit = { NOT = { exists = event_target:tiyanki_country } }
		create_country = {
			name = "NAME_Placid_Leviathans"
			type = tiyanki
			flag = {
				icon = {
					category = "zoological"
					file = "flag_zoological_1.dds"
				}
				background= {
					category = "backgrounds"
					file = "00_solid.dds"
				}
				colors={
					"black"
					"black"
					"null"
					"null"
				}
			}
			effect = {
				save_global_event_target_as = tiyanki_country
				every_country = {
					limit = {
						has_country_flag = tiyanki_encountered
					}
					establish_communications_no_message = prev
					establish_communication_with_subjects_and_federation = { FLAG = tiyanki_encountered }
				}
			}
		}
	}
}

# Checks if Tiyanki garrison country (global event target) exists
# Creates the country and saves it if it does not
# Used for  Tiyanki Spawn and Graveyard System
# Clone of tiyanki_country without space monsters AI enabled, so the whales won't leave the home system
create_tiyanki_garrison_country = {
	optimize_memory
	if = {
		limit = { NOT = { exists = event_target:tiyanki_garrison_country } }
		create_country = {
			name = "NAME_Placid_Leviathans"
			type = tiyanki_garrison
			flag = {
				icon = {
					category = "zoological"
					file = "flag_zoological_1.dds"
				}
				background= {
					category = "backgrounds"
					file = "00_solid.dds"
				}
				colors={
					"black"
					"black"
					"null"
					"null"
				}
			}
			effect = {
				save_global_event_target_as = tiyanki_garrison_country
			}
		}
	}
}

create_tiyanki_fleet_1 = {
	create_fleet = {
		name = "NAME_Tiyanki_Space_Whale"
		effect = {
			set_owner = event_target:tiyanki_country
			create_ship = {
				design = "NAME_Tiyanki_Cow"
			}
			create_ship = {
				design = "NAME_Tiyanki_Bull"
			}
			create_ship = {
				design = "NAME_Tiyanki_Calf"
			}
			create_ship = {
				design = "NAME_Tiyanki_Calf"
			}
			create_ship = {
				design = "NAME_Tiyanki_Hatchling"
			}
			create_ship = {
				design = "NAME_Tiyanki_Hatchling"
			}
			set_location = event_target:giant
			set_fleet_stance = passive
			set_aggro_range_measure_from = return_point
			set_aggro_range = 0
			queue_actions = {
				wait = { # Cooldown until they start moving
					duration = 320
					random = 80
				}
			}
		}
	}
}

create_tiyanki_fleet_2 = {
	create_fleet = {
		name = "NAME_Tiyanki_Space_Whale"
		effect = {
			set_owner = event_target:tiyanki_country
			create_ship = {
				design = "NAME_Tiyanki_Cow"
			}
			create_ship = {
				design = "NAME_Tiyanki_Hatchling"
			}
			create_ship = {
				design = "NAME_Tiyanki_Hatchling"
			}
			create_ship = {
				design = "NAME_Tiyanki_Hatchling"
			}
			create_ship = {
				design = "NAME_Tiyanki_Hatchling"
			}
			set_location = event_target:giant
			set_fleet_stance = passive
			set_aggro_range_measure_from = return_point
			set_aggro_range = 0
			queue_actions = {
				wait = { # Cooldown until they start moving
					duration = 320
					random = 80
				}
			}
		}
	}
}

create_tiyanki_fleet_3 = {
	create_fleet = {
		name = "NAME_Tiyanki_Space_Whale"
		effect = {
			set_owner = event_target:tiyanki_country
			create_ship = {
				design = "NAME_Tiyanki_Cow"
			}
			create_ship = {
				design = "NAME_Tiyanki_Bull"
			}
			create_ship = {
				design = "NAME_Tiyanki_Bull"
			}
			create_ship = {
				design = "NAME_Tiyanki_Hatchling"
			}
			create_ship = {
				design = "NAME_Tiyanki_Calf"
			}
			set_location = event_target:giant
			set_fleet_stance = passive
			set_aggro_range_measure_from = return_point
			set_aggro_range = 0
			queue_actions = {
				wait = { # Cooldown until they start moving
					duration = 320
					random = 80
				}
			}
		}
	}
}

create_tiyanki_fleet_4 = {
	create_fleet = {
		name = "NAME_Tiyanki_Space_Whale"
		effect = {
			set_owner = event_target:tiyanki_country
			create_ship = {
				design = "NAME_Tiyanki_Cow"
			}
			create_ship = {
				design = "NAME_Tiyanki_Cow"
			}
			create_ship = {
				design = "NAME_Tiyanki_Bull"
			}
			create_ship = {
				design = "NAME_Tiyanki_Calf"
			}
			create_ship = {
				design = "NAME_Tiyanki_Calf"
			}
			create_ship = {
				design = "NAME_Tiyanki_Calf"
			}
			create_ship = {
				design = "NAME_Tiyanki_Calf"
			}
			set_location = event_target:giant
			set_fleet_stance = passive
			set_aggro_range_measure_from = return_point
			set_aggro_range = 0
			queue_actions = {
				wait = { # Cooldown until they start moving
					duration = 320
					random = 80
				}
			}
		}
	}
}

create_tiyanki_fleet_5 = {
	create_fleet = {
		name = "NAME_Tiyanki_Space_Whale"
		effect = {
			set_owner = event_target:tiyanki_country
			create_ship = {
				design = "NAME_Tiyanki_Cow"
			}
			create_ship = {
				design = "NAME_Tiyanki_Cow"
			}
			create_ship = {
				design = "NAME_Tiyanki_Bull"
			}
			create_ship = {
				design = "NAME_Tiyanki_Bull"
			}
			create_ship = {
				design = "NAME_Tiyanki_Hatchling"
			}
			set_location = event_target:giant
			set_fleet_stance = passive
			set_aggro_range_measure_from = return_point
			set_aggro_range = 0
			queue_actions = {
				wait = { # Cooldown until they start moving
					duration = 320
					random = 80
				}
			}
		}
	}
}

create_tiyanki_home_fleet_1 = {
	create_fleet = {
		name = "NAME_Tiyanki_Space_Whale"
		effect = {
			set_owner = event_target:tiyanki_garrison_country
			set_fleet_flag = tiyanki_home_system_fleet
			while = {
				count = 5
				create_ship = {
					design = "NAME_Tiyanki_Cow"
				}
			}
			while = {
				count = 5
				create_ship = {
					design = "NAME_Tiyanki_Bull"
				}
			}
			while = {
				count = 8
				create_ship = {
					design = "NAME_Tiyanki_Hatchling"
				}
			}
			while = {
				count = 9
				create_ship = {
					design = "NAME_Tiyanki_Calf"
				}
			}
			set_location = event_target:giant1
			set_fleet_stance = passive
			set_aggro_range_measure_from = return_point
			set_aggro_range = 0
		}
	}

	create_fleet = {
		name = "NAME_Tiyanki_Space_Whale"
		effect = {
			set_owner = event_target:tiyanki_garrison_country
			while = {
				count = 2
				create_ship = {
					design = "NAME_Tiyanki_Cow"
				}
			}
			while = {
				count = 4
				create_ship = {
					design = "NAME_Tiyanki_Calf"
				}
			}
			set_location = {
				target = event_target:giant1
				distance = 12
				angle = 0
			}
			set_fleet_stance = passive
			set_aggro_range_measure_from = return_point
			set_aggro_range = 0
		}
	}
}

create_tiyanki_home_fleet_2 = {
	create_fleet = {
		name = "NAME_Tiyanki_Space_Whale"
		effect = {
			set_owner = event_target:tiyanki_garrison_country
			set_fleet_flag = tiyanki_home_system_fleet
			while = {
				count = 2
				create_ship = {
					design = "NAME_Tiyanki_Cow"
				}
			}
			while = {
				count = 5
				create_ship = {
					design = "NAME_Tiyanki_Bull"
				}
			}
			while = {
				count = 2
				create_ship = {
					design = "NAME_Tiyanki_Hatchling"
				}
			}
			while = {
				count = 3
				create_ship = {
					design = "NAME_Tiyanki_Calf"
				}
			}
			set_location = event_target:giant2
			set_fleet_stance = passive
			set_aggro_range_measure_from = return_point
			set_aggro_range = 0
		}
	}

	create_fleet = {
		name = "NAME_Tiyanki_Space_Whale"
		effect = {
			set_owner = event_target:tiyanki_garrison_country
			while = {
				count = 2
				create_ship = {
					design = "NAME_Tiyanki_Cow"
				}
			}
			while = {
				count = 4
				create_ship = {
					design = "NAME_Tiyanki_Calf"
				}
			}
			set_location = {
				target = event_target:giant2
				distance = 12
				angle = 0
			}
			set_fleet_stance = passive
			set_aggro_range_measure_from = return_point
			set_aggro_range = 0
		}
	}
}

create_tiyanki_home_fleet_3 = {
	create_fleet = {
		name = "NAME_Tiyanki_Space_Whale"
		effect = {
			set_owner = event_target:tiyanki_garrison_country
			set_fleet_flag = tiyanki_home_system_fleet
			while = {
				count = 2
				create_ship = {
					design = "NAME_Tiyanki_Cow"
				}
			}
			while = {
				count = 6
				create_ship = {
					design = "NAME_Tiyanki_Bull"
				}
			}
			while = {
				count = 12
				create_ship = {
					design = "NAME_Tiyanki_Hatchling"
				}
			}
			while = {
				count = 2
				create_ship = {
					design = "NAME_Tiyanki_Calf"
				}
			}
			set_location = event_target:giant3
			set_fleet_stance = passive
			set_aggro_range_measure_from = return_point
			set_aggro_range = 0
		}
	}

	create_fleet = {
		name = "NAME_Tiyanki_Space_Whale"
		effect = {
			set_owner = event_target:tiyanki_garrison_country
			while = {
				count = 4
				create_ship = {
					design = "NAME_Tiyanki_Cow"
				}
			}
			while = {
				count = 2
				create_ship = {
					design = "NAME_Tiyanki_Calf"
				}
			}
			while = {
				count = 3
				create_ship = {
					design = "NAME_Tiyanki_Hatchling"
				}
			}
			set_location = {
				target = event_target:giant3
				distance = 12
				angle = 0
			}
			set_fleet_stance = passive
			set_aggro_range_measure_from = return_point
			set_aggro_range = 0
		}
	}
}

create_tiyanki_home_fleet_4 = {
	create_fleet = {
		name = "NAME_Tiyanki_Space_Whale"
		effect = {
			set_owner = event_target:tiyanki_garrison_country
			set_fleet_flag = tiyanki_home_system_fleet
			while = {
				count = 4
				create_ship = {
					design = "NAME_Tiyanki_Cow"
				}
			}
			while = {
				count = 3
				create_ship = {
					design = "NAME_Tiyanki_Bull"
				}
			}
			while = {
				count = 12
				create_ship = {
					design = "NAME_Tiyanki_Hatchling"
				}
			}
			while = {
				count = 9
				create_ship = {
					design = "NAME_Tiyanki_Calf"
				}
			}
			set_location = event_target:giant4
			set_fleet_stance = passive
			set_aggro_range_measure_from = return_point
			set_aggro_range = 0
		}
	}

	create_fleet = {
		name = "NAME_Tiyanki_Space_Whale"
		effect = {
			set_owner = event_target:tiyanki_garrison_country
			while = {
				count = 4
				create_ship = {
					design = "NAME_Tiyanki_Cow"
				}
			}
			while = {
				count = 6
				create_ship = {
					design = "NAME_Tiyanki_Bull"
				}
			}
			set_location = {
				target = event_target:giant4
				distance = 12
				angle = 0
			}
			set_fleet_stance = passive
			set_aggro_range_measure_from = return_point
			set_aggro_range = 0
		}
	}
}

create_tiyanki_home_roaming_fleets = {
	create_fleet = {
		name = "NAME_Tiyanki_Space_Whale"
		effect = {
			set_owner = event_target:tiyanki_garrison_country
			set_fleet_flag = tiyanki_home_system_fleet
			while = {
				count = 22
				create_ship = {
					design = "NAME_Tiyanki_Hatchling"
				}
			}
			set_location = {
				target = event_target:giant1
				distance = 25
				angle = 94
			}
			set_fleet_stance = passive
			set_aggro_range_measure_from = return_point
			set_aggro_range = 0
			queue_actions = {
				repeat = {
					find_closest_planet = {
						trigger = {
							id = tiyanki.patrol.1
							has_planet_flag = tiyanki_giant2
						}
						found_planet = {
							move_to = this
							orbit_planet = this
						}
					}
					find_closest_planet = {
						trigger = {
							id = tiyanki.patrol.2
							has_planet_flag = tiyanki_giant3
						}
						found_planet = {
							move_to = this
							orbit_planet = this
						}
					}
					find_closest_planet = {
						trigger = {
							id = tiyanki.patrol.3
							has_planet_flag = tiyanki_giant4
						}
						found_planet = {
							move_to = this
							orbit_planet = this
						}
					}
					find_closest_planet = {
						trigger = {
							id = tiyanki.patrol.4
							has_planet_flag = tiyanki_giant1
						}
						found_planet = {
							move_to = this
							orbit_planet = this
						}
					}
				}
			}
		}
	}

	create_fleet = {
		name = "NAME_Tiyanki_Space_Whale"
		effect = {
			set_owner = event_target:tiyanki_garrison_country
			while = {
				count = 14
				create_ship = {
					design = "NAME_Tiyanki_Hatchling"
				}
			}
			set_location = {
				target = event_target:giant1
				distance = 25
				angle = 94
			}
			set_fleet_stance = passive
			set_aggro_range_measure_from = return_point
			set_aggro_range = 0
			queue_actions = {
				repeat = {
					find_closest_planet = {
						trigger = {
							id = tiyanki2.patrol.1
							has_planet_flag = tiyanki_giant4
						}
						found_planet = {
							move_to = this
							orbit_planet = this
						}
					}
					find_closest_planet = {
						trigger = {
							id = tiyanki2.patrol.2
							has_planet_flag = tiyanki_giant3
						}
						found_planet = {
							move_to = this
							orbit_planet = this
						}
					}
					find_closest_planet = {
						trigger = {
							id = tiyanki2.patrol.3
							has_planet_flag = tiyanki_giant2
						}
						found_planet = {
							move_to = this
							orbit_planet = this
						}
					}
					find_closest_planet = {
						trigger = {
							id = tiyanki2.patrol.4
							has_planet_flag = tiyanki_giant1
						}
						found_planet = {
							move_to = this
							orbit_planet = this
						}
					}
				}
			}
		}
	}

	create_fleet = {
		name = "NAME_Tiyanki_Space_Whale"
		effect = {
			set_owner = event_target:tiyanki_garrison_country
			while = {
				count = 19
				create_ship = {
					design = "NAME_Tiyanki_Hatchling"
				}
			}
			set_location = {
				target = event_target:giant3
				distance = 25
				angle = 94
			}
			set_fleet_stance = passive
			set_aggro_range_measure_from = return_point
			set_aggro_range = 0
			queue_actions = {
				repeat = {
					find_closest_planet = {
						trigger = {
							id = tiyanki3.patrol.1
							has_planet_flag = tiyanki_giant2
						}
						found_planet = {
							move_to = this
							orbit_planet = this
						}
					}
					find_closest_planet = {
						trigger = {
							id = tiyanki3.patrol.2
							has_planet_flag = tiyanki_giant1
						}
						found_planet = {
							move_to = this
							orbit_planet = this
						}
					}
					find_closest_planet = {
						trigger = {
							id = tiyanki3.patrol.3
							has_planet_flag = tiyanki_giant4
						}
						found_planet = {
							move_to = this
							orbit_planet = this
						}
					}
					find_closest_planet = {
						trigger = {
							id = tiyanki3.patrol.4
							has_planet_flag = tiyanki_giant3
						}
						found_planet = {
							move_to = this
							orbit_planet = this
						}
					}
				}
			}
		}
	}

	create_fleet = {
		name = "NAME_Tiyanki_Space_Whale"
		effect = {
			set_owner = event_target:tiyanki_garrison_country
			while = {
				count = 16
				create_ship = {
					design = "NAME_Tiyanki_Hatchling"
				}
			}
			set_location = {
				target = event_target:giant2
				distance = 25
				angle = 94
			}
			set_fleet_stance = passive
			set_aggro_range_measure_from = return_point
			set_aggro_range = 0
			queue_actions = {
				repeat = {
					find_closest_planet = {
						trigger = {
							id = tiyanki4.patrol.1
							has_planet_flag = tiyanki_giant3
						}
						found_planet = {
							move_to = this
							orbit_planet = this
						}
					}
					find_closest_planet = {
						trigger = {
							id = tiyanki4.patrol.2
							has_planet_flag = tiyanki_giant4
						}
						found_planet = {
							move_to = this
							orbit_planet = this
						}
					}
					find_closest_planet = {
						trigger = {
							id = tiyanki4.patrol.3
							has_planet_flag = tiyanki_giant1
						}
						found_planet = {
							move_to = this
							orbit_planet = this
						}
					}
					find_closest_planet = {
						trigger = {
							id = tiyanki4.patrol.4
							has_planet_flag = tiyanki_giant2
						}
						found_planet = {
							move_to = this
							orbit_planet = this
						}
					}
				}
			}
		}
	}
}

create_tiyanki_graveyard_gravekeeper_fleet = {
	create_fleet = {
		name = "NAME_Tiyanki_Space_Whale"
		effect = {
			set_owner = event_target:tiyanki_garrison_country
			set_fleet_flag = tiyanki_graveyard_system_fleet
			create_ship = {
				design = "NAME_Tiyanki_Ox"
			}
			set_location = {
				target = event_target:graveyard_site
				distance = 20
				angle = 0
			}
			set_fleet_stance = passive
			set_aggro_range_measure_from = return_point
			set_aggro_range = 0
		}
	}
	create_fleet = {
		name = "NAME_Tiyanki_Space_Whale"
		effect = {
			set_owner = event_target:tiyanki_garrison_country
			set_fleet_flag = tiyanki_graveyard_system_fleet
			create_ship = {
				design = "NAME_Tiyanki_Ox"
			}
			set_location = {
				target = event_target:graveyard_site
				distance = 20
				angle = 90
			}
			set_fleet_stance = passive
			set_aggro_range_measure_from = return_point
			set_aggro_range = 0
		}
	}
	create_fleet = {
		name = "NAME_Tiyanki_Space_Whale"
		effect = {
			set_owner = event_target:tiyanki_garrison_country
			set_fleet_flag = tiyanki_graveyard_system_fleet
			create_ship = {
				design = "NAME_Tiyanki_Ox"
			}
			set_location = {
				target = event_target:graveyard_site
				distance = 20
				angle = 180
			}
			set_fleet_stance = passive
			set_aggro_range_measure_from = return_point
			set_aggro_range = 0
		}
	}
	create_fleet = {
		name = "NAME_Tiyanki_Space_Whale"
		effect = {
			set_owner = event_target:tiyanki_garrison_country
			set_fleet_flag = tiyanki_graveyard_system_fleet
			create_ship = {
				design = "NAME_Tiyanki_Ox"
			}
			set_location = {
				target = event_target:graveyard_site
				distance = 20
				angle = 270
			}
			set_fleet_stance = passive
			set_aggro_range_measure_from = return_point
			set_aggro_range = 0
		}
	}
}

create_tiyanki_graveyard_roaming_fleet_1 = {
	create_fleet = {
		name = "NAME_Tiyanki_Space_Whale"
		effect = {
			set_owner = event_target:tiyanki_garrison_country
			set_fleet_flag = tiyanki_graveyard_system_roaming_fleet
			while = {
				count = 5
				create_ship = {
					design = "NAME_Tiyanki_Cow"
				}
			}
			while = {
				count = 8
				create_ship = {
					design = "NAME_Tiyanki_Bull"
				}
			}
			set_location = {
				target = event_target:graveyard_gas
				distance = 25
				angle = 94
			}
			set_fleet_stance = passive
			set_aggro_range_measure_from = return_point
			set_aggro_range = 0
			queue_actions = {
				repeat = {
					find_closest_planet = {
						trigger = {
							id = graveyard.patrol.1
							has_planet_flag = graveyard_star
						}
						found_planet = {
							move_to = this
							orbit_planet = this
						}
					}
					find_closest_planet = {
						trigger = {
							id = graveyard.patrol.2
							has_planet_flag = graveyard_site
						}
						found_planet = {
							move_to = this
							orbit_planet = this
						}
					}
					find_closest_planet = {
						trigger = {
							id = graveyard.patrol.3
							has_planet_flag = graveyard_gas
						}
						found_planet = {
							move_to = this
							orbit_planet = this
						}
					}
				}
			}
		}
	}
}

create_tiyanki_graveyard_roaming_fleet_2 = {
	create_fleet = {
		name = "NAME_Tiyanki_Space_Whale"
		effect = {
			set_owner = event_target:tiyanki_garrison_country
			set_fleet_flag = tiyanki_graveyard_system_roaming_fleet
			while = {
				count = 5
				create_ship = {
					design = "NAME_Tiyanki_Cow"
				}
			}
			while = {
				count = 8
				create_ship = {
					design = "NAME_Tiyanki_Bull"
				}
			}
			set_location = {
				target = event_target:graveyard_asteroid
				distance = 25
				angle = 94
			}
			set_fleet_stance = passive
			set_aggro_range_measure_from = return_point
			set_aggro_range = 0
			queue_actions = {
				repeat = {
					find_closest_planet = {
						trigger = {
							id = graveyard2.patrol.1
							has_planet_flag = graveyard_site
						}
						found_planet = {
							move_to = this
							orbit_planet = this
						}
					}
					find_closest_planet = {
						trigger = {
							id = graveyard2.patrol.2
							has_planet_flag = graveyard_gas
						}
						found_planet = {
							move_to = this
							orbit_planet = this
						}
					}
					find_closest_planet = {
						trigger = {
							id = graveyard2.patrol.3
							has_planet_flag = graveyard_asteroid
						}
						found_planet = {
							move_to = this
							orbit_planet = this
						}
					}
				}
			}
		}
	}
}

create_tiyanki_lure = {
	event_target:tiyanki_graveyard_system = {
		create_ambient_object = {
			type = gas_diffuser
			entity_offset_height = 10
			location = this
		}
		last_created_ambient_object = {
			save_event_target_as = lure
			set_location = {
				target = event_target:tiyanki_graveyard_asteroid
				distance = 0
				angle = random
			}
		}

		every_fleet_in_system = {
			limit = {
				exists = owner
				has_fleet_flag = tiyanki_graveyard_system_fleet
			}
			clear_fleet_actions = this
			queue_actions = {
				find_closest_planet = {
					trigger = {
						id = graveyard3.patrol.1
						has_planet_flag = graveyard_asteroid
					}
					found_planet = {
						move_to = this
						orbit_planet = this
						# they all get stuck on the same location and it looks very awkward, is there a better way to have them hover around the lure? ;;
					}
				}
			}
		}

		every_fleet_in_system = {
			limit = {
				exists = owner
				has_fleet_flag = tiyanki_graveyard_system_roaming_fleet
			}
			clear_fleet_actions = this
			queue_actions = {
				repeat = { #repeating it creates a visual effect of swooping around the planet
					find_closest_planet = {
						trigger = {
							id = graveyard3.patrol.2
							has_planet_flag = graveyard_asteroid
						}
						found_planet = {
							move_to = this
							orbit_planet = this
						}
					}
				}
			}
		}
	}
}

### Amoeba ###
# Checks if Space Amoeba country (global event target) exists
# Creates the country and saves it if it does not
create_amoeba_country = {
	optimize_memory
	if = {
		limit = { NOT = { exists = event_target:amoeba_country } }
		create_country = {
			name = "NAME_Spaceborne_Organics"
			type = amoeba
			flag = {
				icon = {
					category = "zoological"
					file = "flag_zoological_1.dds"
				}
				background= {
					category = "backgrounds"
					file = "00_solid.dds"
				}
				colors={
					"black"
					"black"
					"null"
					"null"
				}
			}
			effect = {
				save_global_event_target_as = amoeba_country
				if = {
					limit = {
						exists = event_target:amoeba_garrison_country
					}
					set_faction_hostility = {
						set_hostile = no
						set_neutral = yes
						target = event_target:amoeba_garrison_country
					}
				}
				if = {
					limit = {
						exists = event_target:amoeba_country_borderless
					}
					set_faction_hostility = {
						set_hostile = no
						set_neutral = yes
						target = event_target:amoeba_country_borderless
					}
				}
				every_country = {
					limit = {
						has_country_flag = amoeba_encountered
					}
					establish_communications_no_message = prev
					establish_communication_with_subjects_and_federation = { FLAG = amoeba_encountered }
				}
			}
		}
	}
}

# Checks if Space Amoeba country (global event target) exists
# Creates the country and saves it if it does not
create_amoeba_country_borderless = {
	optimize_memory
	if = {
		limit = { NOT = { exists = event_target:amoeba_country_borderless } }
		create_country = {
			name = "NAME_Spaceborne_Organics"
			type = amoeba_borderless
			flag = {
				icon = {
					category = "zoological"
					file = "flag_zoological_1.dds"
				}
				background= {
					category = "backgrounds"
					file = "00_solid.dds"
				}
				colors={
					"black"
					"black"
					"null"
					"null"
				}
			}
			effect = {
				save_global_event_target_as = amoeba_country_borderless
				if = {
					limit = {
						exists = event_target:amoeba_garrison_country
					}
					set_faction_hostility = {
						set_hostile = no
						set_neutral = yes
						target = event_target:amoeba_garrison_country
					}
				}
				if = {
					limit = {
						exists = event_target:amoeba_country
					}
					set_faction_hostility = {
						set_hostile = no
						set_neutral = yes
						target = event_target:amoeba_country
					}
				}
				every_country = {
					limit = {
						OR = {
							AND = {
								exists = event_target:amoeba_country
								has_communications = event_target:amoeba_country
							}
							has_country_flag = amoeba_encountered
						}
					}
					establish_communications_no_message = event_target:amoeba_country_borderless
					establish_communication_with_subjects_and_federation = { FLAG = amoeba_encountered }
				}
			}
		}
	}
}

create_amoeba_home_fleet_1 = {
	create_fleet = {
		name = "NAME_Amoeba_Swarm"
		effect = {
			set_owner = event_target:amoeba_garrison_country
			while = {
				count = 3
				create_ship = {
					name = ""
					design = "NAME_Large_Space_Organism_Blue"
				}
			}
			while = {
				count = 8
				create_ship = {
					name = ""
					design = "NAME_Small_Space_Organism_Blue"
				}
			}
			set_location = event_target:amoeba_giant
			set_fleet_stance = aggressive
			set_aggro_range_measure_from = self
			set_aggro_range = 200
		}
	}

	create_fleet = {
		name = "NAME_Amoeba_Swarm"
		effect = {
			set_owner = event_target:amoeba_garrison_country
			while = {
				count = 5
				create_ship = {
					name = ""
					design = "NAME_Large_Space_Organism_Zebra"
				}
			}
			while = {
				count = 6
				create_ship = {
					name = ""
					design = "NAME_Small_Space_Organism_Zebra"
				}
			}
			set_location = {
				target = event_target:amoeba_giant
				distance = 12
				angle = 0
			}
			set_fleet_stance = aggressive
			set_aggro_range_measure_from = self
			set_aggro_range = 200
		}
	}
}

create_amoeba_home_fleet_2 = {
	create_fleet = {
		name = "NAME_Amoeba_Swarm"
		effect = {
			set_owner = event_target:amoeba_garrison_country
			while = {
				count = 5
				create_ship = {
					name = ""
					design = "NAME_Large_Space_Organism_Zebra"
				}
			}
			while = {
				count = 21
				create_ship = {
					name = ""
					design = "NAME_Small_Space_Organism_Zebra"
				}
			}
			set_location = event_target:amoeba_star
			set_fleet_stance = aggressive
			set_aggro_range_measure_from = self
			set_aggro_range = 200
		}
	}

	create_fleet = {
		name = "NAME_Amoeba_Swarm"
		effect = {
			set_owner = event_target:amoeba_garrison_country
			while = {
				count = 3
				create_ship = {
					name = ""
					design = "NAME_Large_Space_Organism_Orange"
				}
			}
			while = {
				count = 14
				create_ship = {
					name = ""
					design = "NAME_Small_Space_Organism_Orange"
				}
			}
			set_location = {
				target = event_target:amoeba_star
				distance = 12
				angle = 0
			}
			set_fleet_stance = aggressive
			set_aggro_range_measure_from = self
			set_aggro_range = 200
		}
	}
}

create_amoeba_home_roaming_fleets = {
	create_fleet = {
		name = "NAME_Amoeba_Swarm"
		effect = {
			set_owner = event_target:amoeba_garrison_country
			while = {
				count = 3
				create_ship = {
					name = ""
					design = "NAME_Large_Space_Organism_Blue"
				}
			}
			while = {
				count = 8
				create_ship = {
					name = ""
					design = "NAME_Small_Space_Organism_Blue"
				}
			}
			set_location = {
				target = event_target:amoeba_ice_asteroid_1
				distance = 25
				angle = 94
			}
			set_fleet_stance = aggressive
			set_aggro_range_measure_from = self
			set_aggro_range = 200
			queue_actions = {
				repeat = {
					find_closest_planet = {
						trigger = {
							id = amoeba.patrol.1
							has_planet_flag = amoeba_ice_asteroid_2
						}
						found_planet = {
							move_to = this
							orbit_planet = this
						}
					}
					find_closest_planet = {
						trigger = {
							id = amoeba.patrol.2
							has_planet_flag = amoeba_star
						}
						found_planet = {
							move_to = this
							orbit_planet = this
						}
					}
					find_closest_planet = {
						trigger = {
							id = amoeba.patrol.3
							has_planet_flag = amoeba_ice_asteroid_3
						}
						found_planet = {
							move_to = this
							orbit_planet = this
						}
					}
					find_closest_planet = {
						trigger = {
							id = amoeba.patrol.4
							has_planet_flag = amoeba_giant1
						}
						found_planet = {
							move_to = this
							orbit_planet = this
						}
					}
					find_closest_planet = {
						trigger = {
							id = amoeba.patrol.5
							has_planet_flag = amoeba_ice_asteroid_1
						}
						found_planet = {
							move_to = this
							orbit_planet = this
						}
					}
					find_closest_planet = {
						trigger = {
							id = amoeba.patrol.6
							has_planet_flag = amoeba_star
						}
						found_planet = {
							move_to = this
							orbit_planet = this
						}
					}
				}
			}
		}
	}

	create_fleet = {
		name = "NAME_Amoeba_Swarm"
		effect = {
			set_owner = event_target:amoeba_garrison_country
			while = {
				count = 3
				create_ship = {
					name = ""
					design = "NAME_Large_Space_Organism_Teal"
				}
			}
			while = {
				count = 10
				create_ship = {
					name = ""
					design = "NAME_Small_Space_Organism_Teal"
				}
			}
			set_location = {
				target = event_target:amoeba_ice_asteroid_2
				distance = 25
				angle = 94
			}
			set_fleet_stance = aggressive
			set_aggro_range_measure_from = self
			set_aggro_range = 200
			queue_actions = {
				repeat = {
					find_closest_planet = {
						trigger = {
							id = amoeba2.patrol.1
							has_planet_flag = amoeba_ice_asteroid_3
						}
						found_planet = {
							move_to = this
							orbit_planet = this
						}
					}
					find_closest_planet = {
						trigger = {
							id = amoeba2.patrol.2
							has_planet_flag = amoeba_ice_asteroid_1
						}
						found_planet = {
							move_to = this
							orbit_planet = this
						}
					}
					find_closest_planet = {
						trigger = {
							id = amoeba2.patrol.3
							has_planet_flag = amoeba_ice_asteroid_2
						}
						found_planet = {
							move_to = this
							orbit_planet = this
						}
					}
				}
			}
		}
	}

	create_fleet = {
		name = "NAME_Amoeba_Swarm"
		effect = {
			set_owner = event_target:amoeba_garrison_country
			while = {
				count = 6
				create_ship = {
					name = ""
					design = "NAME_Large_Space_Organism_Orange"
				}
			}
			while = {
				count = 7
				create_ship = {
					name = ""
					design = "NAME_Small_Space_Organism_Orange"
				}
			}
			set_location = {
				target = event_target:amoeba_ice_asteroid_3
				distance = 25
				angle = 94
			}
			set_fleet_stance = aggressive
			set_aggro_range_measure_from = self
			set_aggro_range = 200
			queue_actions = {
				repeat = {
					find_closest_planet = {
						trigger = {
							id = amoeba3.patrol.1
							has_planet_flag = amoeba_ice_asteroid_2
						}
						found_planet = {
							move_to = this
							orbit_planet = this
						}
					}
					find_closest_planet = {
						trigger = {
							id = amoeba3.patrol.2
							has_planet_flag = amoeba_star
						}
						found_planet = {
							move_to = this
							orbit_planet = this
						}
					}
					find_closest_planet = {
						trigger = {
							id = amoeba3.patrol.3
							has_planet_flag = amoeba_ice_asteroid_1
						}
						found_planet = {
							move_to = this
							orbit_planet = this
						}
					}
					find_closest_planet = {
						trigger = {
							id = amoeba3.patrol.4
							has_planet_flag = amoeba_ice_asteroid_3
						}
						found_planet = {
							move_to = this
							orbit_planet = this
						}
					}
				}
			}
		}
	}
}

### Mining Drones ###
# Checks if Mining Drone country (global event target) exists
# Creates the country and saves it if it does not
create_drone_country = {
	optimize_memory
	if = {
		limit = { NOT = { exists = event_target:drone_country } }
		create_country = {
			name = "NAME_Mineral_Extraction_Operation"
			type = drone
			flag = {
				icon = {
					category = "zoological"
					file = "flag_zoological_1.dds"
				}
				background= {
					category = "backgrounds"
					file = "00_solid.dds"
				}
				colors={
					"black"
					"black"
					"null"
					"null"
				}
			}
			effect = {
				save_global_event_target_as = drone_country
				set_graphical_culture = ancient_drone_01
				every_country = {
					limit = {
						has_country_flag = drones_encountered
					}
					establish_communications_no_message = prev
					establish_communication_with_subjects_and_federation = { FLAG = drones_encountered }
				}
			}
		}
	}
}

# Checks if Mining Drone Expansion Fleet country (global event target) exists; creates the country if it does not
create_mining_drone_expansion_country = {
	optimize_memory
	if = {
		limit = {
			NOT = { exists = event_target:mining_drone_expansion_country }
		}
		create_country = {
			name = "NAME_Mining_Drone_Expansion_Initiative"
			type = drone_faction
			flag = {
				icon = {
					category = "legion"
					file = "flag_mp_beta_04.dds"
				}
				background = {
					category = "backgrounds"
					file = "00_solid.dds"
				}
				colors = { "black" "black" "null" "null" }
			}
			effect = {
				set_country_flag = mining_drone_expansion_country
				save_global_event_target_as = mining_drone_expansion_country
				set_graphical_culture = ancient_drone_01
				set_faction_hostility = {
					set_hostile = no
					set_neutral = yes
					set_friendly = no
				}
				every_country = {
					limit = {
						OR = {
							has_country_flag = drones_encountered
							has_communications = event_target:drone_country
						}
					}
					establish_communications_no_message = prev
					establish_communication_with_subjects_and_federation = { FLAG = drones_encountered }
				}
			}
		}
	}
}
# Checks if Aggressive Mining Drone Expansion Fleet country (global event target) exists; creates the country if it does not
create_aggressive_drone_expansion_country = {
	optimize_memory
	if = {
		limit = {
			NOT = { exists = event_target:aggressive_drone_expansion_country }
		}
		create_country = {
			name = "NAME_Aggressive_Mining_Drone_Expansion_Initiative"
			type = drone_faction
			flag = {
				icon = {
					category = "legion"
					file = "flag_mp_beta_05.dds"
				}
				background = {
					category = "backgrounds"
					file = "00_solid.dds"
				}
				colors = { "black" "black" "null" "null" }
			}
			effect = {
				set_country_flag = aggressive_drone_expansion_country
				save_global_event_target_as = aggressive_drone_expansion_country
				set_graphical_culture = ancient_drone_01
				set_faction_hostility = {
					set_hostile = no
					set_neutral = yes
					set_friendly = no
				}
				every_country = {
					limit = {
						OR = {
							has_country_flag = drones_encountered
							has_communications = event_target:drone_country
						}
					}
					establish_communications_no_message = prev
					establish_communication_with_subjects_and_federation = { FLAG = drones_encountered }
				}
			}
		}
	}
}

#Mining Drone Expansion Fleets (4th Anniversary)
create_mining_drone_expansion_fleet = {
	create_fleet = {
		name = "NAME_Mining_Drone_Expansion_Fleet"
		effect = {
			set_owner = event_target:mining_drone_expansion_country
			set_fleet_stance = passive
			create_ship = {
				name = ""
				design = "NAME_Ancient_Mining_Expansion_Barge"
			}
			while = {
				count = 4
				create_ship = {
					name = ""
					design = "NAME_Ancient_Mining_Expansion_Drone"
				}
			}
			set_location = {
				target = event_target:mining_drone_expansion_starting_planet
				distance = 25
				angle = random
			}
			set_fleet_flag = mining_drone_expansion_fleet
			queue_actions = {
				wait = {
					duration = 20
					random = 10
				}
				move_to = event_target:mining_drone_expansion_destination_system
			}
		}
	}
}
create_aggressive_drone_expansion_fleet = {
	create_fleet = {
		name = "NAME_Aggressive_Mining_Drone_Expansion_Fleet"
		effect = {
			set_owner = event_target:aggressive_drone_expansion_country
			set_fleet_stance = passive
			create_ship = {
				name = ""
				design = "NAME_Ancient_Mining_Expansion_Barge"
			}
			while = {
				count = 10
				create_ship = {
					name = ""
					design = "NAME_Ancient_Mining_Expansion_Drone"
				}
			}
			set_location = {
				target = event_target:aggressive_drone_expansion_starting_planet
				distance = 25
				angle = random
			}
			set_fleet_flag = aggressive_drone_expansion_fleet
			queue_actions = {
				wait = {
					duration = 20
					random = 10
				}
				move_to = event_target:aggressive_drone_expansion_destination_system
			}
		}
	}
}

### Crystalline Entities ###
# Checks if Crystalline Entity country (global event target) exists
# Creates the country and saves it if it does not
create_crystal_country = {
	optimize_memory
	if = {
		limit = {
			NOT = {
				exists = event_target:crystal_country
			}
		}
		create_country = {
			name = "NAME_Prism"
			type = crystal
			flag = {
				icon = {
					category = "zoological"
					file = "flag_zoological_1.dds"
				}
				background= {
					category = "backgrounds"
					file = "00_solid.dds"
				}
				colors={
					"black"
					"black"
					"null"
					"null"
				}
			}
			effect = {
				save_global_event_target_as = crystal_country
				set_variable = {	# Variable to track number of Crystal Splitter Fleets sent out throughout the game session.
					which = splitter_fleets_sent_var
					value = 0
				}
				every_country = {
					limit = {
						has_country_flag = crystals_encountered
					}
					establish_communications_no_message = prev
					establish_communication_with_subjects_and_federation = { FLAG = crystals_encountered }
				}
			}
		}
	}
}

# Checks if Cracked Crystalline Shard country (global event target) exists; creates the country if it does not
create_crystal_splitter_country = {
	optimize_memory
	if = {
		limit = {
			NOT = { exists = event_target:crystal_splitter_country }
		}
		create_country = {
			name = "NAME_Cracked_Crystalline_Shard"
			type = crystal_faction
			flag = {
				icon = {
					category = "pointy"
					file = "flag_pointy_15.dds"
				}
				background = {
					category = "backgrounds"
					file = "00_solid.dds"
				}
				colors = { "black" "black" "null" "null" }
			}
			effect = {
				set_country_flag = crystal_splitter_country
				save_global_event_target_as = crystal_splitter_country
				set_faction_hostility = {
					set_hostile = no
					set_neutral = yes
					set_friendly = no
				}
				every_country = {
					limit = { has_modifier = pacified_crystals }
					prev = {
						set_faction_hostility = {
							set_hostile = no
							set_neutral = yes
							target = prev
						}
					}
				}
				every_country = {
					limit = {
						OR = {
							has_country_flag = crystals_encountered
							has_communications = event_target:crystal_country
						}
					}
					establish_communications_no_message = prev
					establish_communication_with_subjects_and_federation = { FLAG = crystals_encountered }
				}
			}
		}
	}
}

### Void Clouds ###
# Checks if Void Cloud country (global event target) exists
# Creates the country and saves it if it does not
create_cloud_country = {
	optimize_memory
	if = {
		limit = { NOT = { exists = event_target:cloud_country } }
		create_country = {
			name = "NAME_Enigmatic_Energy"
			type = cloud
			flag = {
				icon = {
					category = "zoological"
					file = "flag_zoological_1.dds"
				}
				background= {
					category = "backgrounds"
					file = "00_solid.dds"
				}
				colors={
					"black"
					"black"
					"null"
					"null"
				}
			}
			effect = {
				save_global_event_target_as = cloud_country
				add_modifier = {
					modifier = cloud_power
					days = -1
				}
				every_country = {
					limit = {
						has_country_flag = void_clouds_encountered
					}
					establish_communications_no_message = prev
					establish_communication_with_subjects_and_federation = { FLAG = void_clouds_encountered }
				}
			}
		}
	}
}
