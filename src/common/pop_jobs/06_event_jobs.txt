###################
# Event Jobs
###################

# Special purge used by events
event_purge = {
	is_capped_by_modifier = no
	category = purge

	purge = purge_normal

	possible = {
		has_pop_flag = event_purge
	}

	resources = {
		category = planet_jobs
		produces = {
			trigger = {
				exists = owner
				owner = { has_valid_civic = civic_fanatic_purifiers }
			}
			unity = 2
		}
		produces = {
			trigger = {
				exists = owner
				owner = { has_valid_civic = civic_hive_devouring_swarm }
			}
			society_research = 2
		}
	}

	weight = {
		weight = 999999
	}
}

ratling_scavenger = {
	category = worker

	can_set_priority = no
	is_capped_by_modifier = yes
	building_icon = building_junkheap

	possible_pre_triggers = {
		has_owner = yes
		is_sapient = yes
	}

	possible = {
		hidden_trigger = { exists = owner }
		owner = { is_country_type = ratlings }
	}

	resources = {
		category = planet_farmers
		produces = {
			food = 1
			minerals = 1
			consumer_goods = 1
		}
	}

	weight = {
		weight = @worker_job_weight
		mult = value:job_weights_multiple_resources_modifier|JOB|ratling_scavenger|RESOURCE1|food|WEIGHT1|0.5|RESOURCE2|minerals|WEIGHT2|0.5|
	}

	inline_script = "jobs/automodding_priority_food"
}

odd_factory_worker = {
	category = worker
	is_capped_by_modifier = yes
	condition_string = WORKER_JOB_TRIGGER
	building_icon = building_primitive_factory

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_worker_job

	resources = {
		category = planet_metallurgists
		produces = {
			alloys = 4
		}
	}

	weight = {
		weight = 999
		mult = value:job_weights_modifier|JOB|odd_factory_worker|RESOURCE|alloys|
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 0
			OR = {
				owner = { has_country_flag = odd_factory_pause }
				planet = { num_pops < 2 } # Odd Factory should not risk completely depopulating a colony
			}
		}
	}
}

odd_factory_drone = {
	category = simple_drone
	is_capped_by_modifier = yes
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_primitive_factory

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	resources = {
		category = planet_metallurgists
		produces = {
			alloys = 4
		}
	}

	weight = {
		weight = 999
		mult = value:job_weights_modifier|JOB|odd_factory_drone|RESOURCE|alloys|
		modifier = {
			factor = 0
			planet = { num_pops < 2 } # Odd Factory should not risk completely depopulating a colony
		}
	}
}

underground_trade_worker = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_holo_theatres
	clothes_texture_index = 3
	icon = clerk

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job

	pop_modifier = {
		pop_housing_usage_add = -1
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		trade_value_add = 6
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_trade_mult|
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_add = 3
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_trade_mult|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			factor = 0.5
			OR = {
				has_ethic = ethic_xenophobe
				has_ethic = ethic_fanatic_xenophobe
			}
		}
		modifier = {
			factor = 2
			OR = {
				has_ethic = ethic_xenophile
				has_ethic = ethic_fanatic_xenophile
			}
		}
	}

	inline_script = "jobs/automodding_priority_trade"
}

underground_contact_drone = {
	category = simple_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_holo_theatres
	clothes_texture_index = 3
	icon = spawning_drone

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_add = 3
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	pop_modifier = {
		pop_housing_usage_add = -1
	}

	resources = {
		category = planet_jobs
		produces = {
			trigger = {
				exists = owner
				owner = {
					is_hive_empire = yes
				}
			}
			energy = 3
			food = 2
		}
		produces = {
			trigger = {
				exists = owner
				owner = {
					is_machine_empire = yes
				}
			}
			energy = 6
		}
	}


	weight = {
		weight = @simple_drone_job_weight
		mult = value:job_weights_multiple_resources_modifier|JOB|underground_contact_drone|RESOURCE1|energy|WEIGHT1|0.5|RESOURCE2|food|WEIGHT2|0.5|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
	}

	inline_script = "jobs/automodding_priority_energy"
}

dimensional_portal_researcher = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_research_lab_1
	clothes_texture_index = 3
	icon = researcher

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job
	possible = {
		complex_specialist_job_check_trigger = yes
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				has_modifier = dportal_trade_normal
			}
		}
		trade_value_add = 6
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_trade_mult|
	}
	triggered_planet_modifier = {
		potential = {
			planet = {
				has_modifier = dportal_trade_high
			}
		}
		trade_value_add = 12
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_trade_mult|
	}
	triggered_planet_modifier = {
		potential = {
			planet = {
				has_modifier = dportal_trade_low
			}
		}
		trade_value_add = 3
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_trade_mult|
	}
	triggered_planet_modifier = {
		potential = {
			planet = {
				has_modifier = dportal_trade_crisis
			}
		}
		trade_value_add = 2
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_trade_mult|
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				has_modifier = dportal_trade_normal
			}
		}
		planet_amenities_add = 6
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}
	triggered_planet_modifier = {
		potential = {
			planet = {
				has_modifier = dportal_trade_high
			}
		}
		planet_amenities_add = 12
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}
	triggered_planet_modifier = {
		potential = {
			planet = {
				has_modifier = dportal_trade_low
			}
		}
		planet_amenities_add = 3
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}
	triggered_planet_modifier = {
		potential = {
			planet = {
				has_modifier = dportal_trade_crisis
			}
		}
		planet_amenities_add = 2
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	resources = {
		category = planet_researchers
		produces = {
			physics_research = 12
		}
		produces = {
			trigger = {
				planet = {
					has_planet_flag = dportal_closed
				}
			}
			physics_research = -6
		}
		produces = {
			trigger = {
				planet = {
					has_planet_flag = dportal_energy
				}
			}
			energy = 6
		}
		produces = {
			trigger = {
				planet = {
					has_planet_flag = dportal_void
				}
			}
			sr_dark_matter = 0.2
		}
		produces = {
			trigger = {
				planet = {
					has_planet_flag = dportal_void2
				}
			}
			sr_dark_matter = 1
		}
		upkeep = {
			consumer_goods = 3
		}
		upkeep = {
			trigger = {
				planet = {
					has_planet_flag = dportal_hell
				}
			}
			consumer_goods = 3
		}
	}

	triggered_country_modifier = {
		modifier = {
			country_naval_cap_add = 1
		}
		mult = planet.modifier:job_researcher_naval_cap_add
	}

	weight = {
		weight = @specialist_job_weight
		modifier = {
			mult = value:job_weights_multiple_resources_modifier|JOB|dimensional_portal_researcher|RESOURCE1|physics_research|WEIGHT1|0.6|RESOURCE2|energy|WEIGHT2|0.4|
			planet = { has_planet_flag = dportal_energy }
		}
		modifier = {
			mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_trade_mult|
			planet = { has_planet_flag = dportal_trader }
		}
		modifier = {
			mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
			planet = { has_planet_flag = dportal_trader }
		}
		modifier = {
			mult = value:job_weights_multiple_resources_modifier|JOB|dimensional_portal_researcher|RESOURCE1|physics_research|WEIGHT1|0.75|RESOURCE2|sr_dark_matter|WEIGHT2|0.25|
			planet = {
				OR = {
					has_planet_flag = dportal_void
					has_planet_flag = dportal_void2
				}
			}
		}
		modifier = {
			mult = value:job_weights_modifier|JOB|dimensional_portal_researcher|RESOURCE|physics_research|
			planet = {
				NOR = {
					has_planet_flag = dportal_energy
					has_planet_flag = dportal_void
					has_planet_flag = dportal_void2
				}
			}
		}
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 2
			has_living_standard = { type = living_standard_academic_privilege }
		}
		modifier = {
			factor = 0.5
			AND = {
				planet = {
					has_planet_flag = dportal_hell
				}
				OR = {
					has_ethic = ethic_spiritualist
					has_ethic = ethic_fanatic_spiritualist
				}
			}
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 5
			has_trait = trait_cyborg_creed_of_research
		}
	}

	inline_script = "jobs/automodding_priority_research"
}

dimensional_portal_researcher_gestalt = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_research_lab_1
	clothes_texture_index = 3
	icon = researcher

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	triggered_planet_modifier = {
		potential = {
			planet = {
				has_modifier = dportal_trade_normal
			}
		}
		planet_amenities_no_happiness_add = 6
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}
	triggered_planet_modifier = {
		potential = {
			planet = {
				has_modifier = dportal_trade_high
			}
		}
		planet_amenities_no_happiness_add = 12
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}
	triggered_planet_modifier = {
		potential = {
			planet = {
				has_modifier = dportal_trade_low
			}
		}
		planet_amenities_no_happiness_add = 3
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}
	triggered_planet_modifier = {
		potential = {
			planet = {
				has_modifier = dportal_trade_crisis
			}
		}
		planet_amenities_no_happiness_add = 2
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	resources = {
		category = planet_researchers
		produces = {
			physics_research = 12
		}
		produces = {
			trigger = {
				planet = {
					has_modifier = dportal_trade_normal
				}
			}
			energy = 6
		}
		produces = {
			trigger = {
				planet = {
					has_modifier = dportal_trade_high
				}
			}
			energy = 8

		}
		produces = {
			trigger = {
				planet = {
					has_modifier = dportal_trade_low
				}
			}
			energy = 4
		}
		produces = {
			trigger = {
				planet = {
					has_modifier = dportal_trade_crisis
				}
			}
			energy = 2
		}
		produces = {
			trigger = {
				planet = {
						has_planet_flag = dportal_closed
				}
			}
			physics_research = -6
		}
		produces = {
			trigger = {
				planet = {
					has_planet_flag = dportal_energy
				}
			}
			energy = 6
		}
		produces = {
			trigger = {
				planet = {
					has_planet_flag = dportal_void
				}
			}
			sr_dark_matter = 0.2
		}
		produces = {
			trigger = {
				planet = {
					has_planet_flag = dportal_void2
				}
			}
			sr_dark_matter = 1
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_machine_empire = yes
				}
			}
			energy = 3
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_hive_empire = yes
					is_lithoid_empire = no
				}
			}
			food = 3
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_hive_empire = yes
					is_lithoid_empire = yes
				}
			}
			minerals = 3
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_gestalt = no
				}
			}
			consumer_goods = 3
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_gestalt = no
				}
				planet = {
					has_planet_flag = dportal_hell
				}
			}
			consumer_goods = 3
		}
	}

	triggered_country_modifier = {
		modifier = {
			country_naval_cap_add = 1
		}
		mult = planet.modifier:job_researcher_naval_cap_add
	}

	weight = {
		weight = @complex_drone_job_weight
		modifier = {
			mult = value:job_weights_multiple_resources_modifier|JOB|dimensional_portal_researcher_gestalt|RESOURCE1|physics_research|WEIGHT1|0.6|RESOURCE2|energy|WEIGHT2|0.4|
			planet = { has_planet_flag = dportal_energy }
		}
		modifier = {
			mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
			planet = { has_planet_flag = dportal_trader }
		}
		modifier = {
			mult = value:job_weights_multiple_resources_modifier|JOB|dimensional_portal_researcher_gestalt|RESOURCE1|physics_research|WEIGHT1|0.75|RESOURCE2|sr_dark_matter|WEIGHT2|0.25|
			planet = {
				OR = {
					has_planet_flag = dportal_void
					has_planet_flag = dportal_void2
				}
			}
		}
		modifier = {
			mult = value:job_weights_modifier|JOB|dimensional_portal_researcher_gestalt|RESOURCE|physics_research|
			planet = {
				NOR = {
					has_planet_flag = dportal_energy
					has_planet_flag = dportal_void
					has_planet_flag = dportal_void2
				}
			}
		}
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 0.5
			AND = {
				planet = {
					has_planet_flag = dportal_hell
				}
				OR = {
					has_ethic = ethic_spiritualist
					has_ethic = ethic_fanatic_spiritualist
				}
			}
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
	}

	inline_script = "jobs/automodding_priority_research"
}

space_time_anomaly_researcher = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_research_lab_1
	clothes_texture_index = 3
	icon = researcher

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job
	possible = {
		complex_specialist_job_check_trigger = yes
	}

	resources = {
		category = planet_researchers
		produces = {
			physics_research = 8
			engineering_research = 4
			sr_dark_matter = 0.2
		}
		upkeep = {
			consumer_goods = 2
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = { has_valid_civic = civic_technocracy }
			}
			consumer_goods = 1
		}
	}

	triggered_country_modifier = {
		modifier = {
			country_naval_cap_add = 1
		}
		mult = planet.modifier:job_researcher_naval_cap_add
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_multiple_resources_modifier|JOB|space_time_anomaly_researcher|RESOURCE1|physics_research|WEIGHT1|0.7|RESOURCE2|engineering_research|WEIGHT2|0.3|
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 2
			has_living_standard = { type = living_standard_academic_privilege }
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
	}

	inline_script = "jobs/automodding_priority_research"
}

space_time_anomaly_researcher_gestalt = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_research_lab_1
	clothes_texture_index = 3
	icon = researcher

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	resources = {
		category = planet_researchers
		produces = {
			physics_research = 8
			engineering_research = 4
			sr_dark_matter = 0.2
		}

		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_machine_empire = yes
				}
			}
			energy = 4
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_hive_empire = yes
				}
			}
			minerals = 6
		}
	}

	triggered_country_modifier = {
		modifier = {
			country_naval_cap_add = 1
		}
		mult = planet.modifier:job_researcher_naval_cap_add
	}

	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_multiple_resources_modifier|JOB|space_time_anomaly_researcher_gestalt|RESOURCE1|physics_research|WEIGHT1|0.7|RESOURCE2|engineering_research|WEIGHT2|0.3|
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 5
			has_trait = trait_cyborg_creed_of_research
		}
	}

	inline_script = "jobs/automodding_priority_research"
}

### Feral Overload Jobs

# Feral Overload - Utilize Option - Gas Plant Engineers

# Ordinary Species
gas_plant_engineer = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_refinery
	clothes_texture_index = 3
	icon = gas_extractor

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job

	triggered_planet_modifier = {
		potential = {
			planet = {
				has_deposit = d_spore_vents
			}
		}
		modifier = {
			planet_jobs_exotic_gases_produces_mult = 0.05
		}
	}

	resources = {
		category = planet_refiners
		produces = {
			exotic_gases = 3
		}
		upkeep = {
			minerals = 10
		}
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_modifier|JOB|gas_plant_engineer|RESOURCE|exotic_gases|
		modifier = {
			factor = 10
			planet = {
				any_owned_pop = {
					has_job = gas_refiner
				}
			}
		}
		modifier = {
			factor = 1.5
			has_trait = trait_necrophage
		}
		modifier = {
			factor = 1.5
			has_job = gas_plant_engineer
		}
		modifier = {
			factor = 0
			NOT = {
				planet = {
					any_owned_pop = {
						has_job = gas_refiner
					}
				}
			}
		}
	}
}

# Gestalt Species
gas_plant_engineer_gestalt = {
	category = complex_drone
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_refinery
	clothes_texture_index = 3
	icon = gas_refiner_drone

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	triggered_planet_modifier = {
		potential = {
			planet = {
				has_deposit = d_spore_vents
			}
		}
		modifier = {
			planet_jobs_exotic_gases_produces_mult = 0.05
		}
	}

	resources = {
		category = planet_refiners
		produces = {
			exotic_gases = 3
		}
		upkeep = {
			minerals = 10
		}
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_modifier|JOB|gas_plant_engineer_gestalt|RESOURCE|exotic_gases|
		modifier = {
			factor = 10
			planet = {
				any_owned_pop = {
					has_job = gas_refiner_drone
				}
			}
		}
		modifier = {
			factor = 1.5
			has_job = gas_plant_engineer_gestalt
		}
		modifier = {
			factor = 0
			NOT = {
				planet = {
					any_owned_pop = {
						has_job = gas_refiner_drone
					}
				}
			}
		}
	}
}

# Feral Overload - Exterminate Option - Cave Cleaners

# Ordinary Species
cave_cleaner = {
	category = worker
	condition_string = WORKER_JOB_TRIGGER
	building_icon = building_mineral_purification_plant
	clothes_texture_index = 3
	icon = miner

	possible_pre_triggers = {
		has_owner = yes
		is_sapient = yes
	}

	possible_precalc = can_fill_worker_job

	triggered_planet_modifier = {
		potential = {
			planet = {
				has_deposit = d_cave_shroom_veins
			}
		}
		modifier = {
			planet_jobs_minerals_produces_mult = 0.1
		}
	}

	resources = {
		category = planet_miners
		produces = {
			minerals = 5
		}
		upkeep = {
			energy = 2
		}
	}

	weight = {
		weight = @worker_prio_job_weight
		mult = value:job_weights_modifier|JOB|cave_cleaner|RESOURCE|minerals|
		modifier = {
			factor = 10
			planet = {
				any_owned_pop = {
					has_job = miner
				}
			}
		}
		modifier = {
			factor = 1.5
			has_job = cave_cleaner
		}
		modifier = {
			factor = 0
			NOT = {
				planet = {
					any_owned_pop = {
						has_job = miner
					}
				}
			}
		}
	}

	inline_script = "jobs/automodding_priority_minerals"
}

# Gestalt Species
cave_cleaner_gestalt = {
	category = simple_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_mineral_purification_plant
	clothes_texture_index = 3
	icon = mining_drone

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	triggered_planet_modifier = {
		potential = {
			planet = {
				has_deposit = d_cave_shroom_veins
			}
		}
		modifier = {
			planet_jobs_minerals_produces_mult = 0.1
		}
	}

	resources = {
		category = planet_miners
		produces = {
			minerals = 5
		}
		upkeep = {
			energy = 2
		}
	}

	weight = {
		weight = @simple_drone_job_weight
		mult = value:job_weights_modifier|JOB|cave_cleaner_gestalt|RESOURCE|minerals|
		modifier = {
			factor = 10
			planet = {
				any_owned_pop = {
					has_job = mining_drone
				}
			}
		}
		modifier = {
			factor = 1.5
			has_job = cave_cleaner_gestalt
		}
		modifier = {
			factor = 0
			NOT = {
				planet = {
					any_owned_pop = {
						has_job = mining_drone
					}
				}
			}
		}
	}

	inline_script = "jobs/automodding_priority_minerals"
}

#Dinosaur Hunters
titan_hunter = {
	category = worker

	is_capped_by_modifier = yes
	clothes_texture_index = 2
	icon = hunter_gatherer

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_worker_job

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		trade_value_add = 8
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_trade_mult|
	}

	resources = {
		category = planet_farmers
		produces = {
			food = 8
		}
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_modifier|JOB|titan_hunter|RESOURCE|food|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_trade_mult|
		modifier = {
			factor = 1.1
			owner = { has_valid_civic = civic_agrarian_idyll }
		}
		modifier = {
			factor = 10
			is_enslaved = yes
			can_take_servant_job = no
		}
		modifier = {
			factor = 0.25
			can_take_servant_job = yes
		}
		modifier = {
			factor = 0.5
			has_trait = trait_lithoid

			owner = {
				is_lithoid_empire = yes
				country_uses_food = no
				has_monthly_income = {
					resource = food
					value >= 0
				}
			}
		}
	}

	inline_script = "jobs/automodding_priority_food"
}

# Robot Caretaker for Lonely Bot
robot_caretaker = {
	category = specialist

	is_capped_by_modifier = yes
	clothes_texture_index = 3
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_autochthon_monument

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job
	possible = {
		complex_specialist_job_check_trigger = yes
	}

	resources = {
		category = planet_administrators
		produces = {
			unity = 5
			engineering_research = 5
		}
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_multiple_resources_modifier|JOB|robot_caretaker|RESOURCE1|unity|WEIGHT1|0.5|RESOURCE2|engineering_research|WEIGHT2|0.5|
		# Negative
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 0.5
			OR = {
				has_trait = trait_wasteful
				has_trait = trait_robot_wasteful
			}
		}
		# Positive
		modifier = {
			factor = 3
			has_job = robot_caretaker
		}
		modifier = {
			factor = 3
			has_trait = trait_conservational
		}
	}

	inline_script = "jobs/automodding_priority_unity"
}

#Turtle Miner Regular
turtle_miner = {
	category = worker

	is_capped_by_modifier = yes
	clothes_texture_index = 2
	icon = miner

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_worker_job

	resources = {
		category = planet_miners
		produces = {
			minerals = 3
			food = 2
		}
		produces = {
			trigger = {
				planet = { has_active_building = building_food_processing_facility }
			}
			food = 1
		}
		produces = {
			trigger = {
				planet = { has_active_building = building_food_processing_center }
			}
			food = 2
		}
		upkeep = {
			energy = 2
		}
	}

	weight = {
		weight = @worker_job_weight
		mult = value:job_weights_multiple_resources_modifier|JOB|turtle_miner|RESOURCE1|minerals|WEIGHT1|0.5|RESOURCE2|food|WEIGHT2|0.5|
		modifier = {
			factor = 2
			OR = {
				has_trait = trait_robot_harvesters
				has_trait = trait_agrarian
				has_trait = trait_robot_power_drills
				has_trait = trait_industrious
			}
		}
		modifier = {
			factor = 1.1
			owner = { has_valid_civic = civic_agrarian_idyll }
		}
		modifier = {
			factor = 10
			is_enslaved = yes
			can_take_servant_job = no
		}
		modifier = {
			factor = 0.25
			can_take_servant_job = yes
		}

		modifier = {
			factor = 0.5
			has_trait = trait_lithoid

			owner = {
				is_lithoid_empire = yes
				country_uses_food = no
				has_monthly_income = {
					resource = food
					value >= 0
				}
			}
		}
	}

	inline_script = "jobs/automodding_priority_minerals"
}

#Turtle Miner Gestalt
turtle_miner_gestalt = {
	category = simple_drone
	condition_string = DRONE_JOB_TRIGGER
	clothes_texture_index = 3
	icon = mining_drone

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	resources = {
		category = planet_miners
		produces = {
			minerals = 3
			food = 2
		}
		produces = {
			trigger = {
				planet = { has_active_building = building_food_processing_facility }
			}
			food = 1
		}
		produces = {
			trigger = {
				planet = { has_active_building = building_food_processing_center }
			}
			food = 2
		}
		upkeep = {
			energy = 2
		}
	}

	weight = {
		weight = @simple_drone_job_weight
		mult = value:job_weights_multiple_resources_modifier|JOB|turtle_miner_gestalt|RESOURCE1|minerals|WEIGHT1|0.5|RESOURCE2|food|WEIGHT2|0.5|
		modifier = {
			factor = 1.1
			owner = { has_valid_civic = civic_agrarian_idyll }
		}
		modifier = {
			factor = 0.25
			can_take_servant_job = yes
		}
		modifier = {
			factor = 0.5
			has_trait = trait_lithoid

			owner = {
				is_lithoid_empire = yes
				country_uses_food = no
				has_monthly_income = {
					resource = food
					value >= 0
				}
			}
		}
	}

	inline_script = "jobs/automodding_priority_minerals"
}

# Bio-assistants
machine_nurse = {
	category = bio_trophy
	is_capped_by_modifier = yes
	clothes_texture_index = 4
	building_icon = building_clinic

	possible_pre_triggers = {
		is_sapient = yes
	}

	possible = {
		has_citizenship_type = { type = citizenship_organic_trophy country = owner }
	}

	resources = {
		category = planet_bio_trophies
		produces = {
			trigger = {
				happiness >= 0.5
			}
			unity = 3
		}
		upkeep = {
			energy = 1
		}
	}

	triggered_planet_modifier = {
		potential = {
			happiness >= 0.5
		}
		modifier = {
			planet_jobs_complex_and_simple_drone_produces_mult = 0.05
		}
	}
	triggered_pop_modifier = {
		pop_housing_usage_add = -1
	}

	weight = {
		weight = @special_job_weight
		modifier = {
			factor = 200 # brings @special_job_weight up to 2
			exists = planet
			exists = planet.controller
			OR = {
				planet.controller = {
					any_situation = {
						is_situation_type = situation_geomagnetic_storm
						# more weight than normal bio-trophy job when the situation is active
					}
				}
			}
		}
	}

	inline_script = "jobs/automodding_priority_unity"
}

# Ancient Manufactorium Complex event job

manufactorium_specialist = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_ancient_cryo_chamber
	icon = foundry

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job
	possible = {
		complex_specialist_job_check_trigger = yes
	}

	resources = {
		category = planet_metallurgists
		produces = { #no modifiers min: 2 max: 7
			alloys = 5
		}
		upkeep = { #no modifiers min: 2 food/3 minerals max: 9
			minerals = 5
		}
		produces = {
			trigger = {
				planet = {
					has_planet_flag = manufactorium_crafters
				}
			}
			unity = 0.5
		}
		produces = {
			trigger = {
				planet = {
					has_planet_flag = manufactorium_subterranean
				}
			}
			unity = 0.5
		}
		produces = {
			trigger = {
				planet = {
					has_planet_flag = manufactorium_dwarven_craft
				}
			}
			unity = 1
		}
		upkeep = {
			trigger = {
				planet = {
					has_planet_flag = manufactorium_earthquake_upkeep
				}
			}
			minerals = 2
		}
		produces = {
			trigger = {
				planet = {
					has_planet_flag = manufactorium_earthquake_production
				}
			}
			alloys = -1
		}
		produces = {
			trigger = {
				planet = {
					has_planet_flag = manufactorium_guardians_produce
				}
			}
			alloys = -1
		}
		produces = {
			trigger = {
				planet = {
					has_planet_flag = manufactorium_engineering
				}
			}
			engineering_research = 1
		}
		produces = {
			trigger = {
				planet = {
					has_planet_flag = manufactorium_society
				}
			}
			society_research = 1
		}
		produces = {
			trigger = {
				planet = {
					has_planet_flag = manufactorium_work_production
				}
			}
			alloys = -1
		}
		upkeep = {
			trigger = {
				planet = {
					has_planet_flag = manufactorium_work_production
				}
			}
			minerals = -1
		}
		upkeep = {
			trigger = {
				planet = {
					has_planet_flag = manufactorium_random_good
				}
			}
			minerals = -1
		}
		upkeep = {
			trigger = {
				planet = {
					has_planet_flag = manufactorium_environmentalists
				}
			}
			minerals = -2
		}
		produces = {
			trigger = {
				planet = {
					has_planet_flag = manufactorium_despoilers
				}
			}
			alloys = 1
		}
		produces = {
			trigger = {
				planet = {
					has_planet_flag = manufactorium_took_opportunity
				}
			}
			alloys = 1
		}
		upkeep = {
			trigger = {
				planet = {
					has_planet_flag = manufactorium_took_opportunity
				}
			}
			minerals = 2
		}
		upkeep = {
			trigger = {
				planet = {
					has_planet_flag = manufactorium_took_opportunity_bad
				}
			}
			minerals = 1
		}
		upkeep = {
			trigger = {
				planet = {
					has_planet_flag = manufactorium_catalytic
				}
			}
			minerals = -2
			food = 2
		}
		produces = {
			trigger = {
				planet = {
					has_planet_flag = manufactorium_remnants
				}
			}
			alloys = 1
		}
		upkeep = {
			trigger = {
				planet = {
					has_planet_flag = manufactorium_remnants
				}
			}
			minerals = 1
		}
	}

	triggered_pop_modifier = {
		potential = {
			planet = { has_planet_flag = manufactorium_work_happiness }
		}
		pop_happiness = -0.2
	}

	weight = {
		weight = @special_job_weight
		mult = value:job_weights_modifier|JOB|manufactorium_specialist|RESOURCE|alloys|
	}
}

manufactorium_complex_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_ancient_cryo_chamber
	icon = foundry

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	resources = {
		category = planet_metallurgists
		produces = { #no modifiers min: 3 max: 8
			alloys = 6
		}
		upkeep = { #no modifiers min: 1 (with 2 food added)/3 without food change max: 9
			minerals = 5
		}
		produces = {
			trigger = {
				planet = {
					has_planet_flag = manufactorium_subterranean
				}
			}
			unity = 0.5
		}
		upkeep = {
			trigger = {
				planet = {
					has_planet_flag = manufactorium_earthquake_upkeep
				}
			}
			minerals = 2
		}
		produces = {
			trigger = {
				planet = {
					has_planet_flag = manufactorium_earthquake_production
				}
			}
			alloys = -1
		}
		produces = {
			trigger = {
				planet = {
					has_planet_flag = manufactorium_engineering
				}
			}
			engineering_research = 1
		}
		produces = {
			trigger = {
				planet = {
					has_planet_flag = manufactorium_society
				}
			}
			society_research = 1
		}
		upkeep = {
			trigger = {
				planet = {
					has_planet_flag = manufactorium_environmentalists
				}
			}
			minerals = -2
		}
		produces = {
			trigger = {
				planet = {
					has_planet_flag = manufactorium_despoilers
				}
			}
			alloys = 1
		}
		produces = {
			trigger = {
				planet = {
					has_planet_flag = manufactorium_took_opportunity
				}
			}
			alloys = 1
		}
		upkeep = {
			trigger = {
				planet = {
					has_planet_flag = manufactorium_took_opportunity
				}
			}
			minerals = 2
		}
		upkeep = {
			trigger = {
				planet = {
					has_planet_flag = manufactorium_took_opportunity_bad
				}
			}
			minerals = 1
		}
		upkeep = {
			trigger = {
				planet = {
					has_planet_flag = manufactorium_catalytic
				}
			}
			minerals = -2
			food = 2
		}
		produces = {
			trigger = {
				planet = {
					has_planet_flag = manufactorium_remnants
				}
			}
			alloys = 1
		}
		upkeep = {
			trigger = {
				planet = {
					has_planet_flag = manufactorium_remnants
				}
			}
			minerals = 1
		}
	}

	triggered_pop_modifier = {
		potential = {
			planet = { has_planet_flag = manufactorium_work_gestalt }
		}
		pop_amenities_usage_mult = 0.2
	}

	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_modifier|JOB|manufactorium_complex_drone|RESOURCE|alloys|
	}
}

manufactorium_scraper = {
	category = worker
	condition_string = WORKER_JOB_TRIGGER
	building_icon = building_ancient_cryo_chamber
	icon = miner

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_worker_job

	resources = {
		category = planet_miners
		produces = {
			minerals = 1
			alloys = 1
			engineering_research = 0.5
		}
	}

	weight = {
		weight = @worker_job_weight
		mult = value:job_weights_modifier|JOB|manufactorium_scraper|RESOURCE|minerals|
	}

	inline_script = "jobs/automodding_priority_minerals"
}

manufactorium_scraper_drone = {
	category = simple_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_ancient_cryo_chamber
	icon = miner

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	resources = {
		category = planet_miners
		produces = {
			minerals = 1
			alloys = 1
			engineering_research = 0.5
		}
	}

	weight = {
		weight = @simple_drone_job_weight
		mult = value:job_weights_modifier|JOB|manufactorium_scraper_drone|RESOURCE|minerals|
	}

	inline_script = "jobs/automodding_priority_minerals"
}

# Ancient Manufactorium Complex event job
archivist = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_master_archive
	clothes_texture_index = 2
	icon = fe_archivist

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job
	possible = {
		complex_specialist_job_check_trigger = yes
	}

	resources = {
		category = planet_researchers
		produces = {
			physics_research = 6
			engineering_research = 6
			society_research = 6
		}
		upkeep = {
			consumer_goods = 2
		}
		upkeep = {
			trigger = {
				planet = {
					has_planet_flag = has_science_ministry
				}
			}
			consumer_goods = 1
		}
	}

	overlord_resources = {
		category = planet_requisitioned_research
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_science_ministry
				}
			}
			physics_research = 1
			engineering_research = 1
			society_research = 1
		}
	}

	triggered_country_modifier = {
		modifier = {
			country_naval_cap_add = 1
		}
		mult = planet.modifier:job_researcher_naval_cap_add
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_research_modifier|JOB|archivist|
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 2
			has_living_standard = { type = living_standard_academic_privilege }
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 1.5
			has_job = archivist
		}
		modifier = {
			factor = 0.8
			is_enslaved = yes
			has_slavery_type = { type = slavery_indentured }
		}
	}

	inline_script = "jobs/automodding_priority_research"
}

puddle_technician = {
	category = worker
	condition_string = WORKER_JOB_TRIGGER
	building_icon = building_food_processing_facility
	clothes_texture_index = 2

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_worker_job
	possible = {
		hidden_trigger = { exists = owner }
		owner = {
			is_gestalt = no
		}
	}

	resources = {
		category = planet_farmers
		produces = {
			food = 6
			alloys = 1
		}
		produces = {
			trigger = {
				exists = owner
				owner = {
					is_robot_empire = yes
				}
			}
			food = -1
		}
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_produce_requisitorium
				}
			}
			food = @requisitorium_food_reduction
		}
	}

	overlord_resources = {
		category = planet_requisitioned_food
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_produce_requisitorium
				}
			}
			food = @requisitorium_food_overlord
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_valid_civic = civic_agrarian_idyll }
		}
		planet_amenities_add = 2
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	weight = {
		weight = @worker_job_weight
		mult = value:job_weights_modifier|JOB|farmer|RESOURCE|food|
		modifier = {
			factor = 1.1
			owner = { has_valid_civic = civic_agrarian_idyll }
		}
		modifier = {
			factor = 10
			is_enslaved = yes
			can_take_servant_job = no
			NOT = {
				has_slavery_type = { type = slavery_indentured }
			}
		}
		modifier = {
			factor = 3
			OR = {
				is_non_sapient_robot = yes
				is_shackled_robot = yes
			}
			can_take_servant_job = no
			owner = { has_technology = tech_droid_workers }
		}
		modifier = {
			factor = 200
			OR = {
				is_non_sapient_robot = yes
				is_shackled_robot = yes
			}
			can_take_servant_job = no
			owner = {
				NOT = { has_technology = tech_droid_workers }
			}
		}
		modifier = {
			factor = 0.25
			can_take_servant_job = yes
		}
		modifier = {
			factor = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
			owner = { has_valid_civic = civic_agrarian_idyll }
		}
		# low income modifier
		modifier = {
			factor = 1.2
			exists = planet
			planet = {
				has_available_jobs = farmer
			}
			exists = owner
			owner = {
				is_ai = yes
				has_monthly_income = {
					resource = food
					value < 10
				}
			}
		}

		modifier = {
			factor = 0.5
			has_trait = trait_lithoid

			owner = {
				is_lithoid_empire = yes
				country_uses_food = no
				has_monthly_income = {
					resource = food
					value >= 0
				}
			}
		}
	}

	inline_script = "jobs/automodding_priority_food"
}

puddle_technician_drone = {
	category = simple_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_food_processing_facility
	clothes_texture_index = 2

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job
	possible = {
		hidden_trigger = { exists = owner }
		owner = {
			is_gestalt = yes
		}
	}

	resources = {
		category = planet_farmers
		produces = {
			food = 6
			alloys = 1
		}
		produces = {
			trigger = {
				exists = owner
				owner = {
					is_robot_empire = yes
				}
			}
			food = -1
		}
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_produce_requisitorium
				}
			}
			food = @requisitorium_food_reduction
		}
	}

	overlord_resources = {
		category = planet_requisitioned_food
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_produce_requisitorium
				}
			}
			food = @requisitorium_food_overlord
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_valid_civic = civic_agrarian_idyll }
		}
		planet_amenities_add = 2
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	weight = {
		weight = @worker_job_weight
		mult = value:job_weights_modifier|JOB|farmer|RESOURCE|food|
		modifier = {
			factor = 1.1
			owner = { has_valid_civic = civic_agrarian_idyll }
		}
		modifier = {
			factor = 10
			is_enslaved = yes
			can_take_servant_job = no
			NOT = {
				has_slavery_type = { type = slavery_indentured }
			}
		}
		modifier = {
			factor = 3
			OR = {
				is_non_sapient_robot = yes
				is_shackled_robot = yes
			}
			can_take_servant_job = no
			owner = { has_technology = tech_droid_workers }
		}
		modifier = {
			factor = 200
			OR = {
				is_non_sapient_robot = yes
				is_shackled_robot = yes
			}
			can_take_servant_job = no
			owner = {
				NOT = { has_technology = tech_droid_workers }
			}
		}
		modifier = {
			factor = 0.25
			can_take_servant_job = yes
		}
		modifier = {
			factor = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
			owner = { has_valid_civic = civic_agrarian_idyll }
		}
		# low income modifier
		modifier = {
			factor = 1.2
			exists = planet
			planet = {
				has_available_jobs = farmer
			}
			exists = owner
			owner = {
				is_ai = yes
				has_monthly_income = {
					resource = food
					value < 10
				}
			}
		}

		modifier = {
			factor = 0.5
			has_trait = trait_lithoid

			owner = {
				is_lithoid_empire = yes
				country_uses_food = no
				has_monthly_income = {
					resource = food
					value >= 0
				}
			}
		}
	}

	inline_script = "jobs/automodding_priority_food"
}

#Stasis Prison Colony Chain Jobs
stasis_warden = {
	category = specialist
	condition_string = BATTLE_THRALL_JOB_TRIGGER
	building_icon = building_precinct_house
	clothes_texture_index = 5
	icon = enforcer

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible = {
		battle_thrall_job_check_trigger = yes
	}

	resources = {
		category = planet_enforcers
		produces = {
			physics_research = 4
		}
		produces = {
			trigger = {
				exists = owner
				owner = { has_active_tradition = tr_domination_judgment_corps }
			}
			unity = 1
		}
		upkeep = {
			trigger = {
				exists = planet
				planet = { has_modifier = anticrime_campaign }
			}
			energy = 2
		}
	}

	planet_modifier = {
		planet_crime_add = -25
		planet_stability_add = 1
	}

	triggered_planet_modifier = {
		potential = {
			exists = planet
			planet = { has_modifier = anticrime_campaign }
		}
		modifier = {
			planet_crime_add = -10
		}
	}

	weight = {
		weight = @specialist_job_weight

		modifier = {
			mult = value:job_weights_modifier|JOB|enforcer|RESOURCE|unity|FACTOR|0.25|
			owner = { has_active_tradition = tr_domination_judgment_corps }
		}

		modifier = {
			factor = 10
			has_job = enforcer
		}
		modifier = {
			factor = 10
			planet = { planet_crime > 15}
			NOT = { has_job = enforcer }
		}
		modifier = {
			factor = 0.01
			planet = { planet_crime <= 15}
			NOT = { has_job = enforcer }
		}

		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 2
			has_trait = trait_resilient
		}
		modifier = {
			factor = 2
			has_trait = trait_very_strong
		}
		modifier = {
			factor = 1.5
			has_trait = trait_strong
		}
		modifier = {
			factor = 10
			is_enslaved = yes
			has_slavery_type = { type = slavery_military }
		}
		modifier = {
			factor = 0.50
			has_trait = trait_weak
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 1.1
			has_trait = trait_cybernetic
		}
		modifier = {
			factor = 2
			has_trait = trait_presapient_earthbound
		}
		modifier = {
			factor = 1.1
			has_trait = trait_limited_regeneration
		}
		modifier = {
			factor = 0.8
			is_enslaved = yes
			has_slavery_type = { type = slavery_indentured }
		}
		modifier = {
			factor = 2
			has_trait = trait_lithoid
		}
	}
}

stasis_warden_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_stronghold
	icon = patrol_drone

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	resources = {
		category = planet_jobs
		produces = {
			physics_research = 4
			unity = 1
		}
	}

	planet_modifier = {
		planet_crime_no_happiness_add = -20
	}

	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_modifier|JOB|patrol_drone|RESOURCE|unity|FACTOR|0.25|
		modifier = {
			factor = 50
			planet = { planet_crime > 22 }
		}
		modifier = {
			weight = 20
			exists = owner
			owner = { is_at_war = yes }
		}
		modifier = {
			factor = 3
			has_trait = trait_resilient
		}
		modifier = {
			factor = 3
			planet = { planet_crime > 0 }
			has_trait = trait_very_strong
		}
		modifier = {
			factor = 2
			planet = { planet_crime > 0 }
			has_trait = trait_strong
		}
		modifier = {
			factor = 0.5
			has_trait = trait_weak
		}
		modifier = {
			factor = 2
			has_trait = trait_lithoid
		}
		modifier = {
			factor = 1.2
			has_trait = trait_cybernetic
		}
	}
}

astrogarbage_collector = {
	category = worker
	is_capped_by_modifier = yes
	condition_string = WORKER_JOB_TRIGGER
	building_icon = building_junkheap
	icon = low_tech_laborer

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_worker_job

	resources = {
		category = planet_miners
		produces = {
			alloys = 2
		}
	}

	planet_modifier = {
		pop_environment_tolerance = 0.025
	}

	weight = {
		weight = @worker_job_weight
		mult = value:job_weights_modifier|JOB|astrogarbage_collector|RESOURCE|alloys|
		modifier = {
			factor = 10
			is_enslaved = yes
			can_take_servant_job = no
			NOT = { has_slavery_type = { type = slavery_indentured } }
		}
		modifier = {
			factor = 3
			OR = {
				is_non_sapient_robot = yes
				is_shackled_robot = yes
			}
			can_take_servant_job = no
			owner = { has_technology = tech_droid_workers }
		}
		modifier = {
			factor = 200
			OR = {
				is_non_sapient_robot = yes
				is_shackled_robot = yes
			}
			can_take_servant_job = no
			owner = { NOT = { has_technology = tech_droid_workers } }
		}
		modifier = {
			factor = 0.25
			can_take_servant_job = yes
		}
	}
}

# Gestalt Species
astrogarbage_collector_gestalt = {
	category = simple_drone
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_refinery
	clothes_texture_index = 3
	icon = gas_refiner_drone

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	planet_modifier = {
		pop_environment_tolerance = 0.015
	}

	resources = {
		category = planet_miners
		produces = {
			alloys = 3
		}
	}

	weight = {
		weight = @simple_drone_job_weight
		mult = value:job_weights_modifier|JOB|astrogarbage_collector_gestalt|RESOURCE|alloys|
		modifier = {
			factor = 1.1
			exists = owner
			years_passed < 1
			owner = { has_valid_civic = civic_machine_assimilator }
			has_trait = trait_cybernetic
		}
		modifier = {
			factor = 1.2
			has_job = astrogarbage_collector_gestalt
		}
	}
}

@power_farmer_output = 12
@power_farmer_alloy_upkeep = 0.5
@power_farmer_mineral_upkeep = 2

myrmeku_power_farmer = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_primitive_farm
	clothes_texture_index = 3
	icon = technician

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job

	resources = {
		category = planet_technician
		produces = {
			energy = @power_farmer_output
		}
		upkeep = {
			minerals = @power_farmer_mineral_upkeep
			alloys =  @power_farmer_alloy_upkeep
		}
	}
	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_modifier|JOB|myrmeku_power_farmer|RESOURCE|energy|
	}

	inline_script = "jobs/automodding_priority_energy"
}

myrmeku_power_farmer_gestalt = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_primitive_farm
	clothes_texture_index = 3
	icon = technician_drone

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}
	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	resources = {
		category = planet_technician
		produces = {
			energy = @power_farmer_output
		}
		upkeep = {
			minerals = @power_farmer_mineral_upkeep
			alloys =  @power_farmer_alloy_upkeep
		}
	}
	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_modifier|JOB|myrmeku_power_farmer_gestalt|RESOURCE|energy|
	}

	inline_script = "jobs/automodding_priority_energy"
}

#Stratovent colony event chain jobs

stratovent_researcher = {
	category = specialist
	is_capped_by_modifier = yes
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_nanolab_1
	icon = xeno_zoo_keeper

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job

	resources = {
		category = planet_researchers
		produces = {
			society_research = 3
		}
		upkeep = {
			consumer_goods = 3
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			always = yes
		}
		trade_value_add = 5
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_trade_mult|
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			always = yes
		}
		planet_amenities_add = 3
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult||
	}

	triggered_country_modifier = {
		modifier = {
			country_naval_cap_add = 1
		}
		mult = planet.modifier:job_researcher_naval_cap_add
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_modifier|JOB|stratovent_researcher|RESOURCE|society_research|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_trade_mult|
	}

	inline_script = "jobs/automodding_priority_research"
}

stratovent_refiner = {
	category = specialist
	is_capped_by_modifier = yes
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_bio_reprocessing_facilities
	icon = gas_extractor

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job

	resources = {
		category = planet_sr_miners
		produces = {
			exotic_gases = 2
		}
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_modifier|JOB|stratovent_refiner|RESOURCE|exotic_gases|
	}
}

stratovent_refiner_upg = {
	category = specialist
	is_capped_by_modifier = yes
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_bio_reprocessing_facilities
	icon = gas_extractor

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job

	resources = {
		category = planet_sr_miners
		produces = {
			exotic_gases = 3
		}
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_modifier|JOB|stratovent_refiner_upg|RESOURCE|exotic_gases|
	}
}

stratovent_refiner_minerals = {
	category = specialist
	is_capped_by_modifier = yes
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_bio_reprocessing_facilities
	icon = gas_extractor

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job

	resources = {
		category = planet_miners
		produces = {
			exotic_gases = 1
			minerals = 2
		}
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_multiple_resources_modifier|JOB|stratovent_refiner_minerals|RESOURCE1|exotic_gases|WEIGHT1|0.7|RESOURCE2|minerals|WEIGHT2|0.3|
	}
}

#Glacial Crisis event chain jobs

mineral_diver = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon =  building_mineral_purification_plant
	clothes_texture_index = 2
	icon = miner

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job
	possible = {
		hidden_trigger = { exists = owner }
		owner = {
			is_gestalt = no
		}
	}

	resources = {
		category = planet_miners
		produces = {
			minerals = 3
			alloys = 1
		}
		upkeep = {
			food = 3
		}
	}
	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_modifier|JOB|mineral_diver|RESOURCE|minerals|
	}

	inline_script = "jobs/automodding_priority_minerals"
}

mineral_diver_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon =  building_mineral_purification_plant
	clothes_texture_index = 2
	icon = mining_drone

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job
	possible = {
		hidden_trigger = { exists = owner }
		owner = {
			is_gestalt = yes
		}
	}

	resources = {
		category = planet_miners
		produces = {
			minerals = 3
			alloys = 1
		}
		upkeep = {
			energy = 2
		}
	}
	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_modifier|JOB|mineral_diver_drone|RESOURCE|minerals|
	}

	inline_script = "jobs/automodding_priority_minerals"
}

#Rapid Desertification event chain jobs

alien_hunter = {
	category = worker
	is_capped_by_modifier = yes
	condition_string = WORKER_JOB_TRIGGER
	building_icon = building_crude_huts
	icon = hunter_gatherer

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_worker_job

	resources = {
		category = planet_farmers
		produces = {
			food = 2
		}
	}

	planet_modifier = {
		pop_environment_tolerance = 0.025
	}

	weight = {
		weight = @worker_job_weight
		mult = value:job_weights_modifier|JOB|alien_hunter|RESOURCE|food|
		modifier = {
			factor = 10
			is_enslaved = yes
			can_take_servant_job = no
			NOT = { has_slavery_type = { type = slavery_indentured } }
		}
		modifier = {
			factor = 3
			OR = {
				is_non_sapient_robot = yes
				is_shackled_robot = yes
			}
			can_take_servant_job = no
			owner = { has_technology = tech_droid_workers }
		}
		modifier = {
			factor = 200
			OR = {
				is_non_sapient_robot = yes
				is_shackled_robot = yes
			}
			can_take_servant_job = no
			owner = { NOT = { has_technology = tech_droid_workers } }
		}
		modifier = {
			factor = 0.25
			can_take_servant_job = yes
		}
	}

	inline_script = "jobs/automodding_priority_food"
}
