###################
# Specialist Jobs
###################
researcher = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_research_lab_1
	clothes_texture_index = 3

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job
	possible = {
		complex_specialist_job_check_trigger = yes
	}

	triggered_country_modifier = {
		modifier = {
			country_naval_cap_add = 1
		}
		mult = planet.modifier:job_researcher_naval_cap_add
	}

	resources = {
		category = planet_researchers
		produces = {
			physics_research = 3
			engineering_research = 3
			society_research = 3
		}
		upkeep = {
			consumer_goods = 2
		}
		upkeep = {
			trigger = {
				planet = {
					has_planet_flag = has_science_ministry
				}
			}
			consumer_goods = 1
		}
	}

	overlord_resources = {
		category = planet_requisitioned_research
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_science_ministry
				}
			}
			physics_research = 1
			engineering_research = 1
			society_research = 1
		}
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_research_modifier|JOB|researcher|
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 2
			has_living_standard = { type = living_standard_academic_privilege }
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 1.5
			has_job = researcher
		}
		modifier = {
			factor = 0.8
			is_enslaved = yes
			has_slavery_type = { type = slavery_indentured }
		}
		modifier = {
			factor = 5
			has_trait = trait_cyborg_creed_of_research
		}
	}

	inline_script = "jobs/automodding_priority_research"
}

xeno_zoo_keeper = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_xeno_zoo
	clothes_texture_index = 3

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job
	possible = {
		complex_specialist_job_check_trigger = yes
	}

	resources = {
		category = planet_zoo_keepers
		produces = {
			society_research = 10
		}
		upkeep = {
			consumer_goods = 1
		}
	}

	triggered_country_modifier = {
		modifier = {
			country_naval_cap_add = 1
		}
		mult = planet.modifier:job_researcher_naval_cap_add
	}

	triggered_planet_modifier = {
		planet_amenities_add = 1
		mult = value:zoo_keeper_amenity_output
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_research_modifier|JOB|xeno_zoo_keeper|
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 2
			has_living_standard = { type = living_standard_academic_privilege }
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 1.5
			has_job = xeno_zoo_keeper
		}
		modifier = {
			factor = 0.8
			is_enslaved = yes
			has_slavery_type = { type = slavery_indentured }
		}
	}

	inline_script = "jobs/automodding_priority_research"
}

priest = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_temple
	clothes_texture_index = 3

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job
	possible = {
		complex_specialist_job_check_trigger = yes
	}

	resources = {
		category = planet_priests
		produces = {
			unity = 4
		}
		upkeep = {
			consumer_goods = 2
		}
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_add = 2
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				has_active_building = building_league_offices
			}
		}
		planet_amenities_add = 1
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_country_modifier = {
		potential = {
			exists = owner
			owner = { has_valid_civic = civic_efficient_bureaucracy }
		}
		country_edict_fund_add = 2
		mult = value:job_total_output_modifier|JOB|priest|RESOURCE|unity|
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_councilor = { COUNCILOR = "councilor_dimensional_worship_corporate" } }
		}
		trade_value_add = @councilor_dimensional_worship_priest_trade_value
		mult = value:scripted_modifier_councilor_level_mult|MODIFIER|pop_job_trade_mult|TYPE|councilor_dimensional_worship_corporate|
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				exists = owner
				owner = {
					has_tradition = tr_modularity_4
				}
			}
		}
		planet_jobs_worker_produces_mult = 0.02
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_modifier|JOB|priest|RESOURCE|unity|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			factor = 0.1
			has_citizenship_rights = no
			# NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 2
			exists = owner
			owner = { has_civic = civic_exalted_priesthood }
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 2
			has_job = priest
		}
		modifier = {
			factor = 1.5
			has_ethic = ethic_spiritualist
		}
		modifier = {
			factor = 0.5
			has_ethic = ethic_materialist
		}
		modifier = {
			factor = 0.1
			is_enslaved = yes
			has_slavery_type = { type = slavery_indentured }
		}
	}

	inline_script = "jobs/automodding_priority_unity"
}

death_priest = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_sacrificial_temple_1
	clothes_texture_index = 3
	icon = death_priest

	possible_pre_triggers = {
		has_owner = yes
		is_sapient = yes
		is_being_purged = no
		is_being_assimilated = no
	}

	possible_precalc = can_fill_specialist_job
	possible = { complex_specialist_job_check_trigger = yes }

	resources = {
		category = planet_priests
		produces = {
			unity = 3
			society_research = 1
		}
		produces = {
			trigger = {
				exists = owner
				owner = { has_sacrificial_edict = yes }
			}
			unity = 3
		}
		upkeep = {
			consumer_goods = 2
		}
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_add = 2
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				has_active_building = building_league_offices
			}
		}
		planet_amenities_add = 1
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_country_modifier = {
		potential = {
			exists = owner
			owner = { has_valid_civic = civic_efficient_bureaucracy }
		}
		country_edict_fund_add = 2
		mult = value:job_total_output_modifier|JOB|death_priest|RESOURCE|unity|
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_councilor = { COUNCILOR = "councilor_dimensional_worship_corporate" } }
		}
		trade_value_add = @councilor_dimensional_worship_priest_trade_value
		mult = value:scripted_modifier_councilor_level_mult|MODIFIER|pop_job_trade_mult|TYPE|councilor_dimensional_worship_corporate|
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				exists = owner
				owner = {
					has_tradition = tr_modularity_4
				}
			}
		}
		planet_jobs_worker_produces_mult = 0.02
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_multiple_resources_modifier|JOB|death_priest|RESOURCE1|unity|WEIGHT1|0.75|RESOURCE2|society_research|WEIGHT2|0.25|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 2
			exists = owner
			owner = { has_civic = civic_exalted_priesthood }
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 1.5
			has_job = death_priest
		}
		modifier = {
			factor = 1.5
			has_ethic = ethic_spiritualist
		}
		modifier = {
			factor = 0.5
			has_ethic = ethic_materialist
		}
		modifier = {
			factor = 0.1
			is_enslaved = yes
			has_slavery_type = { type = slavery_indentured }
		}
	}

	inline_script = "jobs/automodding_priority_unity"
}

enforcer = {
	category = specialist
	condition_string = BATTLE_THRALL_JOB_TRIGGER
	building_icon = building_precinct_house
	clothes_texture_index = 5

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible = {
		battle_thrall_job_check_trigger = yes
	}

	resources = {
		category = planet_enforcers
		produces = {
			trigger = {
				exists = owner
				owner = { has_active_tradition = tr_domination_judgment_corps }
			}
			unity = 1
		}
		upkeep = {
			trigger = {
				exists = planet
				planet = { has_modifier = anticrime_campaign }
			}
			energy = 2
		}
	}

	pop_modifier = {
	 	pop_defense_armies_add = 2
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				exists = ruler
				ruler = {
					has_trait = leader_trait_legendary_harsh_ruler
				}
			}
		}
		pop_happiness = -0.025
	}

	planet_modifier = {
		planet_crime_add = -25
		planet_stability_add = 1
	}

	triggered_planet_modifier = {
		potential = {
			exists = planet
			planet = { has_modifier = anticrime_campaign }
		}
		modifier = {
			planet_crime_add = -10
		}
	}

	triggered_planet_modifier = {
		potential = {
			has_trait = trait_cyborg_integrated_weaponry
		}
		modifier = {
			planet_crime_add = -5
		}
	}

	triggered_planet_modifier = {
		potential = {
			has_trait = trait_robot_integrated_weaponry
		}
		modifier = {
			planet_crime_no_happiness_add = -5
		}
	}

	# Cyber Dictatorial Individualist
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				is_cyber_dictatorial = yes
				has_country_flag = cyber_individualist
			}
		}
		planet_cyborg_jobs_produces_mult = 0.025
	}

	# Cyber Oligarchic Physical / Virtual
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				is_oligarchic_authority = yes
				OR = {
					has_country_flag = synth_physical
					has_country_flag = synth_virtual
				}

			}
		}
		planet_jobs_ruler_produces_mult = 0.10
	}

	weight = {
		weight = @specialist_job_weight

		modifier = {
			mult = value:job_weights_modifier|JOB|enforcer|RESOURCE|unity|FACTOR|0.25|
			owner = { has_active_tradition = tr_domination_judgment_corps }
		}

		modifier = {
			factor = 10
			has_job = enforcer
		}
		modifier = {
			factor = 10
			planet = { planet_crime > 15}
			#NOT = { has_job = enforcer }
		}
		modifier = {
			factor = 0.01
			planet = { planet_crime < 10 }
			NOT = { has_job = enforcer }
		}

		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 2
			has_trait = trait_resilient
		}
		modifier = {
			factor = 2
			has_trait = trait_very_strong
		}
		modifier = {
			factor = 1.5
			has_trait = trait_strong
		}
		modifier = {
			factor = 10
			is_enslaved = yes
			has_slavery_type = { type = slavery_military }
		}
		modifier = {
			factor = 0.50
			has_trait = trait_weak
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 1.1
			has_trait = trait_cybernetic
		}
		modifier = {
			factor = 2
			has_trait = trait_presapient_earthbound
		}
		modifier = {
			factor = 1.1
			has_trait = trait_limited_regeneration
		}
		modifier = {
			factor = 0.8
			is_enslaved = yes
			has_slavery_type = { type = slavery_indentured }
		}
		modifier = {
			factor = 2
			has_trait = trait_lithoid
		}
	}
}

telepath = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_psi_corps
	clothes_texture_index = 5

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job
	possible = {
		OR = {
			has_trait = trait_latent_psionic
			has_trait = trait_psionic
		}
	}

	resources = {
		category = planet_telepaths
		produces = {
			unity = 9
		}
		produces = {
			trigger = {
				exists = owner
				owner = { has_active_tradition = tr_domination_judgment_corps }
			}
			unity = 1
		}

		produces = {
			trigger = {
				exists = owner
				owner = { has_country_flag = whisperers_covenant_confirmed }
			}
			physics_research = 3
			engineering_research = 3
			society_research = 3
		}
		produces = {
			trigger = {
				exists = owner
				owner = { has_country_flag = whisperers_covenant_rank_1 }
			}
			physics_research = 3
			engineering_research = 3
			society_research = 3
		}
		upkeep = {
			energy = 1
		}
		upkeep = {
			trigger = {
				exists = planet
				planet = { has_modifier = anticrime_campaign }
			}
			energy = 2
		}
	}

	planet_modifier = {
		planet_crime_add = -10
		planet_psionic_jobs_produces_mult = 0.05
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				exists = ruler
				ruler = {
					has_trait = leader_trait_legendary_harsh_ruler
				}
			}
		}
		pop_happiness = -0.025
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_country_flag = instrument_covenant_confirmed }
		}
		planet_amenities_add = 7
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_country_flag = instrument_covenant_rank_1 }
		}
		planet_amenities_add = 8
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_tradition = tr_psionics_breach_shroud }
		}
		modifier = {
			planet_psionic_jobs_produces_mult = 0.05
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = planet
			planet = { has_modifier = anticrime_campaign }
		}
		modifier = {
			planet_crime_add = -10
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_edict = thought_enforcement }
		}
		modifier = {
			planet_crime_add = -30
		}
	}

	triggered_planet_modifier = {
		potential = {
			has_councilor = { COUNCILOR = "councilor_psionic_sovereign" }
		}
		planet_psionic_jobs_produces_mult = 0.01
		mult = value:councilor_level|TYPE|councilor_psionic_sovereign|
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_country_flag = composer_covenant_confirmed }
		}
		modifier = {
			pop_growth_speed = 0.02
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_country_flag = composer_covenant_rank_1 }
		}
		modifier = {
			pop_growth_speed = 0.03
		}
	}

	triggered_country_modifier = {
		potential = {
			exists = owner
			owner = { has_country_flag = eater_covenant_confirmed }
		}
		country_naval_cap_add = 5
	}

	triggered_country_modifier = {
		potential = {
			exists = owner
			owner = { has_country_flag = eater_covenant_rank_1 }
		}
		country_naval_cap_add = 7
	}

	weight = {
		weight = @specialist_job_weight
		mult = 2
		mult = value:job_weights_modifier|JOB|telepath|RESOURCE|unity|
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
		}
		modifier = {
			factor = 2
			has_trait = trait_resilient
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 1.5
			has_job = telepath
		}
		modifier = {
			factor = 0.1
			is_enslaved = yes
			has_slavery_type = { type = slavery_indentured }
		}
	}

	inline_script = "jobs/automodding_priority_unity"
}

entertainer = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_holo_theatres
	clothes_texture_index = 3

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible = {
		entertainer_job_check_trigger = yes
	}

	resources = {
		category = planet_entertainers
		produces = {
			unity = 1
		}
		upkeep = {
			consumer_goods = 1
		}
	}
	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_add = 10
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {
		potential = {
			has_councilor = { COUNCILOR = "councilor_corporate_hedonism" }
		}

		trade_value_add = @councilor_corporate_hedonism_entertainer_trade_value
		mult = value:scripted_modifier_councilor_level_mult|MODIFIER|pop_job_trade_mult|TYPE|councilor_corporate_hedonism|
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				is_pleasure_seeker = yes
				is_individual_machine = no
			}
		}
		modifier = {
			pop_growth_speed = 0.01
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				is_pleasure_seeker = yes
				OR = {
					is_individual_machine = yes
					is_synthetic_empire = yes
				}
			}
		}
		modifier = {
			planet_pop_assembly_mult = 0.01
		}
	}

	weight = {
		weight = @high_prio_specialist_job_weight
		mult = value:job_weights_modifier|JOB|entertainer|RESOURCE|unity|FACTOR|0.25|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 3
			has_trait = trait_robot_domestic_protocols
			OR = {
				is_non_sapient_robot = yes
				is_shackled_robot = yes
			}
		}
		modifier = {
			factor = 1.5
			has_job = entertainer
		}
		modifier = {
			factor = 0.1
			is_domestic_servant = yes
		}
		modifier = {
			factor = 0.1
			NOT = { has_job = entertainer }
			exists = planet
			planet = {
				free_amenities > 5
			}
		}
		modifier = {
			factor = 2
			#NOT = { has_job = entertainer }
			exists = planet
			planet = {
				free_amenities < 2
				has_available_jobs = entertainer
			}
		}
		modifier = {
			add = 500
			exists = planet
			planet = {
				has_modifier = artistic_boom
			}
		}
	}

	inline_script = "jobs/automodding_priority_amenities"
}

duelist = {
	category = specialist
	condition_string = BATTLE_THRALL_JOB_TRIGGER
	building_icon = building_holo_theatres
	clothes_texture_index = 3

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible = {
		battle_thrall_job_check_trigger = yes
	}

	resources = {
		category = planet_entertainers
		produces = {
			unity = 2
		}
		upkeep = {
			alloys = 1
		}
	}

	triggered_planet_modifier = {
		potential = {
			has_councilor = { COUNCILOR = "councilor_warrior_culture" }
		}

		planet_amenities_add = 1
		mult = value:scripted_modifier_councilor_level_mult|MODIFIER|pop_job_amenities_mult|TYPE|councilor_warrior_culture|
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_add = 10
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_country_modifier = {
		potential = {
			has_councilor = { COUNCILOR = "councilor_warrior_culture" }
		}

		country_naval_cap_add = 0.2
		mult = value:councilor_level|TYPE|councilor_warrior_culture|
	}

	country_modifier = {
		country_naval_cap_add = 2
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_modifier|JOB|duelist|RESOURCE|unity|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 10
			is_enslaved = yes
			has_slavery_type = { type = slavery_military }
		}
		modifier = {
			factor = 1.5
			has_job = duelist
		}
		modifier = {
			factor = 0.5
			NOT = { has_job = duelist }
			exists = planet
			planet = {
				free_amenities > 5
			}
		}
	}

	inline_script = "jobs/automodding_priority_amenities"
}

culture_worker = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_autochthon_monument
	clothes_texture_index = 3

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job
	possible = {
		complex_specialist_job_check_trigger = yes
	}

	resources = {
		category = planet_culture_workers
		produces = {
			unity = 4
		}
		upkeep = {
			consumer_goods = 3
		}
	}

	inline_script = "jobs/culture_worker_outputs"

	inline_script = {
		script = "jobs/galactic_curator_council_output"
		CATEGORY = planet_culture_workers
	}

	planet_modifier = {
		pop_government_ethic_attraction = 0.10
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_modifier|JOB|culture_worker|RESOURCE|unity|
		# We deliberately don't weight the ethics-based modifiers
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 1.5
			has_job = culture_worker
		}
	}

	inline_script = "jobs/automodding_priority_unity"
}

bureaucrat = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_capital
	clothes_texture_index = 3

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job
	possible = {
		complex_specialist_job_check_trigger = yes
	}

	resources = {
		category = planet_administrators
		produces = {
			unity = 4
		}
		upkeep = {
			consumer_goods = 2
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_valid_civic = civic_byzantine_bureaucracy }
		}
		modifier = {
			planet_stability_add = 1
		}
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				has_active_building = building_league_offices
			}
		}
		planet_amenities_add = 1
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_country_modifier = {
		potential = {
			exists = owner
			owner = { has_valid_civic = civic_efficient_bureaucracy }
		}
		country_edict_fund_add = 2
		mult = value:job_total_output_modifier|JOB|bureaucrat|RESOURCE|unity|
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				exists = owner
				owner = {
					has_tradition = tr_modularity_4
				}
			}
		}
		planet_jobs_worker_produces_mult = 0.02
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_modifier|JOB|bureaucrat|RESOURCE|unity|
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 1.5
			has_job = bureaucrat
		}
	}

	inline_script = "jobs/automodding_priority_unity"
}

unifier = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_capital
	clothes_texture_index = 3
	icon = overlord_propagandist

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job
	possible = {
		complex_specialist_job_check_trigger = yes
	}

	resources = {
		category = planet_administrators
		produces = {
			unity = 4
		}
		upkeep = {
			consumer_goods = 1
		}
		upkeep = {
			trigger = {
				is_lithoid_empire = no
			}
			food = 2
		}
		upkeep = {
			trigger = {
				is_lithoid_empire = yes
			}
			minerals = 2
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_valid_civic = civic_byzantine_bureaucracy }
		}
		modifier = {
			planet_stability_add = 1
		}
	}

	triggered_country_modifier = {
		potential = {
			exists = owner
			owner = { has_valid_civic = civic_efficient_bureaucracy }
		}
		country_edict_fund_add = 2
		mult = value:job_total_output_modifier|JOB|unifier|RESOURCE|unity|
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_add = 3
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				exists = owner
				owner = {
					has_tradition = tr_modularity_4
				}
			}
		}
		planet_jobs_worker_produces_mult = 0.02
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_modifier|JOB|unifier|RESOURCE|unity|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 1.5
			has_job = unifier
		}
		modifier = {
			factor = 2
			exists = planet
			planet = {
				any_owned_pop = {
					NOT = { has_job = unifier }
				}
			}
		}
	}

	inline_script = "jobs/automodding_priority_unity"
}

chemist = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_chemical_plant
	clothes_texture_index = 3

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job

	resources = {
		category = planet_chemists
		produces = {
			trigger = {
				exists = owner
				owner = {
					is_catalytic_empire = no
				}
			}
			volatile_motes = 2
		}
		produces = {
			trigger = {
				exists = owner
				owner = {
					is_catalytic_empire = yes
				}
			}
			volatile_motes = 2.5
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_catalytic_empire = no
				}
			}
			minerals = 10
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_catalytic_empire = yes
				}
			}
			food = 15
		}
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_modifier|JOB|chemist|RESOURCE|volatile_motes|
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 7
			has_job = chemist
		}
	}
}

translucer = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_crystal_plant
	clothes_texture_index = 3

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job

	resources = {
		category = planet_translucers
		produces = {
			trigger = {
				exists = owner
				owner = {
					is_catalytic_empire = no
				}
			}
			rare_crystals = 2
		}
		produces = {
			trigger = {
				exists = owner
				owner = {
					is_catalytic_empire = yes
				}
			}
			rare_crystals = 2.5
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_catalytic_empire = no
				}
			}
			minerals = 10
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_catalytic_empire = yes
				}
			}
			food = 15
		}
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_modifier|JOB|translucer|RESOURCE|rare_crystals|
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 7
			has_job = translucer
		}
		modifier = {
			factor = 1.2
			is_enslaved = yes
			has_slavery_type = { type = slavery_indentured }
		}
	}
}

gas_refiner = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_refinery
	clothes_texture_index = 3

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job

	resources = {
		category = planet_refiners
		produces = {
			trigger = {
				exists = owner
				owner = {
					is_catalytic_empire = no
				}
			}
			exotic_gases = 2
		}
		produces = {
			trigger = {
				exists = owner
				owner = {
					is_catalytic_empire = yes
				}
			}
			exotic_gases = 2.5
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_catalytic_empire = no
				}
			}
			minerals = 10
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_catalytic_empire = yes
				}
			}
			food = 15
		}
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_modifier|JOB|gas_refiner|RESOURCE|exotic_gases|
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 7
			has_job = gas_refiner
		}
		modifier = {
			factor = 1.2
			is_enslaved = yes
			has_slavery_type = { type = slavery_indentured }
		}
	}
}

roboticist = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_robot_assembly_plant
	clothes_texture_index = 3

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job

	triggered_planet_modifier = {
		potential = {
		}
		planet_pop_assembly_add = 2
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				exists = ruler
				ruler = {
					has_trait = leader_trait_legendary_great_inventor
				}
			}
		}
		planet_amenities_add = 1
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				exists = ruler
				ruler = {
					has_trait = leader_trait_legendary_great_inventor_2
				}
			}
		}
		planet_amenities_add = 2
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				exists = ruler
				ruler = {
					has_trait = leader_trait_legendary_great_inventor_3
				}
			}
		}
		planet_amenities_add = 3
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_tradition = tr_modularity_2
			}
		}
		planet_pop_assembly_add = 1 #If this changes, update tr_modularity_2_modifier_desc
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_active_tradition = tr_synthetics_prefabricated_components
			}
		}
		planet_amenities_add = 2
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		# Actual value determined in the script value below
		branch_office_value_mult = 1
		mult = value:roboticist_branch_office_value_mult
	}

	resources = {
		category = planet_pop_assemblers
		upkeep = {
			alloys = 2
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					has_country_flag = synth_unscheduled_updates
				}
			}
			alloys = 1
		}
	}

	weight = {
		weight = 500
		modifier = {
			factor = 10
			owner = { is_synthetic_empire = yes }
		}
	}
}

healthcare = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_clinic
	clothes_texture_index = 3

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job

	planet_modifier = {
		pop_growth_speed = 0.05
		planet_pop_assembly_organic_mult = 0.05
		pop_environment_tolerance = 0.025
	}

	resources = {
		category = planet_doctors
		upkeep = {
			consumer_goods = 1
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				NOT = { has_valid_civic = civic_dystopian_society }
			}
		}
		planet_amenities_add = 5
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_valid_civic = civic_private_healthcare_corporate }
		}
		planet_amenities_add = 2
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_valid_civic = civic_private_healthcare_corporate }
		}
		trade_value_add = 4
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_trade_mult|
	}
	triggered_planet_modifier = {
		potential = {
			exists = planet
			planet = { has_planet_flag = has_private_clinics }
		}
		planet_amenities_add = 1
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}
	triggered_planet_modifier = {
		potential = {
			exists = planet
			planet = { has_planet_flag = has_private_clinics }
		}
		trade_value_add = 2
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_trade_mult|
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_modifier = revolutionary_medigel_modifier }
		}
		pop_growth_speed = 0.025
		planet_pop_assembly_organic_mult = 0.025
		pop_environment_tolerance = 0.0125
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_modifier = revolutionary_medigel_modifier
				has_valid_civic = civic_private_healthcare_corporate
			}
		}
		planet_amenities_add = 1
		trade_value_add = 2
	}


	weight = {
		weight = @high_prio_specialist_job_weight
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 1.5
			has_job = healthcare
		}
		modifier = {
			factor = 2
			owner = { has_valid_civic = civic_private_healthcare_corporate }
		}
		modifier = {
			factor = 1.5
			planet = {
				has_branch_office = yes
				branch_office_owner = {
					has_valid_civic = civic_private_healthcare_corporate
				}
			}
		}
		modifier = {
			factor = 0.5
			is_enslaved = yes
			has_slavery_type = { type = slavery_indentured }
		}
		modifier = {
			factor = 10
			#NOT = { has_job = healthcare }
			planet = {
				free_amenities < 0
				has_available_jobs = healthcare
			}
		}
	}

	inline_script = "jobs/automodding_priority_amenities"
}

trader = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_galactic_stock_exchange
	clothes_texture_index = 3
	icon = overlord_trader

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job

	resources = {
		category = planet_traders
		upkeep = {
			consumer_goods = 1
		}
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		trade_value_add = 8
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_trade_mult|
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_tradition = tr_mercantile_commercial_enterprise }
		}
		planet_amenities_add = 2
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {
		potential = {
			has_councilor = { COUNCILOR = "councilor_merchant_guilds" }
		}

		trade_value_add = 0.4
		mult = value:scripted_modifier_councilor_level_mult|MODIFIER|pop_job_trade_mult|TYPE|councilor_merchant_guilds|
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_trade_mult|
		modifier = {
			factor = 5
			has_job = trader
		}
		# crisis purge
		modifier = {
			factor = 0.01
			exists = planet
			exists = planet.controller
			planet.controller = {
				OR = {
					is_country_type = swarm
					is_country_type = ai_empire
				}
			}
			OR = { # contingency won't purge itself
				NOT = { exists = event_target:custodian_bot }
				AND = {
					exists = event_target:custodian_bot
					NOT = { species = { is_same_value = event_target:custodian_bot } }
				}
			}
		}
	}

	inline_script = "jobs/automodding_priority_trade"
}

numistic_priest = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_nuumismatic_shrine
	clothes_texture_index = 3

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job

	resources = {
		category = planet_priests
		produces = {
			unity = 2
		}
		upkeep = {
			consumer_goods = 2
		}
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		trade_value_add = 6
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_trade_mult|
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_add = 2
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				has_active_building = building_league_offices
			}
		}
		planet_amenities_add = 1
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_country_modifier = {
		potential = {
			exists = owner
			owner = { has_valid_civic = civic_efficient_bureaucracy }
		}
		country_edict_fund_add = 1
		mult = value:job_total_output_modifier|JOB|priest|RESOURCE|unity|
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_councilor = { COUNCILOR = "councilor_dimensional_worship_corporate" } }
		}
		trade_value_add = @councilor_dimensional_worship_priest_trade_value
		mult = value:scripted_modifier_councilor_level_mult|MODIFIER|pop_job_trade_mult|TYPE|councilor_dimensional_worship_corporate|
	}

	# Numistic Priests count as Traders for other modifiers as well!
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_tradition = tr_mercantile_commercial_enterprise }
		}
		planet_amenities_add = 2
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_trade_mult|
	}

	triggered_planet_modifier = {
		potential = {
			has_councilor = { COUNCILOR = "councilor_merchant_guilds" }
		}

		trade_value_add = 0.4
		mult = value:scripted_modifier_councilor_level_mult|MODIFIER|pop_job_trade_mult|TYPE|councilor_merchant_guilds|
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				exists = owner
				owner = {
					has_tradition = tr_modularity_4
				}
			}
		}
		planet_jobs_worker_produces_mult = 0.02
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_modifier|JOB|priest|RESOURCE|unity|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_trade_mult|
		modifier = {
			factor = 5
			has_job = numistic_priest
		}
		# crisis purge
		modifier = {
			factor = 0.01
			exists = planet
			exists = planet.controller
			planet.controller = {
				OR = {
					is_country_type = swarm
					is_country_type = ai_empire
				}
			}
			OR = { # contingency won't purge itself
				NOT = { exists = event_target:custodian_bot }
				AND = {
					exists = event_target:custodian_bot
					NOT = { species = { is_same_value = event_target:custodian_bot } }
				}
			}
		}
	}

	inline_script = "jobs/automodding_priority_trade"
}

preacher = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_temple_of_prosperity
	clothes_texture_index = 3
	icon = numistic_priest

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job
	possible = {
		complex_specialist_job_check_trigger = yes
	}

	resources = {
		category = planet_priests
		produces = {
			unity = 3
		}
		upkeep = {
			consumer_goods = 2
		}
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		# Actual trade value determined in the script value below
		trade_value_add = 1
		mult = value:preacher_trade_value
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_add = 2
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				has_active_building = building_league_offices
			}
		}
		planet_amenities_add = 1
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_country_modifier = {
		potential = {
			exists = owner
			owner = { has_valid_civic = civic_efficient_bureaucracy }
		}
		country_edict_fund_add = 2
		mult = value:job_total_output_modifier|JOB|preacher|RESOURCE|unity|
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_councilor = { COUNCILOR = "councilor_dimensional_worship_corporate" } }
		}
		trade_value_add = @councilor_dimensional_worship_priest_trade_value
		mult = value:scripted_modifier_councilor_level_mult|MODIFIER|pop_job_trade_mult|TYPE|councilor_dimensional_worship_corporate|
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				exists = owner
				owner = {
					has_tradition = tr_modularity_4
				}
			}
		}
		planet_jobs_worker_produces_mult = 0.02
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_modifier|JOB|preacher|RESOURCE|unity|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_trade_mult|
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 2
			exists = owner
			owner = { has_civic = civic_exalted_priesthood }
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 1.5
			has_job = preacher
		}
		modifier = {
			factor = 0.1
			is_enslaved = yes
			has_slavery_type = { type = slavery_indentured }
		}
	}

	inline_script = "jobs/automodding_priority_unity"
}

manager = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_capital
	clothes_texture_index = 3

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		trade_value_add = 2
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_trade_mult|
	}

	resources = {
		category = planet_managers
		produces = {
			unity = 4
		}
		upkeep = {
			consumer_goods = 2
		}
	}

	triggered_country_modifier = {
		potential = {
			exists = owner
			owner = { has_valid_civic = civic_efficient_bureaucracy }
		}
		country_edict_fund_add = 2
		mult = value:job_total_output_modifier|JOB|manager|RESOURCE|unity|
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				has_active_building = building_league_offices
			}
		}
		planet_amenities_add = 1
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				exists = owner
				owner = {
					has_tradition = tr_modularity_4
				}
			}
		}
		planet_jobs_worker_produces_mult = 0.02
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_modifier|JOB|manager|RESOURCE|unity|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_trade_mult|
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 1.5
			has_job = manager
		}
		modifier = {
			factor = 0.1
			is_enslaved = yes
			has_slavery_type = { type = slavery_indentured }
		}
	}

	inline_script = "jobs/automodding_priority_unity"
}

steward = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_capital
	clothes_texture_index = 3
	icon = manager

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		trade_value_add = 1
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_trade_mult|
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_add = 1
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		trade_value_add = 0.25
		mult = value:scripted_modifier_councilor_level_mult|MODIFIER|pop_job_trade_mult|TYPE|councilor_worker_coop|
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_add = 0.25
		mult = value:scripted_modifier_councilor_level_mult|MODIFIER|pop_job_amenities_mult|TYPE|councilor_worker_coop|
	}

	resources = {
		category = planet_administrators
		produces = {
			unity = 4
		}
		upkeep = {
			consumer_goods = 2
		}
	}

	triggered_country_modifier = {
		potential = {
			exists = owner
			owner = { has_valid_civic = civic_efficient_bureaucracy }
		}
		country_edict_fund_add = 2
		mult = value:job_total_output_modifier|JOB|manager|RESOURCE|unity|
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				has_active_building = building_league_offices
			}
		}
		planet_amenities_add = 1
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				exists = owner
				owner = {
					has_tradition = tr_modularity_4
				}
			}
		}
		planet_jobs_worker_produces_mult = 0.02
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_modifier|JOB|manager|RESOURCE|unity|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_trade_mult|
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 1.5
			has_job = manager
		}
		modifier = {
			factor = 0.1
			is_enslaved = yes
			has_slavery_type = { type = slavery_indentured }
		}
	}

	inline_script = "jobs/automodding_priority_unity"
}

necromancer = {
	category = specialist
	condition_string = BATTLE_THRALL_JOB_TRIGGER
	building_icon = building_dread_encampment
	clothes_texture_index = 3

	country_modifier = {
		country_naval_cap_add = 2
	}

	triggered_country_modifier = { #intentionally left in
		potential = {
			exists = planet
			planet = {
				exists = owner
				owner = { has_technology = "tech_ground_defense_planning" }
			}
		}
		modifier = {
			country_naval_cap_add = 2
		}
	}

	pop_modifier = {
		pop_defense_armies_add = 3
	}

	triggered_pop_modifier = {
		potential = {
			exists = planet
			planet = {
				exists = leader
				leader = {
					leader_class = commander
				}
			}
		}
		modifier = {
			pop_defense_armies_add = 2
		}
	}

	resources = {
		category = planet_researchers
		produces = {
			physics_research = 6
			society_research = 6
		}
		produces = {
			trigger = {
				exists = planet
				planet = {
					has_councilor = { COUNCILOR = "councilor_reanimated_armies" }
				}
			}
			unity = @councilor_reanimated_armies_necromancer_unity
			mult = value:councilor_level|TYPE|councilor_reanimated_armies|
		}
		upkeep = {
			consumer_goods = 2
		}
	}

	triggered_country_modifier = {
		modifier = {
			country_naval_cap_add = 1
		}
		mult = planet.modifier:job_researcher_naval_cap_add
	}

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible = {
		battle_thrall_job_check_trigger = yes
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_multiple_resources_modifier|JOB|necromancer|RESOURCE1|physics_research|WEIGHT1|0.5|RESOURCE2|society_research|WEIGHT2|0.5|
		modifier = {
			factor = 10
			exists = planet
			planet = {
				exists = leader
				leader = {
					leader_class = commander
				}
			}
		}
		modifier = {
			factor = 2
			has_trait = trait_resilient
		}
		modifier = {
			factor = 2
			has_trait = trait_very_strong
		}
		modifier = {
			factor = 1.5
			has_trait = trait_strong
		}
		modifier = {
			factor = 0.5
			has_trait = trait_weak
		}
		modifier = {
			factor = 1.1
			has_trait = trait_cybernetic
		}
		modifier = {
			factor = 2
			has_trait = trait_presapient_earthbound
		}
		modifier = {
			factor = 1.1
			has_trait = trait_limited_regeneration
		}
		modifier = {
			factor = 0
			species = { can_be_soldier = no }
		}
		modifier = {
			factor = 2
			has_trait = trait_lithoid
		}
	}

	inline_script = "jobs/automodding_priority_research"
}

bluelotus_technician = {
	category = specialist
	is_capped_by_modifier = yes
	condition_string = WORKER_JOB_TRIGGER
	building_icon = building_illicit_research_labs
	icon = foundry

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_worker_job

	resources = {
		category = planet_metallurgists
		produces = {
			alloys = 4
		}

		upkeep = {
			trigger = {
				has_food_upkeep = yes
				is_phototrophic = no
			}
			food = @living_standard_food_normal
		}
		upkeep = {
			trigger = {
				has_phototrophic_energy_upkeep = yes
			}
			energy = @living_standard_phototrophic_normal
		}
		upkeep = {
			trigger = {
				has_food_upkeep = yes
				is_phototrophic = yes
			}
			food = @living_standard_phototrophic_normal
		}
		upkeep = {
			trigger = {
				has_mineral_upkeep = yes
				is_phototrophic = no
			}
			minerals = @living_standard_food_normal
		}
		upkeep = {
			trigger = {
				has_mineral_upkeep = yes
				is_phototrophic = yes
			}
			minerals = @living_standard_phototrophic_normal
		}
		upkeep = {
			trigger = {
				is_robotic_or_voidspawn_species = yes
			}
			energy = @living_standard_energy_normal
		}
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_modifier|JOB|bluelotus_technician|RESOURCE|alloys|
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 5
			has_job = bluelotus_technician
		}
		modifier = {
			factor = 1.2
			is_enslaved = yes
			has_slavery_type = { type = slavery_indentured }
		}
	}
}

death_chronicler = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_galactic_memorial_1
	clothes_texture_index = 3

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job
	possible = { complex_specialist_job_check_trigger = yes }

	resources = {
		category = planet_culture_workers
		produces = {
			unity = 4
		}
		upkeep = {
			consumer_goods = 3
		}
	}

	inline_script = "jobs/culture_worker_outputs"

	inline_script = {
		script = "jobs/galactic_curator_council_output"
		CATEGORY = planet_culture_workers
	}

	planet_modifier = {
		planet_stability_add = 2.5
	}

	weight = {
		weight = @specialist_job_weight
		mult = 2
		mult = value:job_weights_modifier|JOB|death_chronicler|RESOURCE|unity|
		# We deliberately don't weight the ethics-based modifiers
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 1.5
			has_job = death_chronicler
		}
	}

	inline_script = "jobs/automodding_priority_unity"
}

necro_apprentice = {
	category = specialist
	exempt_from_ai_amenity_prioritization = yes
	condition_string = NECRO_APPRENTICE_JOB_TRIGGER
	building_icon = building_chamber_of_elevation_1
	clothes_texture_index = 3
	icon = apprentice

	desc = { #Note: planet-scope
		trigger = {
			OR = {
				NOT = { exists = owner }
				owner = { is_hive_empire = no }
			}
		}
		text = job_necro_apprentice_desc
	}
	desc = {
		trigger = {
			exists = owner
			owner = { is_hive_empire = yes }
		}
		text = job_necro_apprentice_desc_hive
	}

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible = { #deliberately allows slaves!
		species = { species_can_be_necrophaged = yes }
		owner = {
			has_trait = trait_necrophage
			has_origin = origin_necrophage
		}
	}

	resources = {
		category = planet_necro_apprentices
		produces = {
			unity = 1.5
		}
		#Note: Hive Empires don't need to pay consumer goods, they pay double the food instead
		upkeep = {
			trigger = {
				exists = owner
				owner = { is_hive_empire = no }
			}
			consumer_goods = 1
		}
		upkeep = {
			trigger = {
				has_food_upkeep = yes
				is_phototrophic = no
			}
			food = @living_standard_food_normal
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = { is_hive_empire = yes }
				has_food_upkeep = yes
				is_phototrophic = no
			}
			food = @living_standard_food_normal
		}
		upkeep = {
			trigger = {
				has_phototrophic_energy_upkeep = yes
			}
			energy = @living_standard_phototrophic_normal
		}
		upkeep = {
			trigger = {
				has_food_upkeep = yes
				is_phototrophic = yes
			}
			food = @living_standard_phototrophic_normal
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = { is_hive_empire = yes }
				has_phototrophic_energy_upkeep = yes
			}
			energy = @living_standard_phototrophic_normal
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = { is_hive_empire = yes }
				has_food_upkeep = yes
				is_phototrophic = yes
			}
			food = @living_standard_phototrophic_normal
		}
		upkeep = {
			trigger = {
				has_mineral_upkeep = yes
				is_phototrophic = no
			}
			minerals = @living_standard_food_normal
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = { is_hive_empire = yes }
				has_mineral_upkeep = yes
				is_phototrophic = no
			}
			minerals = @living_standard_food_normal
		}
		upkeep = {
			trigger = {
				has_mineral_upkeep = yes
				is_phototrophic = yes
			}
			minerals = @living_standard_phototrophic_normal
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = { is_hive_empire = yes }
				has_mineral_upkeep = yes
				is_phototrophic = yes
			}
			minerals = @living_standard_phototrophic_normal
		}
		upkeep = {
			trigger = {
				is_robotic_or_voidspawn_species = yes
			}
			energy = @living_standard_energy_normal
		}
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_add = 5
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	weight = {
		weight = @ruler_job_weight #deliberate
		mult = value:job_weights_modifier|JOB|necro_apprentice|RESOURCE|unity|FACTOR|0.5|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			factor = 0.75
			is_enslaved = yes #willing apprentices first, please
		}
		modifier = {
			factor = 0.75
			pop_has_happiness = no
		}
		modifier = {
			factor = 0.1
			exists = owner
			owner = { is_ai = yes }
			exists = planet
			planet = {
				NOT = {
					any_owned_pop = {
						NOT = { is_same_value = root }
						NOT = { has_job = necro_apprentice }
						species = { species_can_be_necrophaged = yes }
					}
				}
			}
		}
	}

	inline_script = "jobs/automodding_priority_unity"
}

foundry = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_foundry_1
	clothes_texture_index = 3

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
	}

	possible_precalc = can_fill_specialist_job
	possible = {
		hidden_trigger = { exists = owner }
		owner = {
			is_gestalt = no
		}
	}

	resources = {
		category = planet_metallurgists
		produces = {
			alloys = 3
		}
		upkeep = {
			minerals = 6
		}
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_material_requisitorium
				}
			}
			alloys = @requisitorium_alloys_reduction
		}
		upkeep = {
			trigger = {
				planet = {
					has_planet_flag = has_material_requisitorium
				}
			}
			minerals = 2
		}
	}

	overlord_resources = {
		category = planet_requisitioned_alloys
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_material_requisitorium
				}
			}
			alloys = @requisitorium_alloys_overlord
		}
	}

	weight = {
		weight = @specialist_job_weight # Fairly important job
		mult = value:job_weights_modifier|JOB|foundry|RESOURCE|alloys|
		modifier = {
			factor = 2
			is_enslaved = yes
			can_take_servant_job = no
		}
		modifier = {
			factor = 5
			has_job = foundry
		}
		modifier = {
			factor = 5
			has_trait = trait_cyborg_creed_of_construction
		}
	}
}

catalytic_technician = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_foundry_1
	clothes_texture_index = 3

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
	}

	possible_precalc = can_fill_specialist_job
	possible = {
		hidden_trigger = { exists = owner }
		owner = {
			is_gestalt = no
		}
	}

	resources = {
		category = planet_metallurgists
		produces = {
			alloys = 3.75
		}

		upkeep = {
			food = 9
		}

		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_material_requisitorium
				}
			}
			alloys = @requisitorium_alloys_reduction
		}

		upkeep = {
			trigger = {
				planet = {
					has_planet_flag = has_material_requisitorium
				}
			}
			food = 3
		}
	}

	overlord_resources = {
		category = planet_requisitioned_alloys
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_material_requisitorium
				}
			}
			alloys = @requisitorium_alloys_overlord
		}
	}

	weight = {
		weight = @specialist_job_weight # Fairly important job
		mult = value:job_weights_modifier|JOB|catalytic_technician|RESOURCE|alloys|
		modifier = {
			factor = 2
			is_enslaved = yes
			can_take_servant_job = no
		}
		modifier = {
			factor = 5
			has_job = catalytic_technician
		}
		modifier = {
			factor = 5
			has_trait = trait_cyborg_creed_of_construction
		}
	}
}

artisan = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_factory_1
	clothes_texture_index = 3

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
	}

	possible_precalc = can_fill_specialist_job
	possible = {
		hidden_trigger = { exists = owner }
		owner = {
			is_gestalt = no
		}
	}

	resources = {
		category = planet_artisans
		produces = {
			consumer_goods = 6
		}
		upkeep = {
			minerals = 6
		}
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_produce_requisitorium
					exists = owner.overlord
					owner.overlord = { country_uses_consumer_goods = yes }
				}
			}
			consumer_goods = @requisitorium_consumer_goods_reduction
		}
		upkeep = {
			trigger = {
				planet = {
					has_planet_flag = has_produce_requisitorium
					exists = owner.overlord
					owner.overlord = { country_uses_consumer_goods = yes }
				}
			}
			minerals = 1
		}
	}

	overlord_resources = {
		category = planet_requisitioned_consumer_goods
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_produce_requisitorium
					exists = owner.overlord
					owner.overlord = { country_uses_consumer_goods = yes }
				}
			}
			consumer_goods = @requisitorium_consumer_goods_overlord
		}
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_modifier|JOB|artisan|RESOURCE|consumer_goods|
		modifier = {
			factor = 2
			is_enslaved = yes
			can_take_servant_job = no
		}
		modifier = {
			factor = 5
			has_job = artisan
		}

		# low income modifier
		modifier = {
			factor = 1.2
			exists = planet
			planet = {
				has_available_jobs = "artisan"
			}
			exists = owner
			owner = {
				is_ai = yes
				has_monthly_income = {
					resource = consumer_goods
					value < 5
				}
			}
		}
	}
}

artificer = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_factory_1
	clothes_texture_index = 3

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
	}

	possible_precalc = can_fill_specialist_job
	possible = {
		hidden_trigger = { exists = owner }
		owner = {
			is_gestalt = no
		}
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		trade_value_add = 2
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_trade_mult|
	}


	resources = {
		category = planet_artisans
		produces = {
			consumer_goods = 7
		}
		upkeep = {
			minerals = 6
		}
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_produce_requisitorium
					exists = owner.overlord
					owner.overlord = { country_uses_consumer_goods = yes }
				}
			}
			consumer_goods = @requisitorium_consumer_goods_reduction
		}
		upkeep = {
			trigger = {
				planet = {
					has_planet_flag = has_produce_requisitorium
					exists = owner.overlord
					owner.overlord = { country_uses_consumer_goods = yes }
				}
			}
			minerals = 1
		}
	}

	overlord_resources = {
		category = planet_requisitioned_consumer_goods
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_produce_requisitorium
					exists = owner.overlord
					owner.overlord = { country_uses_consumer_goods = yes }
				}
			}
			consumer_goods = @requisitorium_consumer_goods_overlord
		}
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_multiple_resources_modifier|JOB|artificer|RESOURCE1|consumer_goods|WEIGHT1|0.8|RESOURCE2|engineering_research|WEIGHT2|0.2|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_trade_mult|
		modifier = {
			factor = 2
			is_enslaved = yes
			can_take_servant_job = no
		}
		modifier = {
			factor = 5
			has_job = artificer
		}
	}

	inline_script = "jobs/automodding_priority_trade"
}

pearl_diver = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_food_processing_facility
	clothes_texture_index = 2

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job
	possible = {
		hidden_trigger = { exists = owner }
		owner = {
			is_gestalt = no
			is_anglers_empire = yes
		}
	}

	resources = {
		category = planet_artisans
		produces = {
			consumer_goods = 6
		}
		produces = {
			trigger = {
				has_councilor = { COUNCILOR = "councilor_anglers" }
			}

			consumer_goods = @councilor_anglers_pearl_diver_consumer_goods_bonus
			mult = value:councilor_level|TYPE|councilor_anglers|
		}
		produces = {
			trigger = {
				has_councilor = { COUNCILOR = "councilor_machine_anglers" }
			}

			consumer_goods = @councilor_machine_anglers_pearl_diver_consumer_goods_bonus
			mult = value:councilor_level|TYPE|councilor_machine_anglers|
		}
		produces = {
			trigger = {
				has_councilor = { COUNCILOR = "councilor_machine_anglers" }
			}

			consumer_goods = @councilor_machine_anglers_pearl_diver_consumer_goods_bonus
			mult = value:councilor_level|TYPE|councilor_machine_anglers|
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = { is_individual_machine = no }
			}
			food = 3
			minerals = 4
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = { is_individual_machine = yes }
			}
			energy = 1
			minerals = 4
		}

		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_produce_requisitorium
					exists = owner.overlord
					owner.overlord = { country_uses_consumer_goods = yes }
				}
			}
			consumer_goods = @requisitorium_consumer_goods_reduction
		}
		upkeep = {
			trigger = {
				planet = {
					has_planet_flag = has_produce_requisitorium
					exists = owner.overlord
					owner.overlord = { country_uses_consumer_goods = yes }
				}
			}
			minerals = 1
		}
	}

	triggered_planet_modifier = {
		potential = {
			has_councilor = { COUNCILOR = "councilor_corporate_anglers" }
		}

		trade_value_add = @councilor_corporate_anglers_pearl_diver_trade_value_bonus
		mult = value:scripted_modifier_councilor_level_mult|MODIFIER|pop_job_trade_mult|TYPE|councilor_corporate_anglers|
	}

	overlord_resources = {
		category = planet_requisitioned_consumer_goods
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_produce_requisitorium
					exists = owner.overlord
					owner.overlord = { country_uses_consumer_goods = yes }
				}
			}
			consumer_goods = @requisitorium_consumer_goods_overlord
		}
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		trade_value_add = 2
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_trade_mult|
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_valid_civic = civic_agrarian_idyll }
		}
		planet_amenities_add = 2
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	weight = {
		weight = @specialist_job_weight #deliberate
		mult = value:job_weights_modifier|JOB|pearl_diver|RESOURCE|consumer_goods|FACTOR|0.75|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_trade_mult|
		modifier = {
			factor = 2
			is_enslaved = yes
			has_slavery_type = { type = slavery_indentured }
		}
		modifier = {
			factor = 1.1
			owner = { has_valid_civic = civic_agrarian_idyll }
		}
		modifier = {
			factor = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
			owner = { has_valid_civic = civic_agrarian_idyll }
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 0.1
			NOT = { has_job = pearl_diver }
			exists = owner
			owner = {
				resource_income_compare = {
					resource = food
					value < 5
				}
			}
		}
		modifier = {
			factor = 5
			has_job = pearl_diver
		}
	}

	inline_script = "jobs/automodding_priority_trade"
}

reassigner = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_posthumous_employment_center
	clothes_texture_index = 3
	icon = necromancer

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job

	planet_modifier = {
		planet_pop_assembly_organic_add = 2
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_edict = sacrifice_bounty_zombie }
		}
		modifier = {
			planet_pop_assembly_organic_add = 1
		}
	}
	resources = {
		category = planet_jobs
		upkeep = {
			trigger = {
				is_lithoid = no
			}
			consumer_goods = 1
			food = 2
		}
		upkeep = {
			trigger = {
				is_lithoid = yes
			}
			consumer_goods = 1
			minerals = 2
		}
	}

	weight = {
		weight = 500
	}
}

bath_attendant = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_toxic_bath
	clothes_texture_index = 3

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
	}

	possible_precalc = can_fill_specialist_job
	possible = {
		hidden_trigger = { exists = owner }
		owner = {
			is_gestalt = no
		}
	}

	triggered_planet_modifier = {
		pop_growth_speed = 0.015
		pop_environment_tolerance = -0.0025
		pop_happiness = -0.0075
		mult = planet.value:toxic_attendant_growth
	}


	resources = {
		category = planet_bath_attendants
		upkeep = {
			consumer_goods = 1
		}
		produces = {
			trigger = {
				exists = planet
				planet = {
					OR = {
						has_councilor = { COUNCILOR = councilor_toxic_baths }
						has_councilor = { COUNCILOR = councilor_corporate_toxic_baths }
					}
				}
			}

			unity = @councilor_toxic_baths_attendant_unity
			mult = value:councilor_level_combo|COUNCILOR_1|councilor_toxic_baths|COUNCILOR_2|councilor_corporate_toxic_baths|
		}
	}
	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_multiple_resources_modifier|JOB|artificer|RESOURCE1|consumer_goods|WEIGHT1|0.8|RESOURCE2|engineering_research|WEIGHT2|0.2|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_trade_mult|
		modifier = {
			factor = 2
			is_enslaved = yes
			can_take_servant_job = no
		}
		modifier = {
			factor = 5
			has_job = bath_attendant
		}
	}

	inline_script = "jobs/automodding_priority_trade"
}

bath_attendant_individual_machine = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_toxic_bath
	clothes_texture_index = 3

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
	}

	possible_precalc = can_fill_specialist_job
	possible = {
		hidden_trigger = { exists = owner }
		owner = {
			is_gestalt = no
		}
	}

	triggered_planet_modifier = {
		planet_pop_assembly_mult = 0.015
		pop_amenities_usage_mult = 0.01
		mult = planet.value:toxic_attendant_growth
	}


	resources = {
		category = planet_bath_attendants_individual_machine
		upkeep = {
			consumer_goods = 1
		}
		produces = {
			trigger = {
				exists = planet
				planet = {
					OR = {
						has_councilor = { COUNCILOR = councilor_toxic_baths_individual_machine }
						has_councilor = { COUNCILOR = councilor_corporate_toxic_baths_individual_machine }
					}
				}
			}

			unity = @councilor_toxic_baths_attendant_unity
			mult = value:councilor_level_combo|COUNCILOR_1|councilor_toxic_baths_individual_machine|COUNCILOR_2|councilor_corporate_toxic_baths_individual_machine|
		}
	}
	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_multiple_resources_modifier|JOB|artificer|RESOURCE1|consumer_goods|WEIGHT1|0.8|RESOURCE2|engineering_research|WEIGHT2|0.2|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_trade_mult|
		modifier = {
			factor = 2
			is_enslaved = yes
			can_take_servant_job = no
		}
		modifier = {
			factor = 5
			has_job = bath_attendant
		}
	}

	inline_script = "jobs/automodding_priority_trade"
}

knight = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_order_keep
	clothes_texture_index = 3

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_enslaved = no
	}

	possible_precalc = can_fill_specialist_job
	possible = {
		hidden_trigger = { exists = owner }
		owner = {
			is_gestalt = no
		}
	}

	resources = {
		category = planet_knights
		produces = {
			trigger = { exists = owner }
			unity = 3
			mult = value:knights_unity_output_modifier
		}
		produces = {
			trigger = { exists = owner }
			physics_research = 2
			engineering_research = 2
			society_research = 2
			mult = value:knights_research_output_modifier
		}
		produces = {
			trigger = {
				exists = owner
				owner = {
					has_country_flag = cosmogenesis_knights
				}
			}
			advanced_logic = 1
			mult = value:knights_research_output_modifier
		}
		upkeep = {
			alloys = 1
			trigger = {
				exists = owner
				owner = {
					NOT = {
						has_modifier = luminous_blades
					}
				}
			}
		}
	}

	pop_modifier = {
		pop_defense_armies_add = 2
	}

	triggered_planet_modifier = {
		potential = {
			owner = { has_country_flag = toxoids_7090_a }
		}
		planet_amenities_add = 5
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	country_modifier = {
		country_naval_cap_add = 4
	}

	weight = {
		weight = @high_prio_specialist_job_weight
		factor = 1.2
		add = 5 #Somehow pops preferred to work as squires than as knights. No more.
		mult = value:job_weights_modifier|JOB|bureaucrat|RESOURCE|unity|
		mult = value:job_weights_research_modifier|JOB|researcher|
	}

	inline_script = "jobs/automodding_priority_unity"
}

archaeoengineers = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_archaeostudies_faculty
	clothes_texture_index = 3

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job
	possible = {
		complex_specialist_job_check_trigger = yes
	}

	resources = {
		category = planet_researchers
		produces = {
			physics_research = 2
			engineering_research = 2
			society_research = 5
		}
		produces = {
			trigger = { planet = { is_planet_class = pc_relic } }
			minor_artifacts = 0.3
		}
		upkeep = {
			consumer_goods = 2
		}
		upkeep = {
			trigger = {
				planet = {
					has_planet_flag = has_science_ministry
				}
			}
			consumer_goods = 1
		}
	}

	overlord_resources = {
		category = planet_requisitioned_research
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_science_ministry
				}
			}
			physics_research = 1
			engineering_research = 1
			society_research = 1
		}
	}

	triggered_country_modifier = {
		modifier = {
			country_naval_cap_add = 1
		}
		mult = planet.modifier:job_researcher_naval_cap_add
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_research_modifier|JOB|archaeoengineers|
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 2
			has_living_standard = { type = living_standard_academic_privilege }
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 1.5
			has_job = archaeoengineers
		}
		modifier = {
			factor = 0.8
			is_enslaved = yes
			has_slavery_type = { type = slavery_indentured }
		}
	}

	inline_script = "jobs/automodding_priority_research"
}

resort_worker = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_amusement_megaplex
	clothes_texture_index = 3
	icon = servant

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job
	possible = {
		entertainer_job_check_trigger = yes
	}

	resources = {
		category = planet_entertainers
		produces = {
			unity = 2
		}
		upkeep = {
			consumer_goods = 2
		}
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		trade_value_add = 4
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_trade_mult|
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_tradition = tr_mercantile_commercial_enterprise }
		}
		planet_amenities_add = 2
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {
		potential = {
			has_councilor = { COUNCILOR = "councilor_corporate_hedonism" }
		}

		trade_value_add = @councilor_corporate_hedonism_entertainer_trade_value
		mult = value:scripted_modifier_councilor_level_mult|MODIFIER|pop_job_trade_mult|TYPE|councilor_corporate_hedonism|
	}

	country_modifier = {
		pop_amenities_usage_mult = -0.01
		pop_lifestyle_trade_value_mult = 0.02
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_trade_mult|
		modifier = {
			factor = 5
			has_job = resort_worker
		}
		# crisis purge
		modifier = {
			factor = 0.01
			exists = planet
			exists = planet.controller
			planet.controller = {
				OR = {
					is_country_type = swarm
					is_country_type = ai_empire
				}
			}
			OR = { # contingency won't purge itself
				NOT = { exists = event_target:custodian_bot }
				AND = {
					exists = event_target:custodian_bot
					NOT = { species = { is_same_value = event_target:custodian_bot } }
				}
			}
		}
    }
}
