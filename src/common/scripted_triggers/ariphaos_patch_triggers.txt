

# Entertainers
# trait_charismatic
# trait_traditional
# trait_quarrelsome
# NOT = { has_trait = trait_syncretic_proles }
#		NOT = { has_trait = trait_nerve_stapled }

# Super-clerks
# 		has_trait = trait_repugnant
#		has_trait = trait_thrifty | trait_nuumismatic_administration
#		has_trait = trait_charismatic

ariphaos_patch_is_threat_to_crisis = {
	is_country_type = default
	fleet_power > 40000
}

ariphaos_patch_is_threat_to_guardians = {
	is_country_type = default
	fleet_power > 20000
}

ariphaos_patch_is_big_fleet = {
	is_country_type = default
	fleet_power > 10000
}

ariphaos_patch_build_urban = {
	num_free_districts = { type = district_generator value = 0 }
	OR = {
		AND = { 
			owner = { country_uses_food = no }
			num_free_districts = { type = district_mining value > 0 }
		}
		AND = { 
			owner = { country_uses_food = yes }
			num_free_districts = { type = district_farming value > 0 }
		}
	}
	ariphaos_patch_unemployed_worker_complex = yes
}

ariphaos_patch_block_urban = {
	OR = {
		num_free_districts = { type = district_generator value > 0 }
		AND = { 
			owner = { country_uses_food = no }
			num_free_districts = { type = district_mining value > 0 }
		}
		AND = { 
			owner = { country_uses_food = yes }
			num_free_districts = { type = district_farming value > 0 }
		}
	}
	free_housing > 0
}

ariphaos_patch_unemployed_worker = {
	any_owned_pop = {
		OR = {
			is_unemployed = yes
			has_job = servant
		}
		NOR = {
			is_pop_category = specialist
			is_pop_category = ruler
		}
		OR = {
			ariphaos_patch_can_fill_worker_job = yes
			ariphaos_patch_can_fill_drone_job = yes
		}
	}
}

ariphaos_patch_unemployed_worker_complex = {
	any_owned_pop = {
		OR = {
			is_unemployed = yes
			has_job = servant
		}
		NOR = {
			is_pop_category = specialist
			is_pop_category = ruler
		}
		OR = {
			NOT = { has_trait = trait_mechanical }
			owner = { has_technology = tech_droid_workers }
		}
		OR = {
			ariphaos_patch_can_fill_worker_job = yes
			ariphaos_patch_can_fill_drone_job = yes
		}
	}
}
ariphaos_patch_unemployed_low_class_trigger = {
	OR = {
		is_unemployed = yes
		has_job = servant
	}
	NOT = { is_pop_category = ruler }
	OR = {
		ariphaos_patch_can_fill_worker_job = yes
		ariphaos_patch_can_fill_drone_job = yes
	}
}

# Detect if we can promote someone, and if someone can fill their role.
ariphaos_patch_unemployed_specialist = {
	any_owned_pop = {
		ariphaos_patch_unemployed_low_class_trigger = yes
	}
	any_owned_pop = {
		ariphaos_patch_can_fill_specialist_job = yes
		OR = {
			AND = {
				is_pop_category = worker
				NOT = { has_job = soldier }
			}
			is_unemployed = yes
			has_job = servant
		}
	}
}

ariphaos_patch_unemployed_complex_specialist = {
	any_owned_pop = {
		ariphaos_patch_unemployed_low_class_trigger = yes
	}
	any_owned_pop = {
		ariphaos_patch_can_fill_specialist_job = yes
		OR = {
			AND = {
				is_pop_category = worker
				NOT = { has_job = soldier }
			}
			is_unemployed = yes
			has_job = servant
		}
		OR = {
			NOT = { has_trait = trait_mechanical }
			AND = {
				owner = { has_technology = tech_synthetic_workers }
				owner = { NOT = { has_policy_flag = ai_outlawed } }
			}
		}
	}
}

ariphaos_patch_buildings_allow_complex = {
	exists = owner
	OR = {
		owner = { is_ai = no }
		ariphaos_patch_unemployed_complex_specialist = yes
	}
}

ariphaos_patch_buildings_allow_specialist = {
	exists = owner
	OR = {
		owner = { is_ai = no }
		ariphaos_patch_unemployed_specialist = yes
	}
}

ariphaos_patch_buildings_allow_worker_complex = {
	exists = owner
	OR = {
		owner = { is_ai = no }
		AND = {
			ariphaos_patch_unemployed_worker_complex = yes
			num_free_districts = { type = district_generator value = 0 }
			OR = {
				num_free_districts = { type = district_mining value = 0 }
				owner = { country_uses_food = yes }
			}
			OR = {
				num_free_districts = { type = district_farming value = 0 }
				owner = { country_uses_food = no }
			}
		}
	}
}

ariphaos_patch_buildings_allow_worker = {
	exists = owner
	OR = {
		owner = { is_ai = no }
		AND = {
			ariphaos_patch_unemployed_worker = yes
			num_free_districts = { type = district_generator value = 0 }
			OR = {
				num_free_districts = { type = district_mining value = 0 }
				owner = { country_uses_food = yes }
			}
			OR = {
				num_free_districts = { type = district_farming value = 0 }
				owner = { country_uses_food = no }
			}
		}
	}
}

ariphaos_patch_ai_destroy_building = {
	exists = owner
	AND = {
		owner = { is_ai = yes }
		free_jobs > 5
	}
}

#this/root = pop
#checked if job's possible_precalc = can_fill_drone_job
ariphaos_patch_can_fill_drone_job = {
	custom_tooltip = DRONE_JOB_TRIGGER
	hidden_trigger = {
		exists = owner
		owner = { is_gestalt = yes }
		is_being_purged = no
		is_enslaved = no
		is_being_assimilated = no
		NOT = { has_citizenship_type = { type = citizenship_organic_trophy } }
	}
}

#this/root = pop
#checked if job's possible_precalc = can_fill_worker_job
ariphaos_patch_can_fill_worker_job = {
	custom_tooltip = WORKER_JOB_TRIGGER
	hidden_trigger = {
		is_gestalt = no
		exists = owner
		is_being_purged = no
		is_being_assimilated = no
		NOT = { has_citizenship_type = { type = citizenship_organic_trophy } }
		NAND = {
			has_citizenship_type = { type = citizenship_slavery }
			OR = {
				has_slavery_type = { type = slavery_livestock }
				has_slavery_type = { type = slavery_matrix }
			}
		}
		if = {
			limit = {
				divinity_right_to_work_job_check_trigger_exempt = no
			}
			divinity_right_to_work_job_check_trigger_worker = yes
		}
	}
}

#this/root = pop
#checked if job's possible_precalc = can_fill_specialist_job
ariphaos_patch_can_fill_specialist_job = {
	custom_tooltip = SPECIALIST_JOB_TRIGGER
	hidden_trigger = {
		is_gestalt = no
		exists = owner
		OR = {
			is_enslaved = no
			has_slavery_type = { type = slavery_indentured }
		}
		is_being_purged = no
		is_being_assimilated = no
		NOT = { has_trait = trait_syncretic_proles }
		NOT = { has_trait = trait_nerve_stapled }
		OR = {
			NOT = { has_trait = trait_mechanical }
			owner = { has_technology = tech_droid_workers }
		}
		NOT = { has_citizenship_type = { type = citizenship_organic_trophy } }
		if = {
			limit = {
				divinity_right_to_work_job_check_trigger_exempt = no
			}
			divinity_right_to_work_job_check_trigger_specialist = yes
		}
	}
}

#this/root = pop
#checked if job's possible_precalc = can_fill_ruler_job
ariphaos_patch_can_fill_ruler_job = {
	if = {
		limit = {
			exists = owner
			owner = {
				has_origin = origin_necrophage
				has_trait = trait_necrophage
			}
		}
		custom_tooltip = {
			text = RULER_JOB_NECROPHAGE_TRIGGER
			has_trait = trait_necrophage
			is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
		}
	}
	else = {
		custom_tooltip = RULER_JOB_TRIGGER
		hidden_trigger = {
			is_gestalt = no
			exists = owner
			is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			NOT = { has_trait = trait_syncretic_proles }
			NOT = { has_trait = trait_nerve_stapled }
			OR = {
				NOT = { has_trait = trait_mechanical }
				AND = {
					owner = { has_technology = tech_synthetic_workers }
					owner = { has_policy_flag = ai_full_rights }
				}
			}
			NOT = { has_citizenship_type = { type = citizenship_organic_trophy } }
			if = {
				limit = {
					divinity_right_to_work_job_check_trigger_exempt = no
				}
				divinity_right_to_work_job_check_trigger_ruler = yes
			}
		}
	}
}
