### Federations Scripted Effects

# Create The Lesser Messenger effect

create_lesser_messenger = {
	custom_tooltip = get_messenger
	hidden_effect = {
		owner = {
			create_fleet = {
				name = "NAME_Lesser_Messenger"
				settings = {
					spawn_debris = no
				}
				effect = {
					set_owner = prev
					create_ship_design = {
						design = "NAME_Lessenger"
					}
					create_ship = {
						name = "NAME_Lesser_Messenger"
						design = last_created_design
						prefix = no
						upgradable = no
					}
					set_location = fromfrom.planet
					set_lessenger_damage = yes
				}
			}
		}
	}
}

set_lessenger_damage = {
	random_list = {
		33 = {
			add_modifier = {
				modifier = lessenger_75
				days = -1
			}
			enable_special_project = {
				name = "LESSENGER_REMODEL"
				owner = this.owner
				location = this
			}
		}
		33 = {
			add_modifier = {
				modifier = lessenger_50
				days = -1
			}
			enable_special_project = {
				name = "LESSENGER_REMODEL"
				owner = this.owner
				location = this
			}
		}
		33 = {
			add_modifier = {
				modifier = lessenger_25
				days = -1
			}
			enable_special_project = {
				name = "LESSENGER_REMODEL"
				owner = this.owner
				location = this
			}
		}
	}
}

remove_lessenger_damage = {
	every_controlled_ship = {
		remove_modifier = lessenger_75
		remove_modifier = lessenger_50
		remove_modifier = lessenger_25
	}
}

scion_engineering_tech = {
	if = {
		limit = {
			NOT = { has_technology = tech_alloys_1 }
			can_research_technology = tech_alloys_1
		}
		give_technology = { tech = tech_alloys_1 }
	}
	else_if = {
		limit = {
			NOT = { has_technology = tech_mineral_purification_2 }
			can_research_technology = tech_mineral_purification_2
		}
		give_technology = { tech = tech_mineral_purification_2 }
	}
	else_if = {
		limit = {
			NOT = { has_technology = tech_space_defense_station_improvement }
			can_research_technology = tech_space_defense_station_improvement
		}
		give_technology = { tech = tech_space_defense_station_improvement }
	}
	else_if = {
		limit = {
			NOT = { has_technology = tech_battleships }
			can_research_technology = tech_battleships
		}
		give_technology = { tech = tech_battleships }
	}
	else_if = {
		limit = {
			NOT = { has_technology = tech_battleship_hull_2 }
			can_research_technology = tech_battleship_hull_2
		}
		give_technology = { tech = tech_battleship_hull_2 }
	}
}

scion_physics_tech = {
	if = {
		limit = {
			NOT = { has_technology = tech_space_science_2 }
			can_research_technology = tech_space_science_2
		}
		give_technology = { tech = tech_space_science_2 }
	}
	else_if = {
		limit = {
			NOT = { has_technology = tech_self_aware_logic }
			can_research_technology = tech_self_aware_logic
		}
		give_technology = { tech = tech_self_aware_logic }
	}
	else_if = {
		limit = {
			NOT = { has_technology = tech_antimatter_power }
			can_research_technology = tech_antimatter_power
		}
		give_technology = { tech = tech_antimatter_power }
	}
	else_if = {
		limit = {
			NOT = { has_technology = tech_combat_computers_autonomous }
			can_research_technology = tech_combat_computers_autonomous
		}
		give_technology = { tech = tech_combat_computers_autonomous }
	}
	else_if = {
		limit = {
			NOT = { has_technology = tech_jump_drive_1 }
			can_research_technology = tech_jump_drive_1
		}
		give_technology = { tech = tech_jump_drive_1 }
	}
}

scion_society_tech = {
	if = {
		limit = {
			NOT = { has_technology = tech_eco_simulation }
			can_research_technology = tech_eco_simulation
		}
		give_technology = { tech = tech_eco_simulation }
	}
	else_if = {
		limit = {
			NOT = { has_technology = tech_society_2 }
			can_research_technology = tech_society_2
		}
		give_technology = { tech = tech_society_2 }
	}
	else_if = {
		limit = {
			NOT = { has_technology = tech_colonization_4 }
			can_research_technology = tech_colonization_4
		}
		give_technology = { tech = tech_colonization_4 }
	}
	else_if = {
		limit = {
			NOT = { has_technology = tech_climate_restoration }
			can_research_technology = tech_climate_restoration
		}
		give_technology = { tech = tech_climate_restoration }
	}
	else_if = {
		limit = {
			NOT = { has_technology = tech_ascension_theory }
			can_research_technology = tech_ascension_theory
		}
		give_technology = { tech = tech_ascension_theory }
	}
}

federation_origin_planet_setup = {
	if = {
		limit = {
			any_system_planet = {
				habitable_planet = yes
			}
		}
		random_system_planet = {
			limit = { habitable_planet = yes }
			set_planet_size = 18
			random_list = {
				1 = { change_pc = pc_tropical }
				1 = { change_pc = pc_arid }
				1 = { change_pc = pc_continental }
				1 = { change_pc = pc_ocean }
				1 = { change_pc = pc_tundra }
				1 = { change_pc = pc_arctic }
				1 = { change_pc = pc_alpine }
				1 = { change_pc = pc_savannah }
				1 = { change_pc = pc_desert }
			}
			reroll_planet = yes
			save_event_target_as = fed_planet_$NUM$
		}
	}
	else = {
		random_system_planet = {
			limit = { is_star = no }
			set_planet_size = 18
			random_list = {
				1 = { change_pc = pc_tropical }
				1 = { change_pc = pc_arid }
				1 = { change_pc = pc_continental }
				1 = { change_pc = pc_ocean }
				1 = { change_pc = pc_tundra }
				1 = { change_pc = pc_arctic }
				1 = { change_pc = pc_alpine }
				1 = { change_pc = pc_savannah }
				1 = { change_pc = pc_desert }
			}
			reroll_planet = yes
			save_event_target_as = fed_planet_$NUM$
		}
	}
	add_extra_hyperlane_to_spawned_system_effect = yes
}

scion_fe_intervention = {
	if = {
		limit = { fleet_power < 2000 }
		root = { create_fe_intervention_1 = yes }
	}
	else_if = {
		limit = {
			fleet_power >= 2000
			fleet_power < 3999
		}
		root = { create_fe_intervention_2 = yes }
	}
	else_if = {
		limit = {
			fleet_power >= 4000
			fleet_power < 5999
		}
		root = { create_fe_intervention_3 = yes }
	}
	else_if = {
		limit = {
			fleet_power >= 6000
			fleet_power < 9999
		}
		root = { create_fe_intervention_4 = yes }
	}
	else_if = {
		limit = {
			fleet_power >= 10000
			fleet_power < 19999
		}
		root = { create_fe_intervention_5 = yes }
	}
	else_if = {
		limit = {
			fleet_power >= 20000
			fleet_power < 39999
		}
		root = { create_fe_intervention_6 = yes }
	}
	else_if = {
		limit = {
			fleet_power >= 40000
			fleet_power < 59999
		}
		root = { create_fe_intervention_7 = yes }
	}
	else_if = {
		limit = {
			fleet_power >= 60000
		}
		root = { create_fe_intervention_8 = yes }
	}
}

create_fe_intervention_leader = {
	create_leader = {
		class = admiral
		species = event_target:fe_species
		name = random
		skill = 7
		event_leader = yes	# prevents this leader from leading factions and winning elections
		effect = {
			save_event_target_as = fe_intervention_admiral
		}
	}
}

create_fe_intervention_1 = {
	set_country_flag = borrowed_fleet_from@event_target:scion_master
	create_fe_intervention_leader = yes
	capital_scope = {
		create_fleet = {
			effect = {
				set_owner = event_target:scion_master # For ship names
				set_fleet_flag = scion_borrowed_fleet
				while = {
					count = 1
					create_fallen_empire_small_ship = yes
				}
				set_location = {
					target = prev
					distance = 45
					angle = random
				}
				set_owner = root
				assign_leader = event_target:fe_intervention_admiral
			}
			settings = {
				can_upgrade = no
				can_disband = no
				can_change_composition = no
				can_change_leader = no
				uses_naval_capacity = no
			}
		}
	}
}

create_fe_intervention_2 = {
	set_country_flag = borrowed_fleet_from@event_target:scion_master
	create_fe_intervention_leader = yes
	capital_scope = {
		create_fleet = {
			effect = {
				set_owner = event_target:scion_master # For ship names
				set_fleet_flag = scion_borrowed_fleet
				while = {
					count = 3
					create_fallen_empire_small_ship = yes
				}
				set_location = {
					target = prev
					distance = 45
					angle = random
				}
				set_owner = root
				assign_leader = event_target:fe_intervention_admiral
			}
			settings = {
				can_upgrade = no
				can_disband = no
				can_change_composition = no
				can_change_leader = no
				uses_naval_capacity = no
			}
		}
	}
}

create_fe_intervention_3 = {
	set_country_flag = borrowed_fleet_from@event_target:scion_master
	create_fe_intervention_leader = yes
	capital_scope = {
		create_fleet = {
			effect = {
				set_owner = event_target:scion_master # For ship names
				set_fleet_flag = scion_borrowed_fleet
				while = {
					count = 1
					create_fallen_empire_large_ship = yes
				}
				set_location = {
					target = prev
					distance = 45
					angle = random
				}
				set_owner = root
				assign_leader = event_target:fe_intervention_admiral
			}
			settings = {
				can_upgrade = no
				can_disband = no
				can_change_composition = no
				can_change_leader = no
				uses_naval_capacity = no
			}
		}
	}
}

create_fe_intervention_4 = {
	set_country_flag = borrowed_fleet_from@event_target:scion_master
	create_fe_intervention_leader = yes
	capital_scope = {
		create_fleet = {
			effect = {
				set_owner = event_target:scion_master # For ship names
				set_fleet_flag = scion_borrowed_fleet
				while = {
					count = 1
					create_fallen_empire_large_ship = yes
				}
				while = {
					count = 2
					create_fallen_empire_small_ship = yes
				}
				set_location = {
					target = prev
					distance = 45
					angle = random
				}
				set_owner = root
				assign_leader = event_target:fe_intervention_admiral
			}
			settings = {
				can_upgrade = no
				can_disband = no
				can_change_composition = no
				can_change_leader = no
				uses_naval_capacity = no
			}
		}
	}
}

create_fe_intervention_5 = {
	set_country_flag = borrowed_fleet_from@event_target:scion_master
	create_fe_intervention_leader = yes
	capital_scope = {
		create_fleet = {
			effect = {
				set_owner = event_target:scion_master # For ship names
				set_fleet_flag = scion_borrowed_fleet
				while = {
					count = 1
					create_fallen_empire_large_ship = yes
				}
				while = {
					count = 4
					create_fallen_empire_small_ship = yes
				}
				set_location = {
					target = prev
					distance = 45
					angle = random
				}
				set_owner = root
				assign_leader = event_target:fe_intervention_admiral
			}
			settings = {
				can_upgrade = no
				can_disband = no
				can_change_composition = no
				can_change_leader = no
				uses_naval_capacity = no
			}
		}
	}
}

create_fe_intervention_6 = {
	set_country_flag = borrowed_fleet_from@event_target:scion_master
	create_fe_intervention_leader = yes
	capital_scope = {
		create_fleet = {
			effect = {
				set_owner = event_target:scion_master # For ship names
				set_fleet_flag = scion_borrowed_fleet
				while = {
					count = 2
					create_fallen_empire_large_ship = yes
				}
				while = {
					count = 4
					create_fallen_empire_small_ship = yes
				}
				set_location = {
					target = prev
					distance = 45
					angle = random
				}
				set_owner = root
				assign_leader = event_target:fe_intervention_admiral
			}
			settings = {
				can_upgrade = no
				can_disband = no
				can_change_composition = no
				can_change_leader = no
				uses_naval_capacity = no
			}
		}
	}
}

create_fe_intervention_7 = {
	set_country_flag = borrowed_fleet_from@event_target:scion_master
	create_fe_intervention_leader = yes
	capital_scope = {
		create_fleet = {
			effect = {
				set_owner = event_target:scion_master # For ship names
				set_fleet_flag = scion_borrowed_fleet
				while = {
					count = 3
					create_fallen_empire_large_ship = yes
				}
				while = {
					count = 6
					create_fallen_empire_small_ship = yes
				}
				set_location = {
					target = prev
					distance = 45
					angle = random
				}
				set_owner = root
				assign_leader = event_target:fe_intervention_admiral
			}
			settings = {
				can_upgrade = no
				can_disband = no
				can_change_composition = no
				can_change_leader = no
				uses_naval_capacity = no
			}
		}
	}
}

create_fe_intervention_8 = {
	set_country_flag = borrowed_fleet_from@event_target:scion_master
	create_fe_intervention_leader = yes
	capital_scope = {
		create_fleet = {
			effect = {
				set_owner = event_target:scion_master # For ship names
				set_fleet_flag = scion_borrowed_fleet
				while = {
					count = 6
					create_fallen_empire_large_ship = yes
				}
				while = {
					count = 12
					create_fallen_empire_small_ship = yes
				}
				set_location = {
					target = prev
					distance = 45
					angle = random
				}
				set_owner = root
				assign_leader = event_target:fe_intervention_admiral
			}
			settings = {
				can_upgrade = no
				can_disband = no
				can_change_composition = no
				can_change_leader = no
				uses_naval_capacity = no
			}
		}
	}
}
spawn_random_home_system = {
	random_list = {
		1 = { origin_spawn_system_effect = { INITIALIZER = custom_starting_init_01 } } # Trinary System I
		1 = { origin_spawn_system_effect = { INITIALIZER = custom_starting_init_02 } } # Trinary System II
		1 = { origin_spawn_system_effect = { INITIALIZER = custom_starting_init_03 } } # Binary System I
		1 = { origin_spawn_system_effect = { INITIALIZER = custom_starting_init_04 } } # Binary System II
		1 = { origin_spawn_system_effect = { INITIALIZER = custom_starting_init_05 } } # Unary System I
		1 = { origin_spawn_system_effect = { INITIALIZER = custom_starting_init_06 } } # Unary System II
	}
}

create_fed_planet_1_species = {
	if = {
		limit = {
			root = {
				is_machine_empire = yes
			}
		}
		random_list = {
			50 = {
				create_species = {
					name = random
					class = MACHINE
					portrait = random
					traits = random
					homeworld = this
				}
			}
			50 = {
				create_species = {
					name = random
					class = $CLASS$
					portrait = random
					traits = random
					homeworld = this
				}
			}
		}
	}
	else = {
		create_species = {
			name = random
			class = $CLASS$
			portrait = random
			traits = random
			homeworld = this
		}
	}
	last_created_species = {
		save_event_target_as = fed_planet_1_species
	}
}

create_fed_planet_2_species = {
	if = {
		limit = {
			root = {
				is_machine_empire = yes
			}
		}
		random_list = {
			50 = {
				create_species = {
					name = random
					class = MACHINE
					portrait = random
					traits = random
					homeworld = this
				}
			}
			50 = {
				create_species = {
					name = random
					class = $CLASS$
					portrait = random
					traits = random
					homeworld = this
				}
			}
		}
	}
	else = {
		create_species = {
			name = random
			class = $CLASS$
			portrait = random
			traits = random
			homeworld = this
		}
	}
	last_created_species = {
		save_event_target_as = fed_planet_2_species
	}
}

machine_federation_member_civic_fix = {
	if = {
		limit = {
			OR = {
				has_civic = civic_machine_servitor
				has_civic = civic_machine_terminator
				has_civic = civic_machine_assimilator
			}
		}
		force_remove_civic = civic_machine_servitor
		force_remove_civic = civic_machine_terminator
		force_remove_civic = civic_machine_assimilator
		if = {
			limit = {
				has_civic = civic_machine_delegated_functions
			}
			force_add_civic = civic_machine_maintenance_protocols
		}
		else = {
			force_add_civic = civic_machine_delegated_functions
		}
	}
	set_origin = "origin_common_ground_npc"
}

hive_federation_member_civic_fix = {
	if = {
		limit = {
			has_civic = civic_hive_devouring_swarm
		}
		force_remove_civic = civic_hive_devouring_swarm
		if = {
			limit = {
				has_civic = civic_hive_empath
			}
			force_add_civic = civic_hive_divided_attention
		}
		else = {
			force_add_civic = civic_hive_empath
		}
	}
	set_origin = "origin_common_ground_npc"
}

create_common_ground_member = {
	# If the federation member species is a machine, make them a machine intelligence.
	if = {
		limit = {
			event_target:fed_planet_$NUM$_species = {
				is_species_class = MACHINE
			}
		}
		event_target:fed_planet_$NUM$_species = {
			modify_species = {
				species = this
				add_trait = trait_machine_unit
				effect = {
					save_event_target_as = fed_planet_$NUM$_species
				}
			}
		}
		create_country = {
			name_list = random
			species = event_target:fed_planet_$NUM$_species
			type = default
			origin = "origin_default"
			ignore_initial_colony_error = yes
			day_zero_contact = no
			ethos = {
				ethic = "ethic_gestalt_consciousness"
			}
			authority = auth_machine_intelligence
			effect = {
				machine_federation_member_civic_fix = yes
				save_event_target_as = fed_member_$NUM$
				establish_communications_no_message = root
			}
		}
	}
	# Otherwise, weighted random for their ethics.
	else = {
		random_list = {
			1 = {	# Hive-Mind
				modifier = {
					factor = 10
					root = { is_hive_empire = yes }
				}
				modifier = {
					factor = 0
					has_utopia = no
				}
				event_target:fed_planet_$NUM$_species = {
					modify_species = {
						species = this
						add_trait = trait_hive_mind
						effect = {
							save_event_target_as = fed_planet_$NUM$_species
						}
					}
				}
				create_country = {
					name_list = random
					species = event_target:fed_planet_$NUM$_species
					type = default
					origin = "origin_default"
					ignore_initial_colony_error = yes
					day_zero_contact = no
					ethos = {
						ethic = "ethic_gestalt_consciousness"
					}
					authority = auth_hive_mind
					effect = {
						hive_federation_member_civic_fix = yes
						save_event_target_as = fed_member_$NUM$
						establish_communications_no_message = root
					}
				}
			}
			1 = {	# Fanatic Spiritualist
				modifier = {
					factor = 10
					root = { is_spiritualist = yes }
				}
				modifier = {
					factor = 0
					root = { is_machine_empire = yes }
				}
				create_country = {
					name_list = random
					species = event_target:fed_planet_$NUM$_species
					type = default
					origin = "origin_common_ground_npc"
					ignore_initial_colony_error = yes
					day_zero_contact = no
					randomize_ethos = yes
					ethos = {
						ethic = "ethic_xenophile"
						ethic = "ethic_spiritualist"
						ethic = "ethic_fanatic_spiritualist"
					}
					effect = {
						save_event_target_as = fed_member_$NUM$
						establish_communications_no_message = root
					}
				}
			}
			1 = {	# Fanatic Militarist
				modifier = {
					factor = 10
					root = { is_militarist = yes }
				}
				create_country = {
					name_list = random
					species = event_target:fed_planet_$NUM$_species
					type = default
					origin = "origin_common_ground_npc"
					ignore_initial_colony_error = yes
					day_zero_contact = no
					randomize_ethos = yes
					ethos = {
						ethic = "ethic_xenophile"
						ethic = "ethic_militarist"
						ethic = "ethic_fanatic_militarist"
					}
					effect = {
						save_event_target_as = fed_member_$NUM$
						establish_communications_no_message = root
					}
				}
			}
			1 = {	# Fanatic Pacifist
				modifier = {
					factor = 10
					root = { is_pacifist = yes }
				}
				create_country = {
					name_list = random
					species = event_target:fed_planet_$NUM$_species
					type = default
					origin = "origin_common_ground_npc"
					ignore_initial_colony_error = yes
					day_zero_contact = no
					randomize_ethos = yes
					ethos = {
						ethic = "ethic_xenophile"
						ethic = "ethic_pacifist"
						ethic = "ethic_fanatic_pacifist"
					}
					effect = {
						save_event_target_as = fed_member_$NUM$
						establish_communications_no_message = root
					}
				}
			}
			1 = {	# Fanatic Materialist
				modifier = {
					factor = 10
					root = {
						OR = {
							is_materialist = yes
							is_machine_empire = yes
						}
					}
				}
				create_country = {
					name_list = random
					species = event_target:fed_planet_$NUM$_species
					type = default
					origin = "origin_common_ground_npc"
					ignore_initial_colony_error = yes
					day_zero_contact = no
					randomize_ethos = yes
					ethos = {
						ethic = "ethic_xenophile"
						ethic = "ethic_materialist"
						ethic = "ethic_fanatic_materialist"
					}
					effect = {
						save_event_target_as = fed_member_$NUM$
						establish_communications_no_message = root
					}
				}
			}
			1 = {	# Fanatic Authoritarian
				modifier = {
					factor = 10
					root = { is_authoritarian = yes }
				}
				create_country = {
					name_list = random
					species = event_target:fed_planet_$NUM$_species
					type = default
					origin = "origin_common_ground_npc"
					ignore_initial_colony_error = yes
					day_zero_contact = no
					randomize_ethos = yes
					ethos = {
						ethic = "ethic_xenophile"
						ethic = "ethic_authoritarian"
						ethic = "ethic_fanatic_authoritarian"
					}
					effect = {
						save_event_target_as = fed_member_$NUM$
						establish_communications_no_message = root
					}
				}
			}
			1 = {	# Fanatic Egalitarian
				modifier = {
					factor = 10
					root = { is_egalitarian = yes }
				}
				create_country = {
					name_list = random
					species = event_target:fed_planet_$NUM$_species
					type = default
					origin = "origin_common_ground_npc"
					ignore_initial_colony_error = yes
					day_zero_contact = no
					randomize_ethos = yes
					ethos = {
						ethic = "ethic_xenophile"
						ethic = "ethic_egalitarian"
						ethic = "ethic_fanatic_egalitarian"
					}
					effect = {
						save_event_target_as = fed_member_$NUM$
						establish_communications_no_message = root
					}
				}
			}
			5 = {	# Fanatic Xenophile
				create_country = {
					name_list = random
					species = event_target:fed_planet_$NUM$_species
					type = default
					origin = "origin_common_ground_npc"
					ignore_initial_colony_error = yes
					day_zero_contact = no
					randomize_ethos = yes
					ethos = {
						ethic = "ethic_xenophile"
						ethic = "ethic_fanatic_xenophile"
					}
					effect = {
						save_event_target_as = fed_member_$NUM$
						establish_communications_no_message = root
					}
				}
			}
		}
	}
}

create_hegemon_member = {
	# If the federation member species is a machine, make them a machine intelligence.
	if = {
		limit = {
			event_target:fed_planet_$NUM$_species = {
				is_species_class = MACHINE
			}
		}
		event_target:fed_planet_$NUM$_species = {
			modify_species = {
				species = this
				add_trait = trait_machine_unit
				effect = {
					save_event_target_as = fed_planet_$NUM$_species
				}
			}
		}
		create_country = {
			name_list = random
			species = event_target:fed_planet_$NUM$_species
			type = default
			origin = "origin_default"
			ignore_initial_colony_error = yes
			day_zero_contact = no
			ethos = {
				ethic = "ethic_gestalt_consciousness"
			}
			authority = auth_machine_intelligence
			effect = {
				machine_federation_member_civic_fix = yes
				save_event_target_as = fed_member_$NUM$
				establish_communications_no_message = root
			}
		}
	}
	else = {
		random_list = {
			1 = {	# Hive-Mind
				modifier = {
					factor = 10
					root = { is_hive_empire = yes }
				}
				modifier = {
					factor = 0
					has_utopia = no
				}
				event_target:fed_planet_$NUM$_species = {
					modify_species = {
						species = this
						add_trait = trait_hive_mind
						effect = {
							save_event_target_as = fed_planet_$NUM$_species
						}
					}
				}
				create_country = {
					name_list = random
					species = event_target:fed_planet_$NUM$_species
					type = default
					origin = "origin_default"
					ignore_initial_colony_error = yes
					day_zero_contact = no
					ethos = {
						ethic = "ethic_gestalt_consciousness"
					}
					authority = auth_hive_mind
					effect = {
						hive_federation_member_civic_fix = yes
						save_event_target_as = fed_member_$NUM$
						establish_communications_no_message = root
					}
				}
			}
			1 = {	# Fanatic Spiritualist
				modifier = {
					factor = 10
					root = { is_spiritualist = yes }
				}
				modifier = {
					factor = 0
					root = { is_machine_empire = yes }
				}
				create_country = {
					name = random
					name_list = random
					species = event_target:fed_planet_$NUM$_species
					type = default
					origin = "origin_hegemon_npc"
					ignore_initial_colony_error = yes
					day_zero_contact = no
					randomize_ethos = yes
					ethos = {
						ethic = "ethic_xenophile"
						ethic = "ethic_spiritualist"
						ethic = "ethic_fanatic_spiritualist"
					}
					effect = {
						save_event_target_as = fed_member_$NUM$
						establish_communications_no_message = root
					}
				}
			}
			1 = {	# Fanatic Militarist
				modifier = {
					factor = 10
					root = { is_militarist = yes }
				}
				create_country = {
					name = random
					name_list = random
					species = event_target:fed_planet_$NUM$_species
					type = default
					origin = "origin_hegemon_npc"
					ignore_initial_colony_error = yes
					day_zero_contact = no
					randomize_ethos = yes
					ethos = {
						ethic = "ethic_xenophile"
						ethic = "ethic_militarist"
						ethic = "ethic_fanatic_militarist"
					}
					effect = {
						save_event_target_as = fed_member_$NUM$
						establish_communications_no_message = root
					}
				}
			}
			1 = {	# Fanatic Pacifist
				modifier = {
					factor = 10
					root = { is_pacifist = yes }
				}
				create_country = {
					name = random
					name_list = random
					species = event_target:fed_planet_$NUM$_species
					type = default
					origin = "origin_hegemon_npc"
					ignore_initial_colony_error = yes
					day_zero_contact = no
					randomize_ethos = yes
					ethos = {
						ethic = "ethic_xenophile"
						ethic = "ethic_pacifist"
						ethic = "ethic_fanatic_pacifist"
					}
					effect = {
						save_event_target_as = fed_member_$NUM$
						establish_communications_no_message = root
					}
				}
			}
			1 = {	# Fanatic Materialist
				modifier = {
					factor = 10
					root = {
						OR = {
							is_materialist = yes
							is_machine_empire = yes
						}
					}
				}
				create_country = {
					name = random
					name_list = random
					species = event_target:fed_planet_$NUM$_species
					type = default
					origin = "origin_hegemon_npc"
					ignore_initial_colony_error = yes
					day_zero_contact = no
					randomize_ethos = yes
					ethos = {
						ethic = "ethic_xenophile"
						ethic = "ethic_materialist"
						ethic = "ethic_fanatic_materialist"
					}
					effect = {
						save_event_target_as = fed_member_$NUM$
						establish_communications_no_message = root
					}
				}
			}
			1 = {	# Fanatic Authoritarian
				modifier = {
					factor = 10
					root = { is_authoritarian = yes }
				}
				create_country = {
					name = random
					name_list = random
					species = event_target:fed_planet_$NUM$_species
					type = default
					origin = "origin_hegemon_npc"
					ignore_initial_colony_error = yes
					day_zero_contact = no
					randomize_ethos = yes
					ethos = {
						ethic = "ethic_xenophile"
						ethic = "ethic_authoritarian"
						ethic = "ethic_fanatic_authoritarian"
					}
					effect = {
						save_event_target_as = fed_member_$NUM$
						establish_communications_no_message = root
					}
				}
			}
			1 = {	# Fanatic Egalitarian
				modifier = {
					factor = 10
					root = { is_egalitarian = yes }
				}
				create_country = {
					name = random
					name_list = random
					species = event_target:fed_planet_$NUM$_species
					type = default
					origin = "origin_hegemon_npc"
					ignore_initial_colony_error = yes
					day_zero_contact = no
					randomize_ethos = yes
					ethos = {
						ethic = "ethic_xenophile"
						ethic = "ethic_egalitarian"
						ethic = "ethic_fanatic_egalitarian"
					}
					effect = {
						save_event_target_as = fed_member_$NUM$
						establish_communications_no_message = root
					}
				}
			}
			5 = {	# Regular Xenophile
				create_country = {
					name = random
					name_list = random
					species = event_target:fed_planet_$NUM$_species
					type = default
					origin = "origin_hegemon_npc"
					ignore_initial_colony_error = yes
					day_zero_contact = no
					randomize_ethos = yes
					ethos = {
						ethic = "ethic_xenophile" # intentional outlier
					}
					effect = {
						save_event_target_as = fed_member_$NUM$
						establish_communications_no_message = root
					}
				}
			}
		}
	}
}

create_starting_leaders = {
	create_leader = {
		class = governor
		species = owner_main_species
	}
	capital_scope = {
		assign_leader = last_created_leader
	}
}

generate_lost_colony_parent_bonus = {
	while = {
		count = 2
		add_district_and_planet_size_if_needed_effect = {
			district = district_city
		}
	}
	while = {
		count = 2
		add_district_and_planet_size_if_needed_effect = {
			district = district_mining
		}
	}
	add_district_and_planet_size_if_needed_effect = {
		district = district_generator
	}
	add_district_and_planet_size_if_needed_effect = {
		district = district_farming
	}
	add_district_and_planet_size_if_needed_effect = {
		district = district_industrial
	}

	add_building = building_research_lab_1
	add_building = building_holo_theatres
	add_building = building_precinct_house

	while = {
		limit = { num_pops < 57 }
		create_pop = {
			species = owner_main_species
			ethos = random
		}
	}

	owner = {
		create_fleet = {
			effect = {
				set_owner = prev
				create_ship = {
					name = random
					random_existing_design = science
				}
				set_fleet_stance = evasive
				set_location = prev.capital_scope.star
				owner = {
					create_leader = {
						class = scientist
						sub_type = survey
						name = random
						species = owner_main_species
					}
				}
				set_leader = last_created_leader
			}
		}
	}
}

thesis_disband = {
	while = {
		limit = {
			any_owned_leader = {
				has_leader_flag = thesis_team
			}
		}
		random_owned_leader = {
			limit = {
				has_leader_flag = thesis_team
			}
			remove_leader_flag = thesis_team
		}
	}
}

wenkwort_continue_patrol = {
	random_list = {
		2 = { event_target:wenkwort_artem = { save_event_target_as = wenkwort_patrol_destination } }
		2 = { event_target:wenkwort_rellrait = { save_event_target_as = wenkwort_patrol_destination} }
		2 = { event_target:wenkwort_toxic = { save_event_target_as = wenkwort_patrol_destination} }
		1 = { event_target:wenkwort_truin = { save_event_target_as = wenkwort_patrol_destination} }
		1 = { event_target:wenkwort_gasgiant = { save_event_target_as = wenkwort_patrol_destination} }
		1 = { event_target:wenkwort_moon = { save_event_target_as = wenkwort_patrol_destination } }
	}
	auto_move_to_planet = {
		target = event_target:wenkwort_patrol_destination
		clear_auto_move_on_arrival = no
		arrival_effect = wenkwort_continue_patrol
	}
}

hegemony_join_operation_reward = {
	federation = {
		switch = {
			trigger = has_federation_flag
			hegemony_joint_operation_complete_success = {
				if = {
					limit = {
						NOT = { federation_level = 5 }
					}
					add_federation_experience = 1000
				}
				else = {
					add_cohesion = 100
				}
				event_target:federation_leader = {
					capital_scope = {
						add_deposit = d_federation_hegemony_monument_2
						create_ambient_object = {
							type = federation_hegemony_monument
							location = this
							scale = 0.6
						}
					}
				}
				hidden_effect = { set_federation_flag = had_successful_hegemony_joint_operation }
			}
			hegemony_joint_operation_partial_success = {
				if = {
					limit = {
						NOT = { federation_level = 5 }
					}
					add_federation_experience = 500
				}
				else = {
					add_cohesion = 50
				}
				event_target:federation_leader = {
					capital_scope = {
						add_deposit = d_federation_hegemony_monument_1
						create_ambient_object = {
							type = federation_hegemony_monument
							location = this
							scale = 0.6
						}
					}
				}
				hidden_effect = { set_federation_flag = had_successful_hegemony_joint_operation }
			}
			hegemony_joint_operation_partial_failure = {
				if = {
					limit = {
						NOT = { federation_level = 5 }
					}
					add_federation_experience = 250
				}
				else = {
					add_cohesion = 25
				}
			}
			hegemony_joint_operation_complete_failure = {
				add_cohesion = -50
				event_target:federation_leader = {
					add_resource = {
						influence = -50
					}
				}
			}
		}
	}
}

shattered_ring_world_conversion_effect = {
	export_trigger_value_to_variable = {
		trigger = num_districts
		parameters = {
			type = $DISTRICT$
		}
		variable = $VARIABLE$
	}
	multiply_variable = { which = $VARIABLE$ value = 4 }
	divide_variable = { which = $VARIABLE$ value = 5 }
	floor_variable = $VARIABLE$
	while = {
		count = $VARIABLE$
		remove_district = $DISTRICT$
	}
	clear_variable = $VARIABLE$
}

relic_world_conversion_effect = {
	export_trigger_value_to_variable = {
		trigger = num_districts
		parameters = {
			type = $DISTRICT$
		}
		variable = $VARIABLE$
	}
	divide_variable = { which = $VARIABLE$ value = 2 }
	floor_variable = $VARIABLE$
	while = {
		count = $VARIABLE$
		remove_district = $DISTRICT$
	}
	clear_variable = $VARIABLE$
}

set_industrial_focus_flags =  {
	if = {
		limit = {
			has_designation = col_factory
		}
		set_planet_flag = factory_planet
	}
	else_if = {
		limit = {
			has_designation = col_foundry
		}
		set_planet_flag = foundry_planet
	}
}

set_ecu_industrial_districts_effect = {
	if = {
		limit = {
			has_planet_flag = factory_planet
		}
		remove_planet_flag = factory_planet
		swap_districts_effect = {
			DISTRICT1 = district_arcology_arms_industry
			DISTRICT2 = district_arcology_civilian_industry
		}
	}
	else_if = {
		limit = {
			has_planet_flag = foundry_planet
		}
		remove_planet_flag = foundry_planet
	}
	else = {
		split_districts_effect = {
			DISTRICT1 = district_arcology_arms_industry
			DISTRICT2 = district_arcology_civilian_industry
		}
	}
}

swap_districts_effect = {
	export_trigger_value_to_variable = {
		trigger = num_districts
		parameters = {
			type = $DISTRICT1$
		}
		variable = swap_districts_variable
	}
	while = {
		count = swap_districts_variable
		remove_district = $DISTRICT1$
		add_district_if_possible_effect = {
			district = $DISTRICT2$
		}
	}
	clear_variable = swap_districts_variable
}

split_districts_effect = {
	export_trigger_value_to_variable = {
		trigger = num_districts
		parameters = {
			type = $DISTRICT1$
		}
		variable = split_districts_variable
	}
	divide_variable = { which = split_districts_variable value = 2 }
	floor_variable = split_districts_variable
	while = {
		count = split_districts_variable
		remove_district = $DISTRICT1$
		add_district_if_possible_effect = {
			district = $DISTRICT2$
		}
	}
	clear_variable = split_districts_variable
}

spawn_shattered_ring_guaranteed_1_effect = {
	spawn_planet = {
		class = "pc_ringworld_tech"
		name = "NAME_Ring_Section"
		orbit_angle = -30
		orbit_distance = 45
	}
	spawn_planet = {
		class = "pc_ringworld_seam"
		name = "NAME_Ring_Section"
		orbit_angle = 0
		orbit_distance = 45
	}

	spawn_planet = {
		class = "pc_shattered_ring_habitable"
		name = "NAME_Habitable_Section_B"
		orbit_angle = 30
		orbit_distance = 45
		deposit_blockers = none
		modifiers = none
		flags = { ignore_startup_effect megastructure }
		init_effect = {
			prevent_anomaly = yes
			shattered_ring_blocker_effect = yes
		}
	}
}

spawn_shattered_ring_guaranteed_2_effect = {
	spawn_planet = {
		class = "pc_ringworld_seam"
		name = "NAME_Ring_Section"
		orbit_angle = 150
		orbit_distance = 45
	}

	spawn_planet = {
		class = "pc_ringworld_tech"
		name = "NAME_Ring_Section"
		orbit_angle = 180
		orbit_distance = 45
	}

	spawn_planet = {
		class = "pc_shattered_ring_habitable"
		name = "NAME_Habitable_Section_D"
		orbit_angle = 210
		orbit_distance = 45
		deposit_blockers = none
		modifiers = none
		flags = { ignore_startup_effect megastructure }
		init_effect = {
			prevent_anomaly = yes
			shattered_ring_blocker_effect = yes
		}
	}
}

shattered_ring_blocker_effect = {
	# Shattered rings start with 25 district slots.

	# -2 Districts (23 total)
	while = {
		count = 2
		random_list = {
			1 = { add_deposit = d_segment_rubble_1 }
			1 = { add_deposit = d_segment_rubble_1_small }
			1 = { add_deposit = d_segment_rubble_2 }
			1 = { add_deposit = d_segment_rubble_3 }
			1 = { add_deposit = d_segment_rubble_4 }
		}
	}

	# -8 Districts
	add_deposit = d_sr_diurnal_regulator
	add_deposit = d_sr_vacuum_fields
	add_deposit = d_sr_ring_gyros
	add_deposit = d_sr_power_grid

	# -10 Disticts
	add_deposit = d_decrepit_tunnels_2
	add_deposit = d_decrepit_tunnels_2
	add_deposit = d_decrepit_tunnels_2
	add_deposit = d_decrepit_tunnels_2
	add_deposit = d_decrepit_tunnels_2


	# -5 Districts
	add_deposit = d_malfunctioning_reactor
}

add_deposit_if_missing = {
	if = {
		limit = {
			NOT = {
				has_deposit = $DEPOSIT$
			}
		}
		add_deposit = $DEPOSIT$
	}
}

spawn_habitat_effect = {
	spawn_planet = {
		class = "pc_habitat"
		location = event_target:target_planet
		orbit_location = yes
		orbit_angle_offset = 135
		orbit_distance_offset = $DISTANCE$
		size = 6
		has_ring = no

		init_effect = {
			set_name = {
				key = HABITAT_PLANET_NAME
				variable_string = "\\[FROM.from.solar_system.GetName]"
			}
			set_planet_entity = {
				entity = "habitat_phase_03_entity"
				graphical_culture = fromfrom
			}
			set_surveyed = {
				surveyed = yes
				surveyor = FROM
			}
			set_all_comms_surveyed = yes
			clear_blockers = yes

			set_planet_flag = megastructure
			set_planet_flag = habitat
			set_planet_flag = habitat_level_1
			save_event_target_as = target_habitat
			add_deposit_if_missing = {
				DEPOSIT = d_system_resources
			}
			add_deposit_if_missing = {
				DEPOSIT = d_orbital_research
			}
			add_deposit_if_missing = {
				DEPOSIT = d_orbital_energy
			}
			add_deposit_if_missing = {
				DEPOSIT = d_orbital_mining
			}
			event_target:target_planet = {
				set_planet_flag = habitat@PREV
			}
		}
	}
}

increase_habitat_level_effect = {
	switch = {
		trigger = has_planet_flag
		habitat_level_1 = {
			remove_planet_flag = habitat_level_1
			set_planet_flag = habitat_level_2
		}
		habitat_level_2 = {
			remove_planet_flag = habitat_level_2
			set_planet_flag = habitat_level_3
		}
		habitat_level_3 = {
			remove_planet_flag = habitat_level_3
			set_planet_flag = habitat_level_4
		}
		habitat_level_4 = {
			remove_planet_flag = habitat_level_4
			set_planet_flag = habitat_level_5
		}
		habitat_level_5 = {
			remove_planet_flag = habitat_level_5
			set_planet_flag = habitat_level_6
		}
		habitat_level_6 = {
			remove_planet_flag = habitat_level_6
			set_planet_flag = habitat_level_7
		}
		habitat_level_7 = {
			remove_planet_flag = habitat_level_7
			set_planet_flag = habitat_level_8
		}
		habitat_level_8 = {
			remove_planet_flag = habitat_level_8
			set_planet_flag = habitat_level_9
		}
		habitat_level_9 = {
			remove_planet_flag = habitat_level_9
			set_planet_flag = habitat_level_10
		}
		habitat_level_10 = {
			# Do nothing as the habitat is at max level
		}
	}
}

decrease_habitat_level_effect = {
	switch = {
		trigger = has_planet_flag
		habitat_level_10 = {
			remove_planet_flag = habitat_level_10
			set_planet_flag = habitat_level_9
		}
		habitat_level_9 = {
			remove_planet_flag = habitat_level_9
			set_planet_flag = habitat_level_8
		}
		habitat_level_8 = {
			remove_planet_flag = habitat_level_8
			set_planet_flag = habitat_level_7
		}
		habitat_level_7 = {
			remove_planet_flag = habitat_level_7
			set_planet_flag = habitat_level_6
		}
		habitat_level_6 = {
			remove_planet_flag = habitat_level_6
			set_planet_flag = habitat_level_5
		}
		habitat_level_5 = {
			remove_planet_flag = habitat_level_5
			set_planet_flag = habitat_level_4
		}
		habitat_level_4 = {
			remove_planet_flag = habitat_level_4
			set_planet_flag = habitat_level_3
		}
		habitat_level_3 = {
			remove_planet_flag = habitat_level_3
			set_planet_flag = habitat_level_2
		}
		habitat_level_2 = {
			remove_planet_flag = habitat_level_2
			set_planet_flag = habitat_level_1
		}
		habitat_level_1 = {
			# Do nothing as the habitat is at min level
		}
	}
}

on_orbital_complete_effect = {
	fromfrom.solar_system = {
		random_system_planet = {
			limit = {
				has_planet_flag = habitat
			}
			save_event_target_as = target_habitat
		}
	}
	event_target:target_planet = {
		set_planet_flag = has_megastructure

		if = {
			limit = { has_orbital_station = yes }
			orbital_station = {
				dismantle = yes
			}
		}

		create_fleet = {
			effect = {
				set_owner = FROM
				create_ship = {
					random_existing_design = $BODY$_orbital_$TYPE$
					effect = {
						set_disable_at_health = 0.05
						set_name = {
							key = TARGET_ORBITAL_NAME
							variable_string = "\\[FROM.from.planet.GetName]"
						}
					}
				}
				save_event_target_as = target_orbital
				fleet = {
					set_location = {
						target = event_target:target_planet
					}
				}
			}
		}
		event_target:target_orbital = {
			set_name = {
				key = TARGET_ORBITAL_NAME
				variable_string = "\\[FROM.from.planet.GetName]"
			}
		}

		set_habitat_planetary_features_effect = yes

		if = {
			limit = {
				event_target:target_planet = {
					has_deposit_for = shipclass_research_station
				}
			}
			event_target:target_orbital = {
				set_fleet_flag = science_orbital
			}
		}
		if = {
			limit = {
				event_target:target_planet = {
					has_orbital_mining_deposit = yes
				}
			}
			event_target:target_orbital = {
				set_fleet_flag = mining_orbital
			}
		}
		if = {
			limit = {
				event_target:target_planet = {
					has_orbital_energy_deposit = yes
				}
			}
			event_target:target_orbital = {
				set_fleet_flag = energy_orbital
			}
		}
	}
	remove_megastructure = fromfrom
}

set_habitat_planetary_features_effect = {
	if = {
		limit = {
			event_target:target_planet = { has_deposit = d_exotic_gases_1 }
		}
		event_target:target_habitat = {
			add_deposit = d_hab_gas_1
			last_added_deposit = {
				set_deposit_flag = planet@event_target:target_planet
			}
		}
	}
	if = {
		limit = {
			event_target:target_planet = { has_deposit = d_exotic_gases_2 }
		}
		event_target:target_habitat = {
			add_deposit = d_hab_gas_2
			last_added_deposit = {
				set_deposit_flag = planet@event_target:target_planet
			}
		}
	}
	if = {
		limit = {
			event_target:target_planet = { has_deposit = d_exotic_gases_3 }
		}
		event_target:target_habitat = {
			add_deposit = d_hab_gas_3
			last_added_deposit = {
				set_deposit_flag = planet@event_target:target_planet
			}
		}
	}
	if = {
		limit = {
			event_target:target_planet = { has_deposit = d_exotic_gases_4 }
		}
		event_target:target_habitat = {
			add_deposit = d_hab_gas_4
			last_added_deposit = {
				set_deposit_flag = planet@event_target:target_planet
			}
		}
	}
	if = {
		limit = {
			event_target:target_planet = { has_deposit = d_exotic_gases_5 }
		}
		event_target:target_habitat = {
			add_deposit = d_hab_gas_5
			last_added_deposit = {
				set_deposit_flag = planet@event_target:target_planet
			}
		}
	}

	if = {
		limit = {
			event_target:target_planet = { has_deposit = d_rare_crystals_1 }
		}
		event_target:target_habitat = {
			add_deposit = d_hab_crystal_1
			last_added_deposit = {
				set_deposit_flag = planet@event_target:target_planet
			}
		}
	}
	if = {
		limit = {
			event_target:target_planet = { has_deposit = d_rare_crystals_2 }
		}
		event_target:target_habitat = {
			add_deposit = d_hab_crystal_2
			last_added_deposit = {
				set_deposit_flag = planet@event_target:target_planet
			}
		}
	}
	if = {
		limit = {
			event_target:target_planet = { has_deposit = d_rare_crystals_3 }
		}
		event_target:target_habitat = {
			add_deposit = d_hab_crystal_3
			last_added_deposit = {
				set_deposit_flag = planet@event_target:target_planet
			}
		}
	}
	if = {
		limit = {
			event_target:target_planet = { has_deposit = d_rare_crystals_4 }
		}
		event_target:target_habitat = {
			add_deposit = d_hab_crystal_4
			last_added_deposit = {
				set_deposit_flag = planet@event_target:target_planet
			}
		}
	}
	if = {
		limit = {
			event_target:target_planet = { has_deposit = d_rare_crystals_5 }
		}
		event_target:target_habitat = {
			add_deposit = d_hab_crystal_5
			last_added_deposit = {
				set_deposit_flag = planet@event_target:target_planet
			}
		}
	}

	if = {
		limit = {
			event_target:target_planet = { has_deposit = d_volatile_motes_1 }
		}
		event_target:target_habitat = {
			add_deposit = d_hab_mote_1
			last_added_deposit = {
				set_deposit_flag = planet@event_target:target_planet
			}
		}
	}
	if = {
		limit = {
			event_target:target_planet = { has_deposit = d_volatile_motes_2 }
		}
		event_target:target_habitat = {
			add_deposit = d_hab_mote_2
			last_added_deposit = {
				set_deposit_flag = planet@event_target:target_planet
			}
		}
	}
	if = {
		limit = {
			event_target:target_planet = { has_deposit = d_volatile_motes_3 }
		}
		event_target:target_habitat = {
			add_deposit = d_hab_mote_3
			last_added_deposit = {
				set_deposit_flag = planet@event_target:target_planet
			}
		}
	}
	if = {
		limit = {
			event_target:target_planet = { has_deposit = d_volatile_motes_4 }
		}
		event_target:target_habitat = {
			add_deposit = d_hab_mote_4
			last_added_deposit = {
				set_deposit_flag = planet@event_target:target_planet
			}
		}
	}
	if = {
		limit = {
			event_target:target_planet = { has_deposit = d_volatile_motes_5 }
		}
		event_target:target_habitat = {
			add_deposit = d_hab_mote_5
			last_added_deposit = {
				set_deposit_flag = planet@event_target:target_planet
			}
		}
	}

	if = {
		limit = {
			event_target:target_planet = { has_deposit = d_zro_deposit_1 }
		}
		event_target:target_habitat = {
			add_deposit = d_hab_zro_1
			last_added_deposit = {
				set_deposit_flag = planet@event_target:target_planet
			}
		}
	}

	if = {
		limit = {
			event_target:target_planet = { has_deposit = d_zro_deposit_2 }
		}
		event_target:target_habitat = {
			add_deposit = d_hab_zro_2
			last_added_deposit = {
				set_deposit_flag = planet@event_target:target_planet
			}
		}
	}

	if = {
		limit = {
			event_target:target_planet = { has_deposit = d_zro_deposit_3 }
		}
		event_target:target_habitat = {
			add_deposit = d_hab_zro_3
			last_added_deposit = {
				set_deposit_flag = planet@event_target:target_planet
			}
		}
	}

	if = {
		limit = {
			event_target:target_planet = { has_deposit = d_zro_deposit_4 }
		}
		event_target:target_habitat = {
			add_deposit = d_hab_zro_4
			last_added_deposit = {
				set_deposit_flag = planet@event_target:target_planet
			}
		}
	}

	if = {
		limit = {
			event_target:target_planet = { has_deposit = d_zro_deposit_5 }
		}
		event_target:target_habitat = {
			add_deposit = d_hab_zro_5
			last_added_deposit = {
				set_deposit_flag = planet@event_target:target_planet
			}
		}
	}

	if = {
		limit = {
			event_target:target_planet = { has_deposit = d_dark_matter_deposit_1 }
		}
		event_target:target_habitat = {
			add_deposit = d_hab_dark_matter_1
			last_added_deposit = {
				set_deposit_flag = planet@event_target:target_planet
			}
		}
	}

	if = {
		limit = {
			event_target:target_planet = { has_deposit = d_dark_matter_deposit_2 }
		}
		event_target:target_habitat = {
			add_deposit = d_hab_dark_matter_2
			last_added_deposit = {
				set_deposit_flag = planet@event_target:target_planet
			}
		}
	}

	if = {
		limit = {
			event_target:target_planet = { has_deposit = d_dark_matter_deposit_3 }
		}
		event_target:target_habitat = {
			add_deposit = d_hab_dark_matter_3
			last_added_deposit = {
				set_deposit_flag = planet@event_target:target_planet
			}
		}
	}

	if = {
		limit = {
			event_target:target_planet = { has_deposit = d_dark_matter_deposit_10 }
		}
		event_target:target_habitat = {
			add_deposit = d_hab_dark_matter_10
			last_added_deposit = {
				set_deposit_flag = planet@event_target:target_planet
			}
		}
	}

	if = {
		limit = {
			event_target:target_planet = { has_deposit = d_living_metal_deposit }
		}
		event_target:target_habitat = {
			add_deposit = d_hab_living_metal_1
			last_added_deposit = {
				set_deposit_flag = planet@event_target:target_planet
			}
		}
	}

	if = {
		limit = {
			event_target:target_planet = { has_deposit = d_alloys_1 }
		}
		event_target:target_habitat = {
			add_deposit = d_hab_alloy_1
			last_added_deposit = {
				set_deposit_flag = planet@event_target:target_planet
			}
		}
	}

	if = {
		limit = {
			event_target:target_planet = { has_deposit = d_alloys_2 }
		}
		event_target:target_habitat = {
			add_deposit = d_hab_alloy_2
			last_added_deposit = {
				set_deposit_flag = planet@event_target:target_planet
			}
		}
	}

	if = {
		limit = {
			event_target:target_planet = { has_deposit = d_alloys_3 }
		}
		event_target:target_habitat = {
			add_deposit = d_hab_alloy_3
			last_added_deposit = {
				set_deposit_flag = planet@event_target:target_planet
			}
		}
	}

	if = {
		limit = {
			event_target:target_planet = { has_deposit = d_alloys_4 }
		}
		event_target:target_habitat = {
			add_deposit = d_hab_alloy_4
			last_added_deposit = {
				set_deposit_flag = planet@event_target:target_planet
			}
		}
	}

	if = {
		limit = {
			event_target:target_planet = { has_deposit = d_alloys_5 }
		}
		event_target:target_habitat = {
			add_deposit = d_hab_alloy_5
			last_added_deposit = {
				set_deposit_flag = planet@event_target:target_planet
			}
		}
	}
	if = {
		limit = {
			event_target:target_planet = { has_deposit = d_alloys_10 }
		}
		event_target:target_habitat = {
			add_deposit = d_hab_alloy_10
			last_added_deposit = {
				set_deposit_flag = planet@event_target:target_planet
			}
		}
	}

	if = {
		limit = {
			event_target:target_planet = { has_deposit = d_alloys_25 }
		}
		event_target:target_habitat = {
			add_deposit = d_hab_alloy_25
			last_added_deposit = {
				set_deposit_flag = planet@event_target:target_planet
			}
		}
	}

	if = {
		limit = {
			event_target:target_planet = { has_deposit = d_nanites_deposit }
		}
		event_target:target_habitat = {
			add_deposit = d_hab_nanites_1
			last_added_deposit = {
				set_deposit_flag = planet@event_target:target_planet
			}
		}
	}

	if = {
		limit = {
			event_target:target_planet = { has_deposit = d_artifacts_1 }
		}
		event_target:target_habitat = {
			add_deposit = d_artifacts_planet_1
			last_added_deposit = {
				set_deposit_flag = planet@event_target:target_planet
			}
		}
	}

	if = {
		limit = {
			event_target:target_planet = { has_deposit = d_artifacts_2 }
		}
		event_target:target_habitat = {
			add_deposit = d_artifacts_planet_2
			last_added_deposit = {
				set_deposit_flag = planet@event_target:target_planet
			}
		}
	}

	if = {
		limit = {
			event_target:target_planet = { has_deposit = d_artifacts_3 }
		}
		event_target:target_habitat = {
			add_deposit = d_artifacts_planet_3
			last_added_deposit = {
				set_deposit_flag = planet@event_target:target_planet
			}
		}
	}
}

surveyor_update_orbital_effect = {
	event_target:chosen_planet = {
		# Find the orbital and habitat complex and save them as event targets
		if = {
			limit = {
				any_fleet_in_orbit = {
					OR = {
						is_ship_size = major_orbital_resource
						is_ship_size = minor_orbital_resource
					}
				}
			}
			random_fleet_in_orbit = {
				limit = {
					OR = {
						is_ship_size = major_orbital_resource
						is_ship_size = minor_orbital_resource
					}
				}
				save_event_target_as = target_orbital
			}
			solar_system = {
				random_system_planet = {
					limit = {
						has_planet_flag = habitat
					}
					save_event_target_as = target_habitat
				}
			}
		}

		last_added_deposit = {
			switch = {
				trigger = is_deposit_type
				# Energy
				d_energy_5 = {
					event_target:target_orbital = {
						set_fleet_flag = energy_orbital
					}
				}
				d_energy_7 = {
					event_target:target_orbital = {
						set_fleet_flag = energy_orbital
					}
				}
				d_energy_9 = {
					event_target:target_orbital = {
						set_fleet_flag = energy_orbital
					}
				}
				# Minerals
				d_minerals_5 = {
					event_target:target_orbital = {
						set_fleet_flag = mining_orbital
					}
				}
				d_minerals_7 = {
					event_target:target_orbital = {
						set_fleet_flag = mining_orbital
					}
				}
				d_minerals_9 = {
					event_target:target_orbital = {
						set_fleet_flag = mining_orbital
					}
				}
				# Physics Research
				d_physics_5 = {
					event_target:target_orbital = {
						set_fleet_flag = science_orbital
					}
				}
				d_physics_7 = {
					event_target:target_orbital = {
						set_fleet_flag = science_orbital
					}
				}
				d_physics_9 = {
					event_target:target_orbital = {
						set_fleet_flag = science_orbital
					}
				}
				# Society Research
				d_society_5 = {
					event_target:target_orbital = {
						set_fleet_flag = science_orbital
					}
				}
				d_society_7 = {
					event_target:target_orbital = {
						set_fleet_flag = science_orbital
					}
				}
				d_society_9 = {
					event_target:target_orbital = {
						set_fleet_flag = science_orbital
					}
				}
				# Engineering Research
				d_engineering_5 = {
					event_target:target_orbital = {
						set_fleet_flag = science_orbital
					}
				}
				d_engineering_7 = {
					event_target:target_orbital = {
						set_fleet_flag = science_orbital
					}
				}
				d_engineering_9 = {
					event_target:target_orbital = {
						set_fleet_flag = science_orbital
					}
				}
				# Alloys
				d_alloys_3 = {
					event_target:target_orbital = {
						set_fleet_flag = mining_orbital
					}
					event_target:target_habitat = {
						add_deposit = d_hab_alloy_3
						last_added_deposit = {
							set_deposit_flag = planet@event_target:chosen_planet
						}
					}
				}
				d_alloys_4 = {
					event_target:target_orbital = {
						set_fleet_flag = mining_orbital
					}
					event_target:target_habitat = {
						add_deposit = d_hab_alloy_4
						last_added_deposit = {
							set_deposit_flag = planet@event_target:chosen_planet
						}
					}
				}
				d_alloys_5 = {
					event_target:target_orbital = {
						set_fleet_flag = mining_orbital
					}
					event_target:target_habitat = {
						add_deposit = d_hab_alloy_5
						last_added_deposit = {
							set_deposit_flag = planet@event_target:chosen_planet
						}
					}
				}
				# Exotic Gases
				d_exotic_gases_1 = {
					event_target:target_habitat = {
						add_deposit = d_hab_gas_1
						last_added_deposit = {
							set_deposit_flag = planet@event_target:chosen_planet
						}
					}
				}
				d_exotic_gases_2 = {
					event_target:target_habitat = {
						add_deposit = d_hab_gas_2
						last_added_deposit = {
							set_deposit_flag = planet@event_target:chosen_planet
						}
					}
				}
				d_exotic_gases_3 = {
					event_target:target_habitat = {
						add_deposit = d_hab_gas_3
						last_added_deposit = {
							set_deposit_flag = planet@event_target:chosen_planet
						}
					}
				}
				# Rare Crystals
				d_rare_crystals_1 = {
					event_target:target_habitat = {
						add_deposit = d_hab_crystal_1
						last_added_deposit = {
							set_deposit_flag = planet@event_target:chosen_planet
						}
					}
				}
				d_rare_crystals_2 = {
					event_target:target_habitat = {
						add_deposit = d_hab_crystal_2
						last_added_deposit = {
							set_deposit_flag = planet@event_target:chosen_planet
						}
					}
				}
				d_rare_crystals_3 = {
					event_target:target_habitat = {
						add_deposit = d_hab_crystal_3
						last_added_deposit = {
							set_deposit_flag = planet@event_target:chosen_planet
						}
					}
				}
				# Volatile Motes
				d_volatile_motes_1 = {
					event_target:target_habitat = {
						add_deposit = d_hab_mote_1
						last_added_deposit = {
							set_deposit_flag = planet@event_target:chosen_planet
						}
					}
				}
				d_volatile_motes_2 = {
					event_target:target_habitat = {
						add_deposit = d_hab_mote_2
						last_added_deposit = {
							set_deposit_flag = planet@event_target:chosen_planet
						}
					}
				}
				d_volatile_motes_3 = {
					event_target:target_habitat = {
						add_deposit = d_hab_mote_3
						last_added_deposit = {
							set_deposit_flag = planet@event_target:chosen_planet
						}
					}
				}
			}
		}
	}
}

# country scope | event_target:scion_master = Overlord country; event_target:fe_species = Overlord species
create_scion_leader = {
	create_leader = {
		name = random
		species = event_target:fe_species
		class = $CLASS$
		skill = 7
		traits = {
			0 = leader_trait_ancient_knowledge
			1 = leader_trait_stubborn_2
		}
		randomize_traits = yes
		event_leader = yes
		immortal = no
		hide_age = yes
		can_assign_to_council = yes
		effect = {
			set_leader_flag = fe_gifted_leader
			set_leader_flag = renowned_leader
			save_event_target_as = fe_gifted_leader
			fire_on_action = {
				on_action = on_leader_hired
			}
		}
		custom_description = scion_leader_desc
		custom_catch_phrase = scion_leader_catch_phrase
		skip_background_generation = no
		background_planet = event_target:scion_master.capital_scope
		background_job = fe_overseer
		background_ethic = ethic_xenophile
	}
}
