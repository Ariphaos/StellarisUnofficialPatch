

ariphaos_patch_remove_habitat = {
	# spawn_habitat_cracker_effect now handles destruction.
	#save_event_target_as = habitat_to_remove
	#solar_system= { 
	#	random_system_planet = { 
	#	limit = { any_moon = { is_planet = event_target:habitat_to_remove } } 
	#		remove_planet_flag = has_megastructure 
	#	} 
	#}
	#destroy_colony = yes
	#remove_planet = yes
}

# We basically reimplement the on_action here.
ariphaos_patch_purge_pop = {
	planet = {
		fire_on_action = { on_action = on_pop_purged scopes = { from = controller fromfrom = prev } }
	}
	if = {
		limit = { exists = pop }
		kill_pop = yes
	}
}

ariphaos_patch_leader_change_traits = {
	###########################################
	# Erudite
	###########################################
	if = {
		limit = {
			species = { 
				has_trait = trait_erudite 
				NOR = {
					has_trait = trait_machine_unit
					has_trait = trait_mechanical
				}
			}
			NOR = {
				has_trait = leader_trait_erudite
				has_leader_flag = renowned_leader
				has_leader_flag = legendary_leader
			}
		}
		add_trait_no_notify = leader_trait_erudite
	}
	
	# Remove
	if = {
		limit = {
			has_trait = leader_trait_erudite
			species = {
				OR = {
					NOT = { has_trait = trait_erudite }
					has_trait = trait_machine_unit
					has_trait = trait_mechanical
				}
			}
			NOR = {
				has_leader_flag = renowned_leader
				has_leader_flag = legendary_leader
			}
		}
		remove_trait = leader_trait_erudite
	}

	###########################################
	# Cyborg
	###########################################
	
	if = {
		limit = {
			species = { 
				has_trait = trait_cybernetic 
				NOR = {
					has_trait = trait_machine_unit
					has_trait = trait_mechanical
				}
			}
			NOR = {
				has_trait = leader_trait_cyborg
				has_leader_flag = renowned_leader
				has_leader_flag = legendary_leader
			}
		}
		add_trait_no_notify = leader_trait_cyborg
	}
	
	# Remove
	if = {
		limit = {
			has_trait = leader_trait_cyborg
			species = {
				OR = {
					NOT = { has_trait = trait_cybernetic }
					has_trait = trait_machine_unit
					has_trait = trait_mechanical
				}
			}
			NOR = {
				has_leader_flag = renowned_leader
				has_leader_flag = legendary_leader
			}
		}
		remove_trait = leader_trait_cyborg
	}
	
	###########################################
	# Synthetic
	###########################################
	
	if = {
		limit = {
			species = { 
				has_trait = trait_mechanical
			}
			NOR = {
				has_trait = leader_trait_synthetic
				has_leader_flag = renowned_leader
				has_leader_flag = legendary_leader
			}
		}
		add_trait_no_notify = leader_trait_synthetic
	}
	
	# Remove
	if = {
		limit = {
			has_trait = leader_trait_synthetic
			species = {
				OR = {
					NOT = { has_trait = trait_mechanical }
				}
			}
			NOR = {
				has_leader_flag = renowned_leader
				has_leader_flag = legendary_leader
			}
		}
		remove_trait = leader_trait_synthetic
	}
	
	###########################################
	# Psionic
	###########################################
	
	if = {
		limit = {
			species = { 
				has_trait = trait_psionic
				NOR = {
					has_trait = trait_machine_unit
					has_trait = trait_mechanical
				}
			}
			has_psionic_leader_trait = no
			NOR = {
				has_leader_flag = renowned_leader
				has_leader_flag = legendary_leader
			}
		}
		add_trait_no_notify = leader_trait_psionic
	}
	
	# Remove
	if = {
		limit = {
			has_trait = leader_trait_psionic
			species = {
				OR = {
					NOT = { has_trait = trait_psionic }
					has_trait = trait_machine_unit
					has_trait = trait_mechanical
				}
			}
			NOR = {
				has_leader_flag = renowned_leader
				has_leader_flag = legendary_leader
			}
		}
		remove_trait = leader_trait_psionic
	}
	
	###########################################
	# Aquatic
	###########################################
	
#	if = {
#		limit = {
#			species = {
#				has_trait = trait_aquatic
#				NOT = { has_trait = leader_trait_aquatic_admiral }
#			}
#			leader_class = admiral
#		}
#		add_trait = leader_trait_aquatic_admiral
#	}
	
#	if = {
#		limit = {
#			species = {
#				has_trait = leader_trait_aquatic_admiral
#				NOT = { has_trait = trait_aquatic }
#			}
#		}
#		remove_trait = leader_trait_aquatic_admiral
#	}
}