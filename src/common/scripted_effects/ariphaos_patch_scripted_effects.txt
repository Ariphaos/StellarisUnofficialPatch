

# We basically reimplement the on_action here.
ariphaos_patch_purge_pop = {
	planet = {
		fire_on_action = { on_action = on_pop_purged scopes = { from = controller fromfrom = prev } }
	}
	if = {
		limit = { exists = pop }
		kill_pop = yes
	}
}

ariphaos_patch_primitive_world_conquered = {
			# Add appropriate capital
			if = {
				limit = {
					is_planet_class = pc_habitat
					has_building = building_capital
				}
				remove_building = building_capital
				add_building = building_hab_capital
			}
			# Add districts (Ringworlds & Habitats first)
			if = {
				limit = {
					is_planet_class = pc_ringworld_habitable
				}
				add_district = district_rw_city
				break = yes
			}
			if = {
				limit = {
					is_planet_class = pc_habitat
				}
				break = yes
			}
			# Add districts (planets)
			if = {
				limit = {
					sapient_pop_amount <= 500
				}
				add_district = district_city
				add_district = district_farming
				break = yes
			}
			if = {
				limit = {
					sapient_pop_amount >= 500
					sapient_pop_amount <= 1000
				}
				add_district = district_city
				add_district = district_farming
				break = yes
			}
			if = {
				limit = {
					sapient_pop_amount >= 1000
					sapient_pop_amount <= 1500
				}
				add_district = district_city
				add_district = district_city
				add_district = district_farming
				add_district = district_mining
				break = yes
			}
			if = {
				limit = {
					sapient_pop_amount >= 1500
					sapient_pop_amount <= 2000
				}
				add_district = district_city
				add_district = district_city
				add_district = district_farming
				add_district = district_farming
				add_district = district_mining
				add_district = district_mining
				break = yes
			}
			if = {
				limit = {
					sapient_pop_amount >= 2000
					sapient_pop_amount <= 2500
				}
				add_district = district_city
				add_district = district_city
				add_district = district_city
				add_district = district_farming
				add_district = district_farming
				add_district = district_mining
				add_district = district_mining
				break = yes
			}
			if = {
				limit = {
					sapient_pop_amount >= 2500
					sapient_pop_amount <= 3000
				}
				add_district = district_city
				add_district = district_city
				add_district = district_city
				add_district = district_city
				add_district = district_farming
				add_district = district_farming
				add_district = district_mining
				add_district = district_mining
				add_district = district_generator
				break = yes
			}
			if = {
				limit = {
					sapient_pop_amount >= 3000
					#sapient_pop_amount <= 3500
				}
				add_district = district_city
				add_district = district_city
				add_district = district_city
				add_district = district_city
				add_district = district_city
				add_district = district_farming
				add_district = district_farming
				add_district = district_mining
				add_district = district_mining
				add_district = district_generator
				break = yes
			}
}

ariphaos_patch_leader_change_traits = {
	###########################################
	# Erudite
	###########################################
	if = {
		limit = {
			species = { 
				has_trait = trait_erudite 
				NOR = {
					has_trait = trait_machine_unit
					has_trait = trait_mechanical
				}
			}
			NOR = {
				has_trait = leader_trait_erudite
				has_leader_flag = renowned_leader
				has_leader_flag = legendary_leader
			}
		}
		add_trait = { 
			trait = leader_trait_erudite
			show_message = no
		}
	}
	
	# Remove
	if = {
		limit = {
			has_trait = leader_trait_erudite
			species = {
				OR = {
					NOT = { has_trait = trait_erudite }
					has_trait = trait_machine_unit
					has_trait = trait_mechanical
				}
			}
			NOR = {
				has_leader_flag = renowned_leader
				has_leader_flag = legendary_leader
			}
		}
		remove_trait = leader_trait_erudite
	}

	###########################################
	# Limited Cyborg
	###########################################
	
	if = {
		limit = {
			species = { 
				has_trait = trait_limited_cybernetic 
				NOR = {
					has_trait = trait_machine_unit
					has_trait = trait_mechanical
				}
			}
			NOR = {
				has_trait = leader_trait_limited_cyborg
				has_chosen_one_leader_trait = yes
				has_leader_flag = renowned_leader
				has_leader_flag = legendary_leader
			}
		}
		add_trait = { 
			trait = leader_trait_limited_cyborg
			show_message = no
		}
	}
	
	# Remove
	if = {
		limit = {
			has_trait = leader_trait_limited_cyborg
			OR = {
				has_chosen_one_leader_trait = yes
				species = {
					OR = {
						NOT = { has_trait = trait_limited_cybernetic }
						has_trait = trait_machine_unit
						has_trait = trait_mechanical
					}
				}
			}
			NOR = {
				has_leader_flag = renowned_leader
				has_leader_flag = legendary_leader
			}
		}
		remove_trait = leader_trait_limited_cyborg
	}

	###########################################
	# Cyborg
	###########################################
	
	if = {
		limit = {
			species = { 
				has_trait = trait_cybernetic 
				NOR = {
					has_trait = trait_machine_unit
					has_trait = trait_mechanical
				}
			}
			NOR = {
				has_trait = leader_trait_cyborg
				has_chosen_one_leader_trait = yes
				has_leader_flag = renowned_leader
				has_leader_flag = legendary_leader
			}
		}
		add_trait = { 
			trait = leader_trait_cyborg
			show_message = no
		}
	}
	
	# Remove
	if = {
		limit = {
			has_trait = leader_trait_cyborg
			OR = {
				has_chosen_one_leader_trait = yes
				species = {
					OR = {
						NOT = { has_trait = trait_cybernetic }
						has_trait = trait_machine_unit
						has_trait = trait_mechanical
					}
				}
			}
			NOR = {
				has_leader_flag = renowned_leader
				has_leader_flag = legendary_leader
			}
		}
		remove_trait = leader_trait_cyborg
	}
	
	###########################################
	# Synthetic
	###########################################
	
	if = {
		limit = {
			owner = {
				OR = {
					has_tradition = tr_synthetics_finish
					has_tradition = tr_modularity_finish
				}
			}
			species = { 
				OR = {
					has_trait = trait_machine_unit
					has_trait = trait_mechanical
				}
			}
			NOR = {
				has_trait = leader_trait_synthetic
				has_leader_flag = renowned_leader
				has_leader_flag = legendary_leader
			}
		}
		add_trait = { 
			trait = leader_trait_synthetic
			show_message = no
		}
	}
	
	# Remove
	if = {
		limit = {
			has_trait = leader_trait_synthetic
			NOR = {
				has_leader_flag = renowned_leader
				has_leader_flag = legendary_leader
			}
			OR = {
				owner = {
					NOR = {
						has_tradition = tr_synthetics_finish
						has_tradition = tr_modularity_finish
					}
				}
				species = {
					NOR = {
						has_trait = trait_mechanical
						has_trait = trait_machine_unit
					}
				}
			}
		}
		remove_trait = leader_trait_synthetic
	}
	
	###########################################
	# Psionic
	###########################################
	
	if = {
		limit = {
			species = { 
				has_trait = trait_psionic
				NOR = {
					has_trait = trait_machine_unit
					has_trait = trait_mechanical
					has_trait = trait_limited_cybernetic
					has_trait = trait_cybernetic
				}
			}
			has_psionic_leader_trait = no
			NOR = {
				has_leader_flag = renowned_leader
				has_leader_flag = legendary_leader
			}
		}
		add_trait = { 
			trait = leader_trait_psionic
			show_message = no
		}
	}
	
	# Remove
	if = {
		limit = {
			has_trait = leader_trait_psionic
			species = {
				OR = {
					NOR = {
						has_trait = trait_psionic
						has_trait = trait_latent_psionic
					}
					has_trait = trait_machine_unit
					has_trait = trait_mechanical
					has_trait = trait_limited_cybernetic
					has_trait = trait_cybernetic
					has_chosen_one_leader_trait = yes # Catch places it may have snuck in.
				}
			}
			NOR = {
				has_leader_flag = renowned_leader
				has_leader_flag = legendary_leader
			}
		}
		remove_trait = leader_trait_psionic
	}
}

ariphaos_patch_count_armies = {
		every_playable_country = {
			set_variable = {
				which = titanic_life_soldier_count
				value = 0
			}
			set_variable = {
				which = titanic_azizian_soldier_count
				value = 0
			}
			set_variable = {
				which = imperial_legion_soldier_count
				value = 0
			}
			every_owned_army = {
				limit = {
					OR = {
						army_type = titanic_assault_army
						army_type = titanic_azizian_assault_army
						army_type = imperial_legion
					}
				}
				switch = {
					trigger = army_type
					titanic_assault_army = { PREV = {
						change_variable = {
							which = titanic_life_soldier_count
							value = 1
						}
					} }
					titanic_azizian_assault_army = { PREV = {
						change_variable = {
							which = titanic_azizian_soldier_count
							value = 1
						}
					} }
					imperial_legion = { PREV = {
						change_variable = {
							which = imperial_legion_soldier_count
							value = 1
						}
					} }
				}
			}
			set_variable = {
				which = titanic_life_soldier_maximum
				value = 0
			}
			every_owned_planet = {
				limit = { has_planet_flag = titanic_life_can_build }
				PREV = {
					change_variable = {
						which = titanic_life_soldier_maximum
						value = @titanic_life_soldier_per_planet_maximum
					}
				}
			}
		}
}