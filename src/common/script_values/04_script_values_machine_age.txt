#############################
# Machine Age Script Values #
#############################

pop_to_cyberize_per_month = {
	#Regular Empires
	modifier = {
		add = 1
		prev = {
			current_situation_approach = situation_cyberization_cautious
		}
	}
	modifier = {
		add = 2
		prev = {
			current_situation_approach = situation_cyberization_streamlined
		}
	}
	modifier = {
		add = 4
		prev = {
			current_situation_approach = situation_cyberization_overdrive
		}
	}
	modifier = {
		add = 2
		prev = {
			has_situation_flag = prioritizing_cyberization
		}
	}
	modifier = {
		subtract = 1
		prev = {
			has_situation_flag = prioritizing_resources
		}
	}
	modifier = {
		add = value:num_active_buildings|BUILDING|building_augmentation_center|
	}
	modifier = {
		set = 0
		owner = {
			OR = {
				prevprev = {
					NOR = {
						has_situation_flag = cyberization_ongoing
						has_situation_flag = cyberization_ongoing_limited
						has_situation_flag = cyberization_ongoing_forced
						has_situation_flag = hive_cyberization_ongoing_limited
					}
				}
				NOT = {
					any_owned_planet = {
						has_active_building = building_augmentation_center
					}
				}
			}
		}
	}
}

pop_to_cyberize_per_month_x100 = {
	base = 0
	modifier = {
		add = value:pop_to_cyberize_per_month
	}
	mult = 100
}

pop_to_cyberize_per_month_creed = {
	#Cyber Creed Empires
	base = 1
	modifier = {
		add = owner.value:num_active_technophant
		desc = cybernetic_creed_number_of_technophant
	}
	modifier = {
		add = owner.value:num_active_haruspex
		desc = cybernetic_creed_number_of_haruspex
	}
	modifier = {
		add = value:num_active_buildings|BUILDING|building_augmentation_center|
	}
	divide = 3
	floor = yes
	modifier = {
		set = 0
		owner = {
			OR = {
				prevprev = {
					NOT = { has_situation_flag = cybernetic_creed_cyberization_ongoing }
				}
				NOT = {
					any_owned_planet = {
						has_active_building = building_augmentation_center
					}
				}
			}
		}
	}
}

pop_to_cyberize_per_month_creed_x100 = {
	base = 0
	modifier = {
		add = value:pop_to_cyberize_per_month_creed
	}
	mult = 100
}

num_active_haruspex = {
	base = 0
	complex_trigger_modifier = {
		trigger = num_assigned_jobs
		parameters = {
			job = bureaucrat
		}
		mode = add
	}
	multiply = 0.005
}

num_active_technophant = {
	base = 0
	complex_trigger_modifier = {
		trigger = num_assigned_jobs
		parameters = {
			job = politician
		}
		mode = add
	}
	multiply = 0.02
}

num_colonies_without_augmentation_centers = {
	complex_trigger_modifier = {
		trigger = count_owned_planet
		trigger_scope = owner
		parameters = {
			limit = {
				is_colony = yes
				NOT = { has_building = building_augmentation_center	}
			}
		}
		mode = add
	}
}

#RulerChip Dead Leader Counter
rulerchip_dead_leader_military = {
	base = 0
	add = num_rulerchip_military
	max = 5
}

rulerchip_dead_leader_scientific = {
	base = 0
	add = num_rulerchip_scientific
	max = 5
}

rulerchip_dead_leader_admin = {
	base = 0
	add = num_rulerchip_admin
	max = 5
}

pop_to_digitize_per_month = {
	#Regular Empires
	modifier = {
		add = 1
		prev = {
			current_situation_approach = situation_digitization_errorcorrecting
		}
	}
	modifier = {
		add = 2
		prev = {
			current_situation_approach = situation_digitization_realtime
		}
	}
	modifier = {
		add = 4
		prev = {
			current_situation_approach = situation_digitization_overclocked
		}
	}
	modifier = {
		add = value:num_active_buildings|BUILDING|building_identity_complex|
	}
	modifier = {
		add = value:num_active_buildings|BUILDING|building_robot_assembly_plant|
	}
	modifier = {
		add = value:num_active_buildings|BUILDING|building_robot_assembly_complex|
	}
	modifier = {
		add = value:num_active_buildings|BUILDING|building_fe_assembly_1|
	}
	modifier = {
		add = value:num_active_buildings|BUILDING|building_fe_assembly_2|
	}
	modifier = {
		set = 0
		owner = {
			OR = {
				prevprev = {
					NOT = {
						has_situation_flag = digitization_ongoing
					}
				}
				NOT = {
					any_owned_planet = {
						has_active_building = building_identity_complex
					}
				}
			}
		}
	}
}

pop_to_digitize_per_month_x100 = {
	base = 0
	add = value:pop_to_digitize_per_month
	multiply = 100
}

pop_to_digitize_per_month_synthetic_fertility = {
	#Synth Fert Empires
	modifier = {
		add = 1
		prev = {
			current_situation_approach = situation_synthetic_fertility_synthesization_careful
		}
	}
	modifier = {
		add = 2
		prev = {
			current_situation_approach = situation_synthetic_fertility_synthesization_full_speed
		}
	}
}

num_identity_complex = {
	complex_trigger_modifier = {
		trigger_scope = owner
		trigger = count_owned_planet
		parameters = {
			limit = {
				has_building = building_identity_complex
			}
		}
		mode = add
	}
}

identity_repository_scaling_mult = {
	base = 0
	add = num_dead_identities
	complex_trigger_modifier = {
		trigger = num_buildings
		parameters = {
			type = building_identity_repository
			disabled = no
		}
		mode = divide
	}
	round = yes
}

num_synth_opposition = {
	base = 0
	add = owner.synth_opposition
	max = 5
}

num_synth_opposition_x100 = {
	base = 0
	add = value:num_synth_opposition
	multiply = 100
}

num_synth_fert_check_the_dead = {
	add = owner.remaining_synth_fert_pops
	subtract = owner.remaining_synth_fert_pops_month_check
	floor = yes
}

num_synth_fert_upload_per_month = {
	base = 0
	add = remaining_synth_fert_pops_month_check
	max = 30
}

num_synth_fert_upload_final = {
	base = 0
	add = remaining_synth_fert_pops_month_check
}

tactical_algorithms_scaling_mult = {
	base = 0
	complex_trigger_modifier = {
		trigger = count_country
		parameters = {
			limit = {
				is_country_type = default
				has_communications = ROOT
				any_owned_leader = {
					leader_class = commander
					is_same_species = ROOT.owner_main_species
					has_trait = leader_trait_tactical_algorithms
				}
			}
		}
		mode = add
	}
	max = 10
}

#Genesis Guides
presapients_guided_mult = {
	base = 0
	modifier = {
		add = presapients_guided
		has_global_flag = game_started
		is_variable_set = presapients_guided
	}
	max = 10
}

virtuality_concentrated_production_mult = {
	base = 1.75
	complex_trigger_modifier = {
		trigger = count_owned_planet
		trigger_scope = owner
		mult = 0.25
		mode = subtract
	}
}

virtuality_num_colonies = {
	base = 0
	complex_trigger_modifier = {
		trigger = count_owned_planet
		trigger_scope = owner
		mult = 0.1
		mode = add
	}
}

crisobj_thesis_value = {
	base = 7500
	complex_trigger_modifier = { #subtract 200 for each playable country that exists
		trigger = count_playable_country
		mode = subtract
		mult = 200
	}
	round_to = 500 	#we want a solid number
	min = 1000 		#and we don't want less than 1000
}

crisobj_thesis_value_bonus = {
	base = 7500
	complex_trigger_modifier = { #subtract 200 for each playable country that exists
		trigger = count_playable_country
		mode = subtract
		mult = 200
	}
	round_to = 500 	#we want a solid number
	min = 1000 		#and we don't want less than 1000
	add = 3500
}

roboticist_branch_office_value_mult = {
	base = 0
	add = planet.modifier:job_roboticist_branch_office_value_mult
}

nanotech_worlds_consumed = {
	base = 0
	add = nanotech_worlds_created
}

nanotech_mult = {
	base = 0
	complex_trigger_modifier = {
		trigger = count_deposits
		parameters = {
			type = d_nanotech_devastation
		}
		mode = add
	}
}

tactical_algorithms_enclave_scaling_mult = {
	base = 0
	complex_trigger_modifier = {
		trigger = count_country
		parameters = {
			limit = {
				is_country_type = enclave_mercenary
				any_owned_leader = {
					is_same_species = ROOT.owner_main_species
				}
			}
		}
		mode = add
	}
	max = 4
}

cuberoot_crisis_strength = {
    base = 1
    complex_trigger_modifier = {
        trigger = check_galaxy_setup_value
        trigger_scope = owner
        parameters = {
            setting = crisis_strength_scale
        }
        mode = mult
    }
    pow = 0.333333 #cuberoot scales nicely
    add = -0.5 #tone things down a little bit
    min = 0.5 #No going below that otherwise situation could break
}

number_human_players_crisis_strength = {
    base = 0
    complex_trigger_modifier = {
        trigger = count_country
        parameters = {
			limit = {
				is_ai = no
			}
        }
		mode = add
    }
    pow = 0.5 #squareroot to average things out
	min = 1
}

num_chip_slave_raw = {
    base = 0
    complex_trigger_modifier = {
        trigger = count_owned_pop_amount
        trigger_scope = planet
        mode = add
        mult = 0.01
    }
}

num_chip_slave_raw_double = {
	base = 0
	add = value:num_chip_slave_raw
	mult = 2
}

num_chip_slave = {
	base = 0
	add = value:num_chip_slave_raw
	divide = 20
}

num_chip_slave_halved = {
	base = 0
	add = value:num_chip_slave_raw
	divide = 40
}

num_pop_groups = {
    base = 0
    complex_trigger_modifier = {
        trigger = count_owned_pop_group
        mode = add
    }
}

num_chip_slave_purge = {
	base = -40
	add = value:num_chip_slave_raw
	mult = 4
    divide = value:num_pop_groups
}

dyson_swarm_limit = {
	base = 0
	add = modifier:dyson_swarm_limit_add
}

arc_furnace_limit = {
	base = 0
	add = modifier:arc_furnace_limit_add
}

paperclips_reward = {
	base = 1
	mult = paperclips_current_amount
	divide = $DIVISOR$
}

nanotech_harvester_deposit_num = {
	base = 0
	complex_trigger_modifier = {
		trigger_scope = solar_system
		trigger = count_system_planet
		parameters = {
			limit = {
				has_mining_station = yes
				has_planet_flag = nanites_doubled_1
			}
		}
		mode = add
	}
	complex_trigger_modifier = {
		trigger_scope = solar_system
		trigger = count_system_planet
		parameters = {
			limit = {
				has_mining_station = yes
				has_planet_flag = nanites_doubled_2
			}
		}
		mult = 2
		mode = add
	}
	complex_trigger_modifier = {
		trigger_scope = solar_system
		trigger = count_system_planet
		parameters = {
			limit = {
				has_mining_station = yes
				has_planet_flag = nanites_doubled_3
			}
		}
		mult = 4
		mode = add
	}
	complex_trigger_modifier = {
		trigger_scope = solar_system
		trigger = count_system_planet
		parameters = {
			limit = {
				has_mining_station = yes
				has_planet_flag = nanites_doubled_4
			}
		}
		mult = 8
		mode = add
	}
	complex_trigger_modifier = {
		trigger_scope = solar_system
		trigger = count_system_planet
		parameters = {
			limit = {
				has_mining_station = yes
				has_planet_flag = nanites_doubled_5
			}
		}
		mult = 16
		mode = add
	}
	complex_trigger_modifier = {
		trigger_scope = solar_system
		trigger = count_system_planet
		parameters = {
			limit = {
				has_mining_station = yes
				has_planet_flag = nanites_doubled_6
			}
		}
		mult = 32
		mode = add
	}
	complex_trigger_modifier = {
		trigger_scope = solar_system
		trigger = count_system_planet
		parameters = {
			limit = {
				has_mining_station = yes
				has_planet_flag = nanites_doubled_7
			}
		}
		mult = 64
		mode = add
	}
	complex_trigger_modifier = {
		trigger_scope = solar_system
		trigger = count_system_planet
		parameters = {
			limit = {
				has_mining_station = yes
				has_planet_flag = nanites_doubled_8
			}
		}
		mult = 128
		mode = add
	}
	complex_trigger_modifier = {
		trigger_scope = solar_system
		trigger = count_system_planet
		parameters = {
			limit = {
				has_mining_station = yes
				has_planet_flag = nanites_doubled_9
			}
		}
		mult = 256
		mode = add
	}
	complex_trigger_modifier = {
		trigger_scope = solar_system
		trigger = count_system_planet
		parameters = {
			limit = {
				has_mining_station = yes
				has_planet_flag = nanites_doubled_10
			}
		}
		mult = 512
		mode = add
	}
	divide = 10
}

num_free_jobs_minus_category = {
	base = 0
	add = trigger:free_jobs
	complex_trigger_modifier = {
		trigger = free_jobs_of_type
		parameters = {
			category = $CATEGORY$
		}
		mode = subtract
	}
}

num_free_virtual_jobs = {
	base = 0
	add = trigger:free_jobs
	complex_trigger_modifier = {
		trigger = free_jobs_of_type
		parameters = {
			category = bio_trophy
		}
		mode = subtract
	}
	complex_trigger_modifier = {
		trigger = free_jobs_of_type
		parameters = {
			job= mortal_initiate
		}
		mode = subtract
	}
	divide = 100
}

max_paperclip_capacity = {
	base = 15000 # max of consumer_goods in 00_strategic_resources.txt
	add = modifier:country_resource_max_consumer_goods_add
	add = modifier:country_resource_max_add
}

num_arc_furnace_planets = {
	base = 0
	complex_trigger_modifier = {
		trigger = count_system_planet
		parameters = {
			limit = {
				NOT = { has_deposit_for = shipclass_research_station }
				is_star = no
				is_astral_scar = no
				colonizable_planet = no
			}
		}
		mode = add
	}
}
