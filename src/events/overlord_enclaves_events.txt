###################################################
#
# "Overlord" Enclave Events
# By Gemma Thomson, Hadrien Buytaers & Chad Inglis
#
###################################################
namespace = enclave

# enclave.1xxx	general-purpose
# enclave.2xxx	Mercenary enclave
# enclave.3xxx	Salvager enclave
# enclave.4xxx	Shroudwalker enclave
# enclave.5xxx	Divination events
# enclave.6xxx	Shroud Tunnel events
# enclave.7xxx	Shroudwalker enclave (appendix)

##################
# GENERAL-PURPOSE
##################

# Shroud Tunnel First Encounter
ship_event = {
	id = enclave.100
	title = "enclave.100.name"
	desc = {
		trigger = {
			owner = { is_gestalt = no }
		}
		text = enclave.100a.desc
	}
	desc = {
		trigger = {
			owner = { is_gestalt = yes }
		}
		text = enclave.100b.desc
	}
	picture = GFX_evt_shroud_tunnel
	show_sound = evn_ove_shroud_tunnel
	location = FROM

	is_triggered_only = yes

	trigger = {
		owner = {
			NOT = {
				has_origin = origin_shroudwalker_apprentice
				has_country_flag = encountered_first_shroud_tunnel
				has_country_flag = built_first_shroud_tunnel
			}
		}
		FROM = {
			OR = {
				has_star_flag = shroud_tunnel_nexus
				has_star_flag = shroud_tunnel_node
			}
		}
	}

	immediate = {
		owner = {
			set_country_flag = encountered_first_shroud_tunnel
			add_seen_bypass_type = shroud_tunnel
		}
	}

	option = {
		name = enclave.100.a
	}
}

#####################
# MERCENARY ENCLAVES
#####################

# Spawn Mercenary enclave
fleet_event = {
	id = enclave.2
	title = "enclave.2.name"
	desc = "enclave.2.desc"
	picture = GFX_evt_mercenary_enclave
	show_sound = event_cityscape
	is_triggered_only = yes

	trigger = {
		is_merc_enclave_founding_allowed = yes
	}

	immediate = {
		set_event_locked = yes
	}

	option = {
		name = DEAL
		custom_tooltip = "enclave.2.a.tooltip"
		allow = {
			is_merc_enclave_founding_allowed = yes
			owner = {
				resource_stockpile_compare = { resource = energy value >= 1500 }
				resource_stockpile_compare = { resource = alloys value >= 2000 }
				resource_stockpile_compare = { resource = influence value >= 100 }
			}
		}
		owner = {
			add_resource = {
				energy = -1500
				alloys = -2000
				influence = -100
			}
		}

		hidden_effect = {
			owner = {
				set_country_flag = tutorial_met_mercenary_enclave
			}
			fleet_event = { id = enclave.21 }
		}

		ai_chance = {
			factor = 10
			modifier = {
				factor = 0
				owner = {
					has_ethic = ethic_fanatic_pacifist
				}
			}
			modifier = {
				factor = 0.1
				owner = {
					has_ethic = ethic_pacifist
				}
			}
			modifier = {
				factor = 5
				owner = {
					has_ethic = ethic_militarist
				}
			}
			modifier = {
				factor = 10
				owner = {
					has_ethic = ethic_fanatic_militarist
				}
			}
			modifier = {
				factor = 5
				owner = {
					is_megacorp = yes
				}
			}
		}
	}

	option = {
		name = NODEAL

		ai_chance = {
			factor = 5
			modifier = {
				factor = 0.1
				owner = {
					OR = {
						has_ethic = ethic_militarist
						has_ethic = ethic_fanatic_militarist
					}
					NOT = { has_ethic = ethic_fanatic_pacifist }
				}
			}
		}
	}

	after = {
		hidden_effect = {
			set_event_locked = no
		}
	}
}

fleet_event = {
	id = enclave.21
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		#Save creator empire as event target
		owner = {
			save_event_target_as = mercenary_enclave_creator
		}
		#Set up the ruler and species
		leader = {
			species = {
				save_event_target_as = mercenary_enclave_species
			}
			exile_leader_as = mercenary_enclave_leader
			save_event_target_as = mercenary_enclave_leader
		}
		#Set up the enclave starbase
		solar_system = {
			set_star_flag = enclave
			set_star_flag = mercenary_enclave_system
			#Set up on a moon only if an asteroid isn't available
			if = {
				limit = {
					count_system_planet = {
						limit = { is_asteroid = yes }
						count < 1
					}
				}
				random_system_planet = {
					limit = { is_moon = yes }
					save_event_target_as = mercenary_enclave_planet
					set_planet_flag = mercenary_enclave_planet
				}
			}
			else = {
				random_system_planet = {
					limit = { is_asteroid = yes }
					save_event_target_as = mercenary_enclave_planet
					set_planet_flag = mercenary_enclave_planet
				}
			}
		}
		#Create the Mercenary country, and assign a flavour ethic. Note that these are applied in priority order, so a patron who is Xenophilic, Authoritarian *and* Materialistic will found an enclave which is Fanatic Militarist and Materialist, as Materialism is listed first.
		if = {
			limit = {
				owner = { is_materialist = yes }
			}
			create_mercenary_enclave_country = { INHERITED_ETHIC = ethic_materialist }
		}
		else_if = {
			limit = {
				owner = { is_xenophobe = yes }
			}
			create_mercenary_enclave_country = { INHERITED_ETHIC = ethic_xenophobe }
		}
		else_if = {
			limit = {
				owner = { is_authoritarian = yes }
			}
			create_mercenary_enclave_country = { INHERITED_ETHIC = ethic_authoritarian }
		}
		else_if = {
			limit = {
				owner = { is_egalitarian = yes }
			}
			create_mercenary_enclave_country = { INHERITED_ETHIC = ethic_egalitarian }
		}
		else = {
			create_mercenary_enclave_country = { INHERITED_ETHIC = ethic_xenophile }
		}


		#Give enclave creator's tech, start situation, and set creator flag
		event_target:mercenary_enclave_country = {
			copy_techs_from = { target = event_target:mercenary_enclave_creator }
			start_situation = {
				type = mercenary_dividends
				target = root
			}
			set_country_flag = created_by@event_target:mercenary_enclave_creator
			add_trust = {
				who =  event_target:mercenary_enclave_creator
				amount = 30
			}
			#Check for active resolutions and give associated modifiers to enclave
			if = {
				limit = {
					is_active_resolution = resolution_defenseprivatization_defense_contracts
				}
				add_modifier = {
					modifier = resolution_defenseprivatization_defense_contracts_merc_naval_cap
				}
			}
			if = {
				limit = {
					is_active_resolution = resolution_defenseprivatization_private_support_troops
				}
				add_modifier = {
					modifier = resolution_defenseprivatization_private_support_troops_merc_naval_cap
				}
			}
			if = {
				limit = {
					is_active_resolution = resolution_defenseprivatization_condottieri
				}
				add_modifier = {
					modifier = resolution_defenseprivatization_condottieri_merc_naval_cap
				}
			}
			if = {
				limit = {
					is_active_resolution = resolution_defenseprivatization_security_business
				}
				add_modifier = {
					modifier = resolution_defenseprivatization_security_business_merc_naval_cap
				}
			}
			if = {
				limit = {
					is_active_resolution = resolution_defenseprivatization_corporate_warlords
				}
				add_modifier = {
					modifier = resolution_defenseprivatization_corporate_warlords_merc_naval_cap
				}
			}

			#Set a flag to prevent the AI from instantly hiring them
			set_timed_country_flag = {
				flag = merc_ai_delay
				years = 1
			}
		}

		owner = {
			add_modifier = {
				modifier = country_enclave_capacity_decrease_modifier
				multiplier = value:created_merc_number
			}
		}

		#Transfer ownership of the fleet
		set_owner = event_target:mercenary_enclave_country
	}

	after = {
		event_target:mercenary_enclave_creator = {
			country_event = { id = enclave.205 }
		}
		event_target:mercenary_enclave_country = {
			country_event = { id = enclave.22 days = 1 }
		}
	}
}

country_event = { #Flag the enclave creator for enclave capacity purposes
	id = enclave.22
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:mercenary_enclave_creator = {
			set_country_flag = merc_enclave_founder@root
		}
	}
}

# Merc Enclave Destroyed (HIDDEN)
country_event = {
	id = enclave.23
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		owner = {
			is_country_type = enclave_mercenary
			FROMFROM = {
				is_ship_size = enclave_mercenary_station
			}
		}
	}

	immediate = {
		FROMFROM = {
			solar_system = {
				save_event_target_as = merc_system
				remove_star_flag = enclave
			}
		}
		FROM = {
			country_event = { id = enclave.25 }
			save_event_target_as = mercenary_destroyer
		}
		every_country = {
			limit = {
				has_communications = ROOT
				NOT = { is_country = event_target:mercenary_destroyer }
				is_country_type = default
			}
			country_event = { id = enclave.26 }
		}
	}
	after = {
		destroy_country = yes
		every_country = {
			limit = {
				has_modifier = country_enclave_capacity_decrease_modifier
			}
			country_event = { id = enclave.24 days = 2 }
		}
	}
}

country_event = { #After enclave destruction, give back enclave cap
	id = enclave.24
	hide_window = yes
	is_triggered_only = yes

	after = {
		add_modifier = {
			modifier = country_enclave_capacity_decrease_modifier
			multiplier = value:created_merc_number
		}
	}
}

country_event = { #Merc Destroyed (Destroyer)
	id = enclave.25
	title = "enclave.25"
	desc = "enclave.25.desc"
	picture = GFX_evt_space_debris
	location = event_target:merc_system
	show_sound = event_ship_bridge

	is_triggered_only = yes

	immediate = {
		set_country_flag = destroyed_mercs
	}

	option = {
		name = EXCELLENT
		add_resource = {
			alloys = 2000
			energy = 2000
		}
	}
}

# Ariphaos TODO: Add some flavor here.
country_event = { #Merc Destroyed
	id = enclave.26
	title = "enclave.25"
	desc = "enclave.26.desc"
	picture = GFX_evt_space_debris
	location = event_target:merc_system
	show_sound = event_ship_bridge

	is_triggered_only = yes

	immediate = {
		add_modifier = {
			modifier = country_enclave_capacity_decrease_modifier
			multiplier = value:created_merc_number
		}
	}

	option = {
		name = UNFORTUNATE
		trigger = {
			NOT = { has_country_flag = merc_enclave_founder@root }
		}
	}
	option = {
		name = enclave.26.a
		trigger = {
			has_country_flag = merc_enclave_founder@root
		}
	}
}

#Mercs under attack recall their fleet
country_event = {
	id = enclave.27
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_country_type = enclave_mercenary
		OR = {
			FromFrom = { is_ship_size = enclave_mercenary_station }
			FromFromFrom = { is_ship_size = enclave_mercenary_station }
		}
	}

	immediate = {
		save_event_target_as = mercenary_enclave_country
		random_owned_fleet = {
			limit = {
				is_ship_size = enclave_mercenary_station
			}
			solar_system = {
				save_event_target_as = mercenary_home_system
			}
		}
		random_owned_fleet = {
			limit = {
				is_ship_class = shipclass_military
				is_leased = yes
			}
			save_event_target_as = mercenary_fleet
			controller = {
				save_event_target_as = mercenary_client
				if = { #No Refund if the client is the attacker
					limit = {
						NOT = {
							event_target:mercenary_client = {
								is_hostile = event_target:mercenary_enclave_country
							}
						}
					}
					country_event = { id = enclave.29 days = 7 }
				}
			}
		}
		set_country_flag = enclave_under_attack
	}
}

#Merc sue for peace
#country_event = {
#	id = enclave.28
#	title = "enclave.28"
#	desc = "enclave.28.desc"
#	picture = GFX_evt_space_debris #Change pic and sound
#	location = event_target:merc_system
#	show_sound = event_ship_bridge
#
#	is_triggered_only = yes
#
#	option = {
#		name = enclave.28.a
#		trigger = {
#			#Refuse
#		}
#	}
#	option = {
#		name = enclave.28.b
#		trigger = {
#			#Accept
#		}
#	}
#}

#Emergency Requisition (Client Side)
country_event = {
	id = enclave.29
	title = "enclave.27"
	desc = "enclave.27.desc"
	picture = GFX_evt_mercenary_fleet
	location = event_target:merc_system
	show_sound = evn_ove_mercenary_fleet

	is_triggered_only = yes

	trigger = {
		exists = event_target:mercenary_fleet
		event_target:mercenary_fleet = {
			is_leased = yes
		}
	}

	immediate = {
		event_target:mercenary_fleet = {
			end_fleet_contract = {
				initiator = event_target:mercenary_enclave_country
				reason = broken
			}
			remove_fleet_flag = fleet_on_loan@root
			set_location = {
				target = event_target:mercenary_home_system
			}
		}
	}

	option = { #Refund money good luck
		name = enclave.27.a
		if = {
			limit = {
				event_target:mercenary_enclave_country = {
					has_modifier = mercenary_fleet_size_upgrade_5
				}
			}
			add_resource = { energy = 44000 }
		}
		else_if = {
			limit = {
				event_target:mercenary_enclave_country = {
					has_modifier = mercenary_fleet_size_upgrade_4
					NOT = { has_modifier = mercenary_fleet_size_upgrade_5 }
				}
			}
			add_resource = { energy = 30000 }
		}
		else_if = {
			limit = {
				event_target:mercenary_enclave_country = {
					has_modifier = mercenary_fleet_size_upgrade_3
					NOT = { has_modifier = mercenary_fleet_size_upgrade_4 }
				}
			}
			add_resource = { energy = 20000 }
		}
		else_if = {
			limit = {
				event_target:mercenary_enclave_country = {
					has_modifier = mercenary_fleet_size_upgrade_2
					NOT = { has_modifier = mercenary_fleet_size_upgrade_3 }
				}
			}
			add_resource = { energy = 12000 }
		}
		else_if = {
			limit = {
				event_target:mercenary_enclave_country = {
					has_modifier = mercenary_fleet_size_upgrade_1
					NOT = { has_modifier = mercenary_fleet_size_upgrade_2 }
				}
			}
			add_resource = { energy = 6000 }
		}
		else = {
			add_resource = { energy = 3000 }
		}
	}
	option = { #Refund money be grumpy
		name = enclave.27.b
		if = {
			limit = {
				event_target:mercenary_enclave_country = {
					has_modifier = mercenary_fleet_size_upgrade_5
				}
			}
			add_resource = { energy = 44000 }
		}
		else_if = {
			limit = {
				event_target:mercenary_enclave_country = {
					has_modifier = mercenary_fleet_size_upgrade_4
					NOT = { has_modifier = mercenary_fleet_size_upgrade_5 }
				}
			}
			add_resource = { energy = 30000 }
		}
		else_if = {
			limit = {
				event_target:mercenary_enclave_country = {
					has_modifier = mercenary_fleet_size_upgrade_3
					NOT = { has_modifier = mercenary_fleet_size_upgrade_4 }
				}
			}
			add_resource = { energy = 20000 }
		}
		else_if = {
			limit = {
				event_target:mercenary_enclave_country = {
					has_modifier = mercenary_fleet_size_upgrade_2
					NOT = { has_modifier = mercenary_fleet_size_upgrade_3 }
				}
			}
			add_resource = { energy = 12000 }
		}
		else_if = {
			limit = {
				event_target:mercenary_enclave_country = {
					has_modifier = mercenary_fleet_size_upgrade_1
					NOT = { has_modifier = mercenary_fleet_size_upgrade_2 }
				}
			}
			add_resource = { energy = 6000 }
		}
		else = {
			add_resource = { energy = 3000 }
		}
	}
}

# Mercenary Enclave Greetings: Gatekeeper event
# Via on_custom_diplomacy | this = target country (player); from = country being contacted
country_event = {
	id = enclave.200
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		from = {
			is_country_type = enclave_mercenary
			has_country_flag = mercenary_enclave_country
		}
		NOT = {
			has_active_event = {
				enclave.205 #GREETINGS
				enclave.210 #HIRE FLEET
				enclave.211 #THANKS FOR RENTAL
				enclave.215 #MANAGE HIRED FLEET
				enclave.220 #MERCENARY GARRISON starbase building
				enclave.235 #Expand Mercenary Fleet
				enclave.240 #Tactical Appraisal
				enclave.245 #Tactical Appraisal Khan
				enclave.250 #Tactical Appraisal Gray Tempest
				enclave.255 #Tactical Appraisal Prethoryn
				enclave.260 #Tactical Appraisal Unbidden
				enclave.270 #Hire Armies
				enclave.275 #Merc Pays Back Patron
				enclave.280 #Patron Panel
				enclave.285 #Recall Fleet
			}
		}
	}

	immediate = {
		ai_trade_facility = {
			offer_hire_mercenary_fleet = yes
			offer_prolong_fleet_contract = yes
			from = {
				save_event_target_as = mercenary_enclave_country
				#Failsafe to catch if fleets are no longer on loan
				remove_loaning_fleet_flag = yes
			}
			country_event = { id = enclave.205 }
		}
	}
}

# Post-First Contact setup
# from = First Contact site owner
country_event = {
	id = enclave.204
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = {
				from = {
					NOT = { has_country_flag = mercenary_enclave_country }
				}
			}
			from = {
				country_event = { id = enclave.205 }
			}
		}
		else = {
			fromfrom = {
				country_event = { id = enclave.205 }
			}
		}
	}
}

# Mercenary Enclave: GREETINGS
# This = player country; event_target:mercenary_enclave_country = enclave country
country_event = {
	id = enclave.205
	title = enclave.205.name
	desc = {
		trigger = {
			NOR = {
				is_hostile = event_target:mercenary_enclave_country
			}
		}
		text = enclave.205.desc
	}
	desc = {
		trigger = {
			is_hostile = event_target:mercenary_enclave_country
			NOR = {
				is_homicidal = yes
				has_country_flag = ariphaos_patch_offended@event_target:mercenary_enclave_country
			}
		}
		text = enclave.205.desc.hostile
	}
	desc = {
		trigger = {
			is_hostile = event_target:mercenary_enclave_country
			OR = {
				is_homicidal = yes
				has_country_flag = ariphaos_patch_offended@event_target:mercenary_enclave_country
			}
		}
		text = enclave.205.desc.unfriendly
	}

	is_triggered_only = yes

	diplomatic = yes
	custom_gui = "enclave_mercenary_window"
	custom_gui_option = "enclave_mercenary_option"
	picture_event_data = {
		portrait = event_target:mercenary_enclave_country
		room = mercenary_enclave_room
	}
	location = event_target:mercenary_enclave_system

	immediate = {
		event_target:mercenary_enclave_country = {
			species = {
				save_event_target_as = mercenary_enclave_species
			}
			random_owned_fleet = {
				limit = {
					is_ship_size = enclave_mercenary_station
				}
				solar_system = {
					save_event_target_as = mercenary_enclave_system
					if = {
						limit = {
							exists = space_owner
						}
						space_owner = {
							save_event_target_as = mercenary_patron
						}
					}
				}
			}
			random_owned_fleet = {
				limit = {
					is_ship_class = shipclass_military
					is_leased = yes
				}
				controller = {
					save_event_target_as = current_client
				}
			}
		}
		# without this immediate is not invoked when event runs in a special mode that allows AI to collect trade data
		run_in_ai_mode = yes
	}

	# Hostility options
	option = {
		name = enclave.205.i
		trigger = {
			is_hostile = event_target:mercenary_enclave_country
			NOR = {
				is_homicidal = yes
				has_country_flag = ariphaos_patch_offended@event_target:mercenary_enclave_country
			}
		}
		allow = {
			resource_stockpile_compare = {
				resource = energy
				value >= 2500
			}
		}
		add_resource = {
			energy = -2500
		}
		hidden_effect = {
			event_target:mercenary_enclave_country = {
				set_faction_hostility = {
					target = root
					set_neutral = yes
				}
				every_owned_fleet = {
					limit = {
						is_in_combat = yes
						solar_system = { is_same_value = event_target:mercenary_enclave_system }
					}
					clear_fleet_actions = this
					queue_actions = {
						repeat = {
							max_iterations = 1
							find_closest_planet = {
								found_planet = {
									orbit_planet = this
								}
							}
						}
					}
				}
			}
			every_owned_fleet = {
				limit = {
					is_in_combat = yes
					solar_system = { is_same_value = event_target:mercenary_enclave_system }
				}
				clear_fleet_actions = this
				queue_actions = {
					repeat = {
						max_iterations = 1
						find_closest_planet = {
							found_planet = {
								orbit_planet = this
							}
						}
					}
				}
			}
		}
	}
	
	option = {
		name = ariphaos_patch_enclave.205.j
		trigger = {
			is_hostile = event_target:mercenary_enclave_country
			NOR = {
				is_homicidal = yes
				has_country_flag = ariphaos_patch_offended@event_target:mercenary_enclave_country
			}
		}
	}
	
	option = {
		name = SCUM
		trigger = {
			is_hostile = event_target:mercenary_enclave_country
			OR = {
				has_valid_civic = civic_fanatic_purifiers
				has_country_flag = ariphaos_patch_offended@event_target:mercenary_enclave_country
			}
		}
	}
	
	option = {
		name = EXTERMINATE
		trigger = {
			is_hostile = event_target:mercenary_enclave_country
			OR = {
				has_valid_civic = civic_machine_terminator
				#has_country_flag = ariphaos_patch_offended@event_target:mercenary_enclave_country
			}
		}
	}
	
	option = {
		name = TASTY
		trigger = {
			is_hostile = event_target:mercenary_enclave_country
			OR = {
				has_valid_civic = civic_hive_devouring_swarm
				#has_country_flag = ariphaos_patch_offended@event_target:mercenary_enclave_country
			}
		}
	}
	
	option = {
		name = ariphaos_patch_enclave.205.k
		trigger = {
			is_hostile = event_target:mercenary_enclave_country
			NOR = {
				is_homicidal = yes
				has_country_flag = ariphaos_patch_offended@event_target:mercenary_enclave_country
			}
			is_xenophobe = yes
			is_pacifist = no
		}
		hidden_effect = {
			set_country_flag = ariphaos_patch_offended@event_target:mercenary_enclave_country
		}
	}

	#Hire fleet
	option = {
		name = enclave.205.a
		trigger = {
			NOR = {
				is_hostile = event_target:mercenary_enclave_country
				#is_homicidal = yes
			}
			event_target:mercenary_enclave_country = {
				NOT = { has_country_flag = fleet_commandeered }
				NOT = {
					any_owned_fleet = {
						is_ship_class = shipclass_military
						is_leased = yes
						controller = {
							is_same_value = root
						}
					}
				}
			}
			if = {
				limit = {
					is_ai = yes
				}
				NOT = { has_country_flag = merc_ai_delay }
			}
		}
		allow = {
			custom_tooltip = {
				fail_text = enclave.205.tooltip.a
				event_target:mercenary_enclave_country = {
					NOT = {
						any_owned_fleet = {
							is_ship_class = shipclass_military
							is_leased = yes
							owner = {
								is_same_value = event_target:mercenary_enclave_country
							}
						}
					}
				}
			}
			custom_tooltip = {
				fail_text = enclave.205.tooltip.b
				event_target:mercenary_enclave_country = {
					any_owned_fleet = {
						is_ship_class = shipclass_military
						NOT = { any_controlled_ship = { is_damaged = yes } }
						fleet_power >= 500
					}
				}
			}
		}
		ai_trade_facility = {
			custom_tooltip = mercenary_tt_hirefleet
			offer_hire_mercenary_fleet = yes
			offer_prolong_fleet_contract = yes
			hidden_effect = {
				country_event = { id = enclave.210 }
			}
		}
	}
	#Manage hired fleet (extend loan, recall)
	option = {
		name = enclave.205.b
		custom_tooltip = mercenary_tt_managefleet
		trigger = {
			NOR = {
				is_hostile = event_target:mercenary_enclave_country
				#is_homicidal = yes
			}
			any_controlled_fleet = {
				is_ship_class = shipclass_military
				is_leased = yes
				owner = {
					is_same_value = event_target:mercenary_enclave_country
				}
				controller = {
					is_same_value = root
				}
			}
		}
		hidden_effect = {
			country_event = { id = enclave.215 }
		}
	}
	#Mercenary Garrison starbase building
	option = {
		name = enclave.205.c
		custom_tooltip = mercenary_tt_garrison
		trigger = {
			NOR = {
				is_hostile = event_target:mercenary_enclave_country
				#is_homicidal = yes
			}
			NOT = { has_country_flag = mercenary_enclave_bought_mercenary_garrison }
			event_target:mercenary_enclave_country = {
				trust = {
					who = root
					value >= 30
				}
			}
		}
		allow = {
			event_target:mercenary_enclave_country = {
				trust = {
					who = root
					value >= 40
				}
			}
		}
		hidden_effect = {
			country_event = { id = enclave.220 }
		}
	}

	#Tactical Appraisal
	option = {
		name = enclave.205.e
		custom_tooltip = mercenary_tt_tactical
		trigger = {
			NOR = {
				is_hostile = event_target:mercenary_enclave_country
				#is_homicidal = yes
			}
			OR = {
				any_country = {
					is_country_type = awakened_marauders
					has_communications = root
				}
				any_country = {
					OR = {
						is_country_type = gray
						is_country_type = gray_goo
					}
					has_communications = root
				}
				any_country = {
					is_country_type = swarm
					has_communications = root
				}
				any_country = {
					is_country_type = extradimensional
					has_communications = root
				}
				any_country = {
					is_country_type = ai_empire
					has_communications = root
				}
				OR = {
					any_country = {
						is_country_type = awakened_synth_queen
						has_communications = root
					}
					OR = {
						has_special_project = THE_SYNTH_QUEENS_OUTPOST_AMBUSH
						has_special_project = THE_SYNTH_QUEENS_CONVOY_AMBUSH
					}
				}
			}
			event_target:mercenary_enclave_country = {
				trust = {
					who = root
					value >= 50
				}
			}
		}
		hidden_effect = {
			country_event = { id = enclave.240 }
		}
	}

	#Recruit Armies
	option = {
		name = enclave.205.f
		custom_tooltip = mercenary_tt_hirearmies
		trigger = {
			NOR = {
				is_hostile = event_target:mercenary_enclave_country
				#is_homicidal = yes
			}
		}
		allow = {
			event_target:mercenary_enclave_country = {
				trust = {
					who = root
					value >= 20
				}
			}
		}
		hidden_effect = {
			country_event = { id = enclave.270 }
		}
	}

	#Mercenary Logistic Services
	option = {
		name = enclave.205.g
		custom_tooltip = mercenary_tt_logistic
		trigger = {
			NOR = {
				is_hostile = event_target:mercenary_enclave_country
				#is_homicidal = yes
			}
			event_target:mercenary_enclave_country = {
				trust = {
					who = root
					value >= 20
				}
			}
		}
		allow = {
			custom_tooltip = {
				fail_text = enclave.205.g.tooltip
				NOT = {
					has_modifier = mercenary_enclave_logistic_help
				}
			}
			event_target:mercenary_enclave_country = {
				trust = {
					who = root
					value >= 30
				}
			}
		}

		hidden_effect = {
			country_event = { id = enclave.2030 }
		}
	}

	#Patron Panel
	option = {
		name = enclave.205.h
		custom_tooltip = mercenary_tt_patron
		trigger = {
			NOR = {
				is_hostile = event_target:mercenary_enclave_country
				#is_homicidal = yes
			}
			exists = event_target:mercenary_patron
			event_target:mercenary_patron = {
				is_same_empire = root
			}
		}
		hidden_effect = {
			country_event = { id = enclave.280 }
		}
	}

	#Cease dialog
	option = {
		name = GOODBYE
		trigger = {
			NOT = {
				is_hostile = event_target:mercenary_enclave_country
			}
		}
		default_hide_option = yes
	}

	after = {
		hidden_effect = {
			set_country_flag = mercenary_enclave_diplomacy_engaged
		}
	}
}

# Mercenary Enclave: HIRE FLEET
# This = player country; event_target:mercenary_enclave_country = enclave country
country_event = {
	id = enclave.210
	base = enclave.205
	desc_clear = yes
	option_clear = yes

	desc = enclave.210.desc

	immediate = {
		event_target:mercenary_enclave_country = {
			if = {
				limit = {
					count_owned_leader = {
						count = 0
						limit = {
							leader_class = commander
							is_councilor = no
							is_ruler = no
						}
					}
				}
				create_leader = {
					class = commander
					species = event_target:mercenary_enclave_species
					name = random
					randomize_traits = no
					event_leader = yes
					skill = 3
					traits = {
						trait = leader_trait_mercenary_warrior
						trait = leader_trait_aggressive_2
					}
				}
			}
			random_owned_leader = {
				limit = {
					leader_class = commander
					is_councilor = no
					is_ruler = no
				}
				save_event_target_as = mercenary_admiral
				set_immortal = yes
			}
			#Can hire only the main fleet
			ordered_controlled_fleet = {
				limit = {
					is_ship_class = shipclass_military
					is_leased = no
				}
				position = 0
				order_by = trigger:fleet_power
				save_event_target_as = mercenary_fleet
				assign_leader = event_target:mercenary_admiral
				set_name = {
					key = NAME_Mercenary_Fleet
					variable_string = "[event_target:mercenary_enclave_country.GetName]"
				}
				set_fleet_settings = {
					can_change_leader = no
				}
			}
		}
		# without this the immediate is not invoked when the event runs in the special mode that allows AI to collect trade data
		run_in_ai_mode = yes
	}

	#Discuss another matter (return to menu)
	option = {
		name = enclave.215.a
		hidden_effect = {
			country_event = { id = enclave.205 }
		}
	}

	option = {
		name = DEAL
		ai_trade_facility = {
			offer_hire_mercenary_fleet = yes
			info_gathering = {
				get_trade_data = { target = event_target:mercenary_enclave_country }
			}
			option_selection = {
				if = {
					limit = {
						is_offer_terms_actual = { target = event_target:mercenary_enclave_country }
					}
					make_special_trade = { target = event_target:mercenary_enclave_country }
					set_country_flag = mercenary_enclave_rented_fleet #for tracking returning customers
					event_target:mercenary_enclave_country = {
						add_trust = {
							who = root
							amount = 15
						}
					}
				}
			}
			allow = {
				can_afford_special_offer = { target = event_target:mercenary_enclave_country }
			}
		}
		custom_tooltip = opinion15
		hidden_effect = {
			country_event = { id = enclave.211 }
		}
	}

	option = {
		name = GOODBYE
		default_hide_option = yes
	}
}

# Mercenary Enclave: THANKS FOR RENTAL
# This = player country; event_target:mercenary_enclave_country = enclave country
country_event = {
	id = enclave.211
	base = enclave.205
	desc_clear = yes
	desc = enclave.211.desc
}

# Mercenary Enclave: MANAGE HIRED FLEET
# This = player country; event_target:mercenary_enclave_country = enclave country
country_event = {
	id = enclave.215
	base = enclave.205
	desc_clear = yes
	option_clear = yes

	desc = enclave.215.desc

	immediate = {
		random_controlled_fleet = {
			limit = {
				is_ship_class = shipclass_military
				is_leased = yes
			}
			save_event_target_as = mercenary_fleet
		}
		# without this immediate is not invoked when event runs in a special mode that allows AI to collect trade data
		run_in_ai_mode = yes
	}

	#Discuss another matter (return to menu)
	option = {
		name = enclave.215.a
		hidden_effect = {
			country_event = { id = enclave.205 }
		}
	}

	#Extend the hire
	option = {
		name = enclave.215.b
		ai_trade_facility = {
			offer_prolong_fleet_contract = yes
			info_gathering = {
				get_trade_data = { target = event_target:mercenary_enclave_country }
			}
			option_selection = {
				if = {
					limit = {
						is_offer_terms_actual = { target = event_target:mercenary_enclave_country }
					}
					make_special_trade = { target = event_target:mercenary_enclave_country }
					event_target:mercenary_enclave_country = {
						add_trust = {
							who = root
							amount = 5
						}
					}
				}
			}
			allow = {
				can_afford_special_offer = { target = event_target:mercenary_enclave_country }
			}
		}
		custom_tooltip = opinion5
		hidden_effect = {
			country_event = { id = enclave.205 }
		}
	}

	#Terminate Contract
	option = {
		name = enclave.215.c
		hidden_effect = {
			event_target:mercenary_fleet = {
				end_fleet_contract = {
					initiator = root
					reason = cancelled
				}
			}
			country_event = { id = enclave.205 }
		}
	}

	#Goodbye
	option = {
		name = GOODBYE
		default_hide_option = yes
	}
}

# Mercenary Enclave: MERCENARY GARRISON starbase building
# This = player country; event_target:mercenary_enclave_country = enclave country
country_event = {
	id = enclave.220
	base = enclave.205
	desc_clear = yes
	option_clear = yes

	desc = enclave.220.desc

	#Discuss another matter (return to menu)
	option = {
		name = enclave.215.a
		hidden_effect = {
			country_event = { id = enclave.205 }
		}
	}

	#Buy the license to install garrisons
	option = {
		name = DEAL
		allow = {
			resource_stockpile_compare = { resource = energy value >= 1000 }
		}
		add_resource = { energy = -1000 }
		custom_tooltip = opinion15
		hidden_effect = {
			event_target:mercenary_enclave_country = {
				add_trust = {
					who = root
					amount = 15
				}
				set_country_flag = mercenary_garrison@root
			}
			set_country_flag = mercenary_enclave_bought_mercenary_garrison
			country_event = { id = enclave.225 }
		}
	}
	option = {
		name = TOOPOOR
		trigger = {
			resource_stockpile_compare = { resource = energy value < 1000 }
		}
		hidden_effect = {
			country_event = { id = enclave.205 }
		}
	}

	option = {
		name = GOODBYE
		default_hide_option = yes
	}
}

# Mercenary Enclave: THANKS FOR PURCHASE
# This = player country; event_target:mercenary_enclave_country = enclave country
country_event = {
	id = enclave.225
	base = enclave.205
	desc_clear = yes
	desc = enclave.225.desc
}

# Mercenary Enclave: Expand Mercenary Fleet
# This = player country; event_target:mercenary_enclave_country = enclave country
country_event = {
	id = enclave.235
	base = enclave.205
	desc_clear = yes
	option_clear = yes

	desc = {
		trigger = {
			event_target:mercenary_enclave_country = {
				NOT = { has_modifier = mercenary_fleet_size_upgrade_1 }
			}
		}
		text = enclave.235.1.desc
	}
	desc = {
		trigger = {
			event_target:mercenary_enclave_country = {
				NOT = { has_modifier = mercenary_fleet_size_upgrade_2 }
				has_modifier = mercenary_fleet_size_upgrade_1
			}
		}
		text = enclave.235.2.desc
	}
	desc = {
		trigger = {
			event_target:mercenary_enclave_country = {
				NOT = { has_modifier = mercenary_fleet_size_upgrade_3 }
				has_modifier = mercenary_fleet_size_upgrade_2
			}
		}
		text = enclave.235.3.desc
	}
	desc = {
		trigger = {
			event_target:mercenary_enclave_country = {
				NOT = { has_modifier = mercenary_fleet_size_upgrade_4 }
				has_modifier = mercenary_fleet_size_upgrade_3
			}
		}
		text = enclave.235.4.desc
	}
	desc = {
		trigger = {
			event_target:mercenary_enclave_country = {
				NOT = { has_modifier = mercenary_fleet_size_upgrade_5 }
				has_modifier = mercenary_fleet_size_upgrade_4
			}
		}
		text = enclave.235.5.desc
	}

	#Discuss another matter (return to menu)
	option = {
		name = enclave.215.a
		default_hide_option = yes
		hidden_effect = {
			country_event = { id = enclave.205 }
		}
	}

	#First Increase
	option = {
		name = DEAL
		trigger = {
			event_target:mercenary_enclave_country = {
				NOT = { has_modifier = mercenary_fleet_size_upgrade_1 }
			}
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= 1000 }
			resource_stockpile_compare = { resource = alloys value >= 500 }
		}
		add_resource = { energy = -1000  }
		add_resource = { alloys = -500  }
		custom_tooltip = opinion20
		hidden_effect = {
			event_target:mercenary_enclave_country = {
				add_trust = {
					who = root
					amount = 20
				}
				add_modifier = {
					modifier = mercenary_fleet_size_upgrade_1
					days = -1
				}
				upgrade_mercenary_starbase = {
					TIER = 1
				}
			}
			country_event = { id = enclave.225 }
		}
	}
	#Second Increase
	option = {
		name = DEAL
		trigger = {
			event_target:mercenary_enclave_country = {
				NOT = { has_modifier = mercenary_fleet_size_upgrade_2 }
				has_modifier = mercenary_fleet_size_upgrade_1
			}
		}
		allow = {
		resource_stockpile_compare = { resource = energy value >= 2500 }
			resource_stockpile_compare = { resource = alloys value >= 1250 }
		}
		add_resource = { energy = -2500 }
		add_resource = { alloys = -1250 }
		custom_tooltip = opinion20
		hidden_effect = {
			event_target:mercenary_enclave_country = {
				add_trust = {
					who = root
					amount = 20
				}
				add_modifier = {
					modifier = mercenary_fleet_size_upgrade_2
					days = -1
				}
				upgrade_mercenary_starbase = {
					TIER = 2
				}
			}
			country_event = { id = enclave.225 }
		}
	}
	#Third Increase
	option = {
		name = DEAL
		trigger = {
			event_target:mercenary_enclave_country = {
				NOT = { has_modifier = mercenary_fleet_size_upgrade_3 }
				has_modifier = mercenary_fleet_size_upgrade_2
			}
		}
		allow = {
			#opinion trigger ?
			resource_stockpile_compare = { resource = energy value >= 5500 }
			resource_stockpile_compare = { resource = alloys value >= 2750 }
		}
		add_resource = { energy = -5500 }
		add_resource = { alloys = -2750 }
		custom_tooltip = opinion20
		hidden_effect = {
			event_target:mercenary_enclave_country = {
				add_trust = {
					who = root
					amount = 20
				}
				add_modifier = {
					modifier = mercenary_fleet_size_upgrade_3
					days = -1
				}
				upgrade_mercenary_starbase = {
					TIER = 3
				}
			}
			country_event = { id = enclave.225 }
		}
	}
	#Fourth Increase
	option = {
		name = DEAL
		trigger = {
			event_target:mercenary_enclave_country = {
				NOT = { has_modifier = mercenary_fleet_size_upgrade_4 }
				has_modifier = mercenary_fleet_size_upgrade_3
			}
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= 10000 }
			resource_stockpile_compare = { resource = alloys value >= 5000 }
		}
		add_resource = { energy = -10000 }
		add_resource = { alloys = -5000 }
		custom_tooltip = opinion20
		hidden_effect = {
			event_target:mercenary_enclave_country = {
				add_trust = {
					who = root
					amount = 20
				}
				add_modifier = {
					modifier = mercenary_fleet_size_upgrade_4
					days = -1
				}
				upgrade_mercenary_starbase = {
					TIER = 4
				}
			}
			country_event = { id = enclave.225 }
		}
	}
	#Fifth Increase
	option = {
		name = DEAL
		trigger = {
			event_target:mercenary_enclave_country = {
				NOT = { has_modifier = mercenary_fleet_size_upgrade_5 }
				has_modifier = mercenary_fleet_size_upgrade_4
			}
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= 13000 }
			resource_stockpile_compare = { resource = alloys value >= 6500 }
		}
		add_resource = { energy = -13000 }
		add_resource = { alloys = -6500 }
		custom_tooltip = opinion20
		hidden_effect = {
			event_target:mercenary_enclave_country = {
				add_trust = {
					who = root
					amount = 20
				}
				add_modifier = {
					modifier = mercenary_fleet_size_upgrade_5
					days = -1
				}
				upgrade_mercenary_starbase = {
					TIER = 5
				}
				set_country_flag = maximally_effective_achievement
			}
			country_event = { id = enclave.225 }
		}
	}
}

# Mercenary Enclave: TACTICAL APPRAISAL
# This = player country; event_target:mercenary_enclave_country = enclave country
country_event = {
	id = enclave.240
	base = enclave.205
	desc_clear = yes
	option_clear = yes

	desc = enclave.240.desc

	#Discuss another matter (return to menu)
	option = {
		name = enclave.215.a
		hidden_effect = {
			country_event = { id = enclave.205 }
		}
	}

	# Khan
	option = {
		name = enclave.240.a
		trigger = {
			NOT = { has_modifier = tactic_v_khan }
			any_country = {
				is_country_type = awakened_marauders
				has_communications = root
			}
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= 1500 }
		}
		add_resource = { energy = -1500 }
		add_modifier = {
					modifier = tactic_v_khan
					days = -1
		}
		hidden_effect = {
			country_event = { id = enclave.245 }
		}
	}

	option = {
		name = enclave.240.a
		trigger = {
			has_modifier = tactic_v_khan
			any_country = {
				is_country_type = awakened_marauders
				has_communications = root
			}
		}
		hidden_effect = {
			country_event = { id = enclave.245 }
		}
	}

	# Gray Tempest
	option = {
		name = enclave.240.b
		trigger = {
			NOT = { has_modifier = tactic_v_gray }
			has_global_flag = gray_goo_crisis_active
			any_country = {
				OR = {
					is_country_type = gray
					is_country_type = gray_goo
				}
				has_communications = root
			}
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= 1500 }
		}
		add_resource = { energy = -1500 }
		add_modifier = {
			modifier = tactic_v_gray
			days = -1
		}
		hidden_effect = {
			country_event = { id = enclave.250 }
		}
	}

	option = {
		name = enclave.240.b
		trigger = {
			has_modifier = tactic_v_gray
			has_global_flag = gray_goo_crisis_active
			any_country = {
				OR = {
					is_country_type = gray
					is_country_type = gray_goo
				}
				has_communications = root
			}
		}
		hidden_effect = {
			country_event = { id = enclave.250 }
		}
	}

	# Prethoryn Swarm
	option = {
		name = enclave.240.c
		trigger = {
			NOT = { has_modifier = tactic_v_swarm }
			any_country = {
				is_country_type = swarm
				has_communications = root
			}
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= 5000 }
		}
		add_resource = { energy = -5000 }
		add_modifier = {
					modifier = tactic_v_swarm
					days = -1
		}
		hidden_effect = {
			country_event = { id = enclave.255 }
		}
	}

	option = {
		name = enclave.240.c
		trigger = {
			has_modifier = tactic_v_swarm
			any_country = {
				is_country_type = swarm
				has_communications = root
			}
		}
		hidden_effect = {
			country_event = { id = enclave.255 }
		}
	}

	# Unbidden Extradimensional
	option = {
		name = enclave.240.d
		trigger = {
			NOT = { has_modifier = tactic_v_extradimensional }
			any_country = {
				is_country_type = extradimensional
				has_communications = root
			}
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= 5000 }
		}
		add_resource = { energy = -5000 }
		add_modifier = {
					modifier = tactic_v_extradimensional
					days = -1
		}
		hidden_effect = {
			country_event = { id = enclave.260 }
		}
	}

	option = {
		name = enclave.240.d
		trigger = {
			has_modifier = tactic_v_extradimensional
			any_country = {
				is_country_type = extradimensional
				has_communications = root
			}
		}
		hidden_effect = {
			country_event = { id = enclave.260 }
		}
	}

	# Contingency
	option = {
		name = enclave.240.e
		trigger = {
			NOT = { has_modifier = tactic_v_ai_empire }
			any_country = {
				is_country_type = ai_empire
				has_communications = root
			}
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= 5000 }
		}
		add_resource = { energy = -5000 }
		add_modifier = {
					modifier = tactic_v_ai_empire
					days = -1
		}
		hidden_effect = {
			country_event = { id = enclave.265 }
		}
	}

	option = {
		name = enclave.240.e
		trigger = {
			has_modifier = tactic_v_ai_empire
			any_country = {
				is_country_type = ai_empire
				has_communications = root
			}
		}
		hidden_effect = {
			country_event = { id = enclave.265 }
		}
	}

	# Cetana
	option = {
		name = enclave.240.f
		trigger = {
			NOT = { has_modifier = tactic_v_synth_queen }
			OR = {
				any_country = {
					is_country_type = awakened_synth_queen
					has_communications = root
				}
				OR = {
					has_special_project = THE_SYNTH_QUEENS_OUTPOST_AMBUSH
					has_special_project = THE_SYNTH_QUEENS_CONVOY_AMBUSH
				}
			}
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= 5000 }
		}
		add_resource = { energy = -5000 }
		add_modifier = {
			modifier = tactic_v_synth_queen
			days = -1
		}
		hidden_effect = {
			country_event = { id = enclave.266 }
		}
	}

	option = {
		name = enclave.240.f
		trigger = {
			has_modifier = tactic_v_synth_queen
			OR = {
				any_country = {
					is_country_type = awakened_synth_queen
					has_communications = root
				}
				OR = {
					has_special_project = THE_SYNTH_QUEENS_OUTPOST_AMBUSH
					has_special_project = THE_SYNTH_QUEENS_CONVOY_AMBUSH
				}
			}
		}
		hidden_effect = {
			country_event = { id = enclave.266 }
		}
	}
}

## Tactical Appraisal Events
#Khan
country_event = {
	id = enclave.245
	base = enclave.205
	desc_clear = yes
	desc = enclave.245.desc
}
#Gray Tempest
country_event = {
	id = enclave.250
	base = enclave.205
	desc_clear = yes
	desc = enclave.250.desc
}
#Prethoryn
country_event = {
	id = enclave.255
	base = enclave.205
	desc_clear = yes
	desc = enclave.255.desc
}
#Unbidden
country_event = {
	id = enclave.260
	base = enclave.205
	desc_clear = yes
	desc = enclave.260.desc
}
#Contingency
country_event = {
	id = enclave.265
	base = enclave.205
	desc_clear = yes
	desc = enclave.265.desc
}
#Synth Queen
country_event = {
	id = enclave.266
	base = enclave.205
	desc_clear = yes
	desc = enclave.266.desc
}

# Mercenary Enclave: HIRE ARMIES
# This = player country; event_target:mercenary_enclave_country = enclave country
country_event = {
	id = enclave.270
	base = enclave.205
	desc_clear = yes
	option_clear = yes

	desc = enclave.270.desc

	#Discuss another matter (return to menu)
	option = {
		name = enclave.215.a
		hidden_effect = {
			country_event = { id = enclave.205 }
		}
	}

	# Small Army
	option = {
		name = enclave.270.a
		trigger = {
			NOT = { event_target:mercenary_enclave_country = { has_country_flag = small_merc_army_hired } }
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= 600 }
		}
		add_resource = { energy = -600  }
		custom_tooltip = small_merc_army_hire
		custom_tooltip = opinion5
		hidden_effect = {
			event_target:mercenary_enclave_country = {
				set_timed_country_flag = { flag = small_merc_army_hired days = 360 }
				add_trust = {
					who = root
					amount = 5
				}
			}

			create_fleet = {
				effect = {
					set_owner = root
					while = {
						count = 5
						create_army_transport = {
							army_type = "mercenary_army"
							army_name = "NAME_military_contractors"
							species = event_target:mercenary_enclave_species
						}
					}
					set_location = {
						target = root.capital_scope.solar_system
					}
				}
			}

			country_event = { id = enclave.205 }
		}
	}

	# Small Mecha Army
	option = {
		name = enclave.270.b
		trigger = {
			NOT = { event_target:mercenary_enclave_country = { has_country_flag = small_mecha_merc_army_hired } }
			event_target:mercenary_enclave_country = {
				has_modifier = mercenary_fleet_size_upgrade_4
			}
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= 1200 }
		}
		add_resource = { energy = -1200  }
		custom_tooltip = small_mecha_merc_army_hire
		custom_tooltip = opinion10
		hidden_effect = {
			event_target:mercenary_enclave_country = {
				set_timed_country_flag = { flag = small_mecha_merc_army_hired days = 360 }
				add_trust = {
					who = root
					amount = 10
				}
			}

			create_fleet = {
				effect = {
					set_owner = root
					while = {
						count = 5
						create_army_transport = {
							army_type = "mecha_army"
							army_name = "NAME_mechawarrior_contractors"
							species = event_target:mercenary_enclave_species
						}
					}
					set_location = {
						target = root.capital_scope.solar_system
					}
				}
			}

			country_event = { id = enclave.205 }
		}
	}

	# Medium Army
	option = {
		name = enclave.270.c
		trigger = {
			NOT = { event_target:mercenary_enclave_country = { has_country_flag = medium_merc_army_hired } }
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= 1100 }
		}
		add_resource = { energy = -1100  }
		custom_tooltip = medium_merc_army_hire
		custom_tooltip = opinion10
		hidden_effect = {
			event_target:mercenary_enclave_country = {
				set_timed_country_flag = { flag = medium_merc_army_hired days = 540 }
				add_trust = {
					who = root
					amount = 10
				}
			}

			create_fleet = {
				effect = {
					set_owner = root
					while = {
						count = 10
						create_army_transport = {
							army_type = "mercenary_army"
							army_name = "NAME_military_contractors"
							species = event_target:mercenary_enclave_species
						}
					}
					set_location = {
						target = root.capital_scope.solar_system
					}
				}
			}

			country_event = { id = enclave.205 }
		}
	}

	# Medium Mecha Army
	option = {
		name = enclave.270.d
		trigger = {
			NOT = { event_target:mercenary_enclave_country = { has_country_flag = medium_mecha_merc_army_hired } }
			event_target:mercenary_enclave_country = {
				has_modifier = mercenary_fleet_size_upgrade_4
			}
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= 2300 }
		}
		add_resource = { energy = -2300  }
		custom_tooltip = medium_mecha_merc_army_hire
		custom_tooltip = opinion15
		hidden_effect = {
			event_target:mercenary_enclave_country = {
				set_timed_country_flag = { flag = medium_mecha_merc_army_hired days = 720 }
				add_trust = {
					who = root
					amount = 15
				}
			}

			create_fleet = {
				effect = {
					set_owner = root
					while = {
						count = 10
						create_army_transport = {
							army_type = "mecha_army"
							army_name = "NAME_mechawarrior_contractors"
							species = event_target:mercenary_enclave_species
						}
					}
					set_location = {
						target = root.capital_scope.solar_system
					}
				}
			}

			country_event = { id = enclave.205 }
		}
	}

	# Large Army
	option = {
		name = enclave.270.e
		trigger = {
			NOT = { event_target:mercenary_enclave_country = { has_country_flag = large_merc_army_hired } }
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= 2000 }
		}
		add_resource = { energy = -2000  }
		custom_tooltip = large_merc_army_hire
		custom_tooltip = opinion15
		hidden_effect = {
			event_target:mercenary_enclave_country = {
				set_timed_country_flag = { flag = large_merc_army_hired days = 1080 }
				add_trust = {
					who = root
					amount = 15
				}
			}

			create_fleet = {
				effect = {
					set_owner = root
					while = {
						count = 15
						create_army_transport = {
							army_type = "mercenary_army"
							army_name = "NAME_military_contractors"
							species =event_target:mercenary_enclave_species
						}
					}
					set_location = {
						target = root.capital_scope.solar_system
					}
				}
			}


			country_event = { id = enclave.205 }
		}
	}
}

#Merc Pays Back Patron
country_event = {
	id = enclave.275
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		#Check who owns the system the enclave is in and register them as the target for the payment event.
		random_owned_fleet = {
			limit = {
				is_ship_size = enclave_mercenary_station
			}
			solar_system = {
				if = {
					limit = {
						exists = space_owner
					}
					space_owner = {
						save_event_target_as = mercenary_patron
					}
				}
			}
		}
		root = {
			save_event_target_as = mercenary_enclave_country
		}
		if = {
			limit = {
				exists = event_target:mercenary_patron
			}
			event_target:mercenary_patron = {
				random_list = {
					24 = { country_event = { id = enclave.2000 } }
					24 = { country_event = { id = enclave.2005 } }
					24 = { country_event = { id = enclave.2010 } }
					24 = {
						modifier = {
							factor = 0
							event_target:mercenary_patron = { used_naval_capacity_percent > 0.95 }
						}
						country_event = { id = enclave.2015 }
					}
					2 = { country_event = { id = enclave.2020 } }
					2 = { country_event = { id = enclave.2025 } }
				}
			}
		}
	}

	after = {
		start_situation = {
			type = mercenary_dividends
			target = root
		}
		destroy_situation = from
	}
}

#Mercenary Enclave: PATRON PANEL
# This = player country; event_target:mercenary_enclave_country = enclave country
country_event = {
	id = enclave.280
	base = enclave.205
	desc_clear = yes
	option_clear = yes

	desc = {
		text = enclave.280.a.desc
		text = enclave.280.b.desc
		text = enclave.280.c.desc
	}

	immediate = {
		event_target:mercenary_enclave_country = {
			random_owned_fleet = {
				limit = {
					is_ship_class = shipclass_military
					is_leased = yes
				}
				save_event_target_as = loaned_mercenary_fleet
			}
		}
	}

	#Discuss another matter (return to menu)
	option = {
		name = enclave.215.a
		hidden_effect = {
			country_event = { id = enclave.205 }
		}
	}

	#Expand Mercenary Fleet
	option = {
		name = enclave.205.d
		trigger = {
			event_target:mercenary_enclave_country = {
				NOT = { has_modifier = mercenary_fleet_size_upgrade_5 }
			}
		}
		allow = {
			custom_tooltip = {
				fail_text = enclave.205.d.timeout
				event_target:mercenary_enclave_country = {
					NOT = { has_country_flag = upgraded_station }
				}
			}
		}
		hidden_effect = {
			country_event = { id = enclave.235 }
		}
	}

	#Recall Fleet
	option = {
		name = enclave.280.b
		trigger = {
			exists = event_target:loaned_mercenary_fleet
			event_target:loaned_mercenary_fleet = {
				controller = {
					NOT = { is_same_value = root }
				}
			}
			event_target:mercenary_enclave_country ={
				NOT = { has_country_flag = fleet_commandeered }
			}
		}
		allow = {
			event_target:mercenary_enclave_country = {
				trust = {
					who = root
					value >= 80
				}
			}
		}
		hidden_effect = {
			country_event = { id = enclave.285 }
		}
	}

	#Share Technology
	option = {
		name = enclave.280.c
		allow = {
			custom_tooltip = {
				fail_text = enclave.280.c.timeout
				event_target:mercenary_enclave_country = {
					NOT = { has_country_flag = updating_databanks }
				}
			}
		}
		hidden_effect = {
			country_event = { id = enclave.2040 }
		}
	}
}

#Mercenary Enclave: RECALL FLEET
country_event = {
	id = enclave.285
	base = enclave.205
	desc_clear = yes
	option_clear = yes

	desc = enclave.285.desc

	immediate = {
		event_target:loaned_mercenary_fleet = {
			controller = {
				save_event_target_as = current_mercenary_client
			}
		}
	}

	#Discuss another matter (return to menu)
	option = {
		name = enclave.215.a
		hidden_effect = {
			country_event = { id = enclave.205 }
		}
	}

	#Multiple options to scale costs with fleet size
	#Size 0
	option = {
		name = DEAL
		trigger = {
			event_target:mercenary_enclave_country = {
				NOT = { has_modifier = mercenary_fleet_size_upgrade_1 }
			}
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= 1500 }
			resource_stockpile_compare = { resource = influence value >= 50 }
		}
		add_resource = { energy = -1500 }
		add_resource = { influence = -50 }
		custom_tooltip = enclave.285.tooltip
		hidden_effect = {
			event_target:mercenary_enclave_country = {
				add_trust = {
					who = root
					amount = -15
				}
				set_country_flag = fleet_commandeered

				country_event = { id = enclave.289 days = 90 } #In three months, bring fleet back for repairs
			}
			event_target:current_mercenary_client = {
				country_event = { id = enclave.294 } #three months warning and refund
			}
		}
	}
	#Size 1
	option = {
		name = DEAL
		trigger = {
			event_target:mercenary_enclave_country = {
				has_modifier = mercenary_fleet_size_upgrade_1
				NOT = { has_modifier = mercenary_fleet_size_upgrade_2 }
			}
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= 3000 }
			resource_stockpile_compare = { resource = influence value >= 75 }
		}
		add_resource = { energy = -3000 }
		add_resource = { influence = -75 }
		custom_tooltip = enclave.285.tooltip
		hidden_effect = {
			event_target:mercenary_enclave_country = {
				add_trust = {
					who = root
					amount = -15
				}
				set_country_flag = fleet_commandeered

				country_event = { id = enclave.289 days = 180 } #In six months, give fleet to patron
			}
			event_target:current_mercenary_client = {
				country_event = { id = enclave.295 } #three months warning and refund
			}
		}
	}
	#Size 2
	option = {
		name = DEAL
		trigger = {
			event_target:mercenary_enclave_country = {
				has_modifier = mercenary_fleet_size_upgrade_2
				NOT = { has_modifier = mercenary_fleet_size_upgrade_3 }
			}
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= 6000 }
			resource_stockpile_compare = { resource = influence value >= 100 }
		}
		add_resource = { energy = -6000 }
		add_resource = { influence = -100 }
		custom_tooltip = enclave.285.tooltip
		hidden_effect = {
			event_target:mercenary_enclave_country = {
				add_trust = {
					who = root
					amount = -15
				}
				set_country_flag = fleet_commandeered

				country_event = { id = enclave.289 days = 180 } #In six months, give fleet to patron
			}
			event_target:current_mercenary_client = {
				country_event = { id = enclave.296 } #three months warning and refund
			}
		}
	}
	#Size 3
	option = {
		name = DEAL
		trigger = {
			event_target:mercenary_enclave_country = {
				has_modifier = mercenary_fleet_size_upgrade_3
				NOT = { has_modifier = mercenary_fleet_size_upgrade_4 }
			}
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= 10000 }
			resource_stockpile_compare = { resource = influence value >= 125 }
		}
		add_resource = { energy = -10000 }
		add_resource = { influence = -125 }
		custom_tooltip = enclave.285.tooltip
		hidden_effect = {
			event_target:mercenary_enclave_country = {
				add_trust = {
					who = root
					amount = -15
				}
				set_country_flag = fleet_commandeered

				country_event = { id = enclave.289 days = 180 } #In six months, give fleet to patron
			}
			event_target:current_mercenary_client = {
				country_event = { id = enclave.297 } #three months warning and refund
			}
		}
	}
	#Size 4
	option = {
		name = DEAL
		trigger = {
			event_target:mercenary_enclave_country = {
				has_modifier = mercenary_fleet_size_upgrade_4
				NOT = { has_modifier = mercenary_fleet_size_upgrade_5 }
			}
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= 15000 }
			resource_stockpile_compare = { resource = influence value >= 150 }
		}
		add_resource = { energy = -15000 }
		add_resource = { influence = -150 }
		custom_tooltip = enclave.285.tooltip
		hidden_effect = {
			event_target:mercenary_enclave_country = {
				add_trust = {
					who = root
					amount = -15
				}
				set_country_flag = fleet_commandeered

				country_event = { id = enclave.289 days = 180 } #In six months, give fleet to patron
			}
			event_target:current_mercenary_client = {
				country_event = { id = enclave.298 } #three months warning and refund
			}
		}
	}
	#Size 5
	option = {
		name = DEAL
		trigger = {
			event_target:mercenary_enclave_country = {
				has_modifier = mercenary_fleet_size_upgrade_5
			}
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= 22000 }
			resource_stockpile_compare = { resource = influence value >= 200 }
		}
		add_resource = { energy = -22000 }
		add_resource = { influence = -200 }
		custom_tooltip = enclave.285.tooltip
		hidden_effect = {
			event_target:mercenary_enclave_country = {
				add_trust = {
					who = root
					amount = -15
				}
				set_country_flag = fleet_commandeered

				country_event = { id = enclave.289 days = 180 } #In six months, give fleet to patron
			}
			event_target:current_mercenary_client = {
				country_event = { id = enclave.299 } #three months warning and refund
			}
		}
	}

	option = {
		name = GOODBYE
		default_hide_option = yes
	}
}

#Mercenary Fleet Commandeered (Merc Side)
country_event = {
	id = enclave.289
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		exists = event_target:loaned_mercenary_fleet
	}

	immediate = {
		random_owned_fleet = {
			limit = {
				is_ship_class = shipclass_military
				is_leased = yes
			}
			save_event_target_as = mercenary_fleet
		}
		random_owned_fleet = {
			limit = {
				is_ship_size = enclave_mercenary_station
			}
			solar_system = {
				save_event_target_as = mercenary_home_system
				space_owner = {
					save_event_target_as = mercenary_patron
				}
			}
		}
		root = {
			save_event_target_as = mercenary_enclave_country
		}
		event_target:mercenary_patron = {
			country_event = { id = enclave.290 days = 90 } #Transfer fleet to Patron. Wait three month to merge fleet with reinforcements and repair
		}
		event_target:mercenary_fleet = {
			end_fleet_contract = {
				initiator = event_target:mercenary_enclave_country
				reason = cancelled
			}
			remove_fleet_flag = fleet_on_loan@root
			set_location = {
				target = event_target:mercenary_home_system
			}
		}
	}
}

#Mercenary Fleet Commandeered (patron side)
country_event = {
	id = enclave.290
	title = enclave.290.name
	desc = enclave.290.desc
	picture = GFX_evt_mercenary_fleet
	show_sound = evn_ove_mercenary_fleet
	is_triggered_only = yes

	immediate = {
		from = {
			if = {
				limit = {
					count_owned_leader = {
						count = 0
						limit = {
							leader_class = commander
							is_councilor = no
							is_ruler = no
						}
					}
				}
				create_leader = {
					class = commander
					species = event_target:mercenary_enclave_species
					name = random
					randomize_traits = no
					event_leader = yes
					skill = 3
					traits = {
						trait = leader_trait_mercenary_warrior
						trait = leader_trait_aggressive_2
					}
				}
			}
			random_owned_leader = {
				limit = {
					leader_class = commander
					is_councilor = no
					is_ruler = no
				}
				save_event_target_as = mercenary_admiral
			}
			ordered_controlled_fleet = {
				limit = {
					is_ship_class = shipclass_military
					is_leased = no
				}
				position = 0
				order_by = trigger:fleet_power
				save_event_target_as = mercenary_fleet
				assign_leader = event_target:mercenary_admiral
			}
			remove_country_flag = fleet_commandeered
			event_target:mercenary_fleet = {
				give_fleet = {
					controller = root
					days = 3600
				}
				set_timed_fleet_flag = {
					flag = fleet_on_loan@root
					days = 3600
				}
			}
		}
		set_country_flag = mercenary_enclave_rented_fleet
	}

	option = {
		name = EXCELLENT
	}
}

#Mercenary Enclave: FLEET COMMANDEERED SIX MONTH WARNING AND REFUND
#Variants for mercenary tier and refund amount
#Tier 0
country_event = {
	id = enclave.294
	title = enclave.294.name
	desc = enclave.294.desc
	picture = GFX_evt_mercenary_fleet
	show_sound = evn_ove_mercenary_fleet
	is_triggered_only = yes

	option = {
		name = UNFORTUNATE
		add_resource = { energy = 3000 }
	}
	option = {
		name = enclave.294.b
		add_resource = { energy = 3000 }
	}
}
#Tier 1
country_event = {
	id = enclave.295
	title = enclave.294.name
	desc = enclave.294.desc
	picture = GFX_evt_mercenary_fleet
	show_sound = evn_ove_mercenary_fleet
	is_triggered_only = yes

	option = {
		name = UNFORTUNATE
		add_resource = { energy = 6000 }
	}
	option = {
		name = enclave.294.b
		add_resource = { energy = 6000 }
	}
}
#Tier 2
country_event = {
	id = enclave.296
	title = enclave.294.name
	desc = enclave.294.desc
	picture = GFX_evt_mercenary_fleet
	show_sound = evn_ove_mercenary_fleet
	is_triggered_only = yes

	option = {
		name = UNFORTUNATE
		add_resource = { energy = 12000 }
	}
	option = {
		name = enclave.294.b
		add_resource = { energy = 12000 }
	}
}
#Tier 3
country_event = {
	id = enclave.297
	title = enclave.294.name
	desc = enclave.294.desc
	picture = GFX_evt_mercenary_fleet
	show_sound = evn_ove_mercenary_fleet
	is_triggered_only = yes

	option = {
		name = UNFORTUNATE
		add_resource = { energy = 20000 }
	}
	option = {
		name = enclave.294.b
		add_resource = { energy = 20000 }
	}
}
#Tier 4
country_event = {
	id = enclave.298
	title = enclave.294.name
	desc = enclave.294.desc
	picture = GFX_evt_mercenary_fleet
	show_sound = evn_ove_mercenary_fleet
	is_triggered_only = yes

	option = {
		name = UNFORTUNATE
		add_resource = { energy = 30000 }
	}
	option = {
		name = enclave.294.b
		add_resource = { energy = 30000 }
	}
}
#Tier 5
country_event = {
	id = enclave.299
	title = enclave.294.name
	desc = enclave.294.desc
	picture = GFX_evt_mercenary_fleet
	show_sound = evn_ove_mercenary_fleet
	is_triggered_only = yes

	option = {
		name = UNFORTUNATE
		add_resource = { energy = 44000 }
	}
	option = {
		name = enclave.294.b
		add_resource = { energy = 44000 }
	}
}


# Additional Mercenary Events
#Mercenary Dividends

##Tech Reward
country_event = {
	id = enclave.2000
	title = enclave.2000.name
	desc = enclave.2000.desc
	picture = GFX_evt_mercenary_enclave
	show_sound = evn_ove_mercenary_enclave
	is_triggered_only = yes

	option = {
		name = EXCELLENT
		trigger = {
			event_target:mercenary_enclave_country = {
				NOT = { has_modifier = mercenary_fleet_size_upgrade_2 }
			}
		}
		add_monthly_resource_mult = {
			resource = energy
			value = @tier1materialreward
			min = @tier1materialmin
			max = @tier1materialmax
		}
		add_monthly_resource_mult = {
			resource = engineering_research
			value = @tier1materialreward
			min = @tier1materialmin
			max = @tier1materialmax
		}
		add_monthly_resource_mult = {
			resource = physics_research
			value = @tier1materialreward
			min = @tier1materialmin
			max = @tier1materialmax
		}
		add_monthly_resource_mult = {
			resource = society_research
			value = @tier1materialreward
			min = @tier1materialmin
			max = @tier1materialmax
		}
	}

	option = {
		name = EXCELLENT
		trigger = {
			event_target:mercenary_enclave_country = {
				NOT = { has_modifier = mercenary_fleet_size_upgrade_4 }
				has_modifier = mercenary_fleet_size_upgrade_2
			}
		}
		add_monthly_resource_mult = {
			resource = energy
			value = @tier2materialreward
			min = @tier2materialmin
			max = @tier2materialmax
		}
		add_monthly_resource_mult = {
			resource = engineering_research
			value = @tier2materialreward
			min = @tier2materialmin
			max = @tier2materialmax
		}
		add_monthly_resource_mult = {
			resource = physics_research
			value = @tier2materialreward
			min = @tier2materialmin
			max = @tier2materialmax
		}
		add_monthly_resource_mult = {
			resource = society_research
			value = @tier2materialreward
			min = @tier2materialmin
			max = @tier2materialmax
		}
	}

	option = {
		name = EXCELLENT
		trigger = {
			event_target:mercenary_enclave_country = {
				has_modifier = mercenary_fleet_size_upgrade_4
			}
		}
		add_monthly_resource_mult = {
			resource = energy
			value = @tier3materialreward
			min = @tier3materialmin
			max = @tier3materialmax
		}
		add_monthly_resource_mult = {
			resource = engineering_research
			value = @tier3materialreward
			min = @tier3materialmin
			max = @tier3materialmax
		}
		add_monthly_resource_mult = {
			resource = physics_research
			value = @tier3materialreward
			min = @tier3materialmin
			max = @tier3materialmax
		}
		add_monthly_resource_mult = {
			resource = society_research
			value = @tier3materialreward
			min = @tier3materialmin
			max = @tier3materialmax
		}
	}
}
##Raw Resources Reward
country_event = {
	id = enclave.2005
	title = enclave.2000.name
	desc = enclave.2005.desc
	picture = GFX_evt_mercenary_enclave
	show_sound = evn_ove_mercenary_enclave
	is_triggered_only = yes

	option = {
		name = EXCELLENT
		trigger = {
			event_target:mercenary_enclave_country = {
				NOT = { has_modifier = mercenary_fleet_size_upgrade_2 }
			}
		}
		add_monthly_resource_mult = {
			resource = energy
			value = @tier1materialreward
			min = @tier1materialmin
			max = @tier1materialmax
		}
		add_monthly_resource_mult = {
			resource = minerals
			value = @tier2materialreward
			min = @tier2materialmin
			max = @tier2materialmax
		}
		add_monthly_resource_mult = {
			resource = food
			value = @tier1materialreward
			min = @tier1materialmin
			max = @tier1materialmax
		}
	}

	option = {
		name = EXCELLENT
		trigger = {
			event_target:mercenary_enclave_country = {
				NOT = { has_modifier = mercenary_fleet_size_upgrade_4 }
				has_modifier = mercenary_fleet_size_upgrade_2
			}
		}
		add_monthly_resource_mult = {
			resource = energy
			value = @tier2materialreward
			min = @tier2materialmin
			max = @tier2materialmax
		}
		add_monthly_resource_mult = {
			resource = minerals
			value = @tier3materialreward
			min = @tier3materialmin
			max = @tier3materialmax
		}
		add_monthly_resource_mult = {
			resource = food
			value = @tier2materialreward
			min = @tier2materialmin
			max = @tier2materialmax
		}
	}

	option = {
		name = EXCELLENT
		trigger = {
			event_target:mercenary_enclave_country = {
				has_modifier = mercenary_fleet_size_upgrade_4
			}
		}
		add_monthly_resource_mult = {
			resource = energy
			value = @tier3materialreward
			min = @tier3materialmin
			max = @tier3materialmax
		}
		add_monthly_resource_mult = {
			resource = minerals
			value = @tier4materialreward
			min = @tier4materialmin
			max = @tier4materialmax
		}
		add_monthly_resource_mult = {
			resource = food
			value = @tier3materialreward
			min = @tier3materialmin
			max = @tier3materialmax
		}
	}
}
##Cash Reward
country_event = {
	id = enclave.2010
	title = enclave.2000.name
	desc = enclave.2010.desc
	picture = GFX_evt_mercenary_enclave
	show_sound = evn_ove_mercenary_enclave
	is_triggered_only = yes

	option = {
		name = EXCELLENT
		trigger = {
			event_target:mercenary_enclave_country = {
				NOT = { has_modifier = mercenary_fleet_size_upgrade_2 }
			}
		}
		add_monthly_resource_mult = {
			resource = energy
			value = @tier2materialreward
			min = @tier2materialmin
			max = @tier2materialmax
		}
	}

	option = {
		name = EXCELLENT
		trigger = {
			event_target:mercenary_enclave_country = {
				NOT = { has_modifier = mercenary_fleet_size_upgrade_4 }
				has_modifier = mercenary_fleet_size_upgrade_2
			}
		}
		add_monthly_resource_mult = {
			resource = energy
			value = @tier3materialreward
			min = @tier3materialmin
			max = @tier3materialmax
		}
	}

	option = {
		name = EXCELLENT
		trigger = {
			event_target:mercenary_enclave_country = {
				has_modifier = mercenary_fleet_size_upgrade_4
			}
		}
		add_monthly_resource_mult = {
			resource = energy
			value = @tier4materialreward
			min = @tier4materialmin
			max = @tier4materialmax
		}
	}
}
##Ships Reward
country_event = {
	id = enclave.2015
	title = enclave.2000.name
	desc = enclave.2015.desc
	picture = GFX_evt_mercenary_enclave
	show_sound = evn_ove_mercenary_enclave
	is_triggered_only = yes

	immediate = {
		#Get Ships Design
		event_target:mercenary_enclave_country = {
			random_controlled_ship = {
				limit = { is_ship_size = corvette }
				save_event_target_as = mercenary_dividend_corvette
			}
			if = { #We don't really want them to give ships they don't have. But they must always be able to provide Corvettes.
				limit = {
					NOT = { exists = event_target:mercenary_dividend_corvette }
				}
				random_owned_design = {
					limit = { is_ship_size = corvette }
					save_event_target_as = mercenary_dividend_corvette
				}
			}
			random_controlled_ship = {
				limit = { is_ship_size = destroyer }
				save_event_target_as = mercenary_dividend_destroyer
			}
			random_controlled_ship = {
				limit = { is_ship_size = cruiser }
				save_event_target_as = mercenary_dividend_cruiser
			}
			random_controlled_ship = {
				limit = { is_ship_size = battleship }
				save_event_target_as = mercenary_dividend_battleship
			}
		}
	}

	option = {
		name = EXCELLENT
		trigger = {
			event_target:mercenary_enclave_country = {
				NOT = { has_modifier = mercenary_fleet_size_upgrade_2 }
			}
		}
		add_monthly_resource_mult = {
			resource = energy
			value = @tier1materialreward
			min = @tier1materialmin
			max = @tier1materialmax
		}
		custom_tooltip = merc_enclave_grants_ships
		hidden_effect = {
			if = {
				limit = {
					exists = event_target:mercenary_dividend_battleship
				}
				create_fleet = {
					effect = {
						set_owner = root
						while = {
							count = 2
							create_ship = {
								name = random
								design = event_target:mercenary_dividend_corvette
								graphical_culture = event_target:mercenary_enclave_country
							}
						}
						while = {
							count = 1
							create_ship = {
								name = random
								design = event_target:mercenary_dividend_battleship
								graphical_culture = event_target:mercenary_enclave_country
							}
						}
					}
				}
			}
			else = {
				create_fleet = {
					effect = {
						set_owner = root
						while = {
							count = 6
							create_ship = {
								name = random
								design = event_target:mercenary_dividend_corvette
								graphical_culture = event_target:mercenary_enclave_country
							}
						}
					}
				}
			}
		}
	}

	option = {
		name = EXCELLENT
		trigger = {
			event_target:mercenary_enclave_country = {
				NOT = { has_modifier = mercenary_fleet_size_upgrade_4 }
				has_modifier = mercenary_fleet_size_upgrade_2
			}
		}
		add_monthly_resource_mult = {
			resource = energy
			value = @tier2materialreward
			min = @tier2materialmin
			max = @tier2materialmax
		}
		custom_tooltip = merc_enclave_grants_ships
		hidden_effect = {
			if = {
				limit = {
					exists = event_target:mercenary_dividend_battleship
				}
				create_fleet = {
					effect = {
						set_owner = root
						while = {
							count = 4
							create_ship = {
								name = random
								design = event_target:mercenary_dividend_corvette
								graphical_culture = event_target:mercenary_enclave_country
							}
						}
						while = {
							count = 2
							create_ship = {
								name = random
								design = event_target:mercenary_dividend_battleship
								graphical_culture = event_target:mercenary_enclave_country
							}
						}
					}
				}
			}
			else_if = {
				limit = {
					exists = event_target:mercenary_dividend_cruiser
				}
				create_fleet = {
					effect = {
						set_owner = root
						while = {
							count = 4
							create_ship = {
								name = random
								design = event_target:mercenary_dividend_cruiser
								graphical_culture = event_target:mercenary_enclave_country
							}
						}
					}
				}
			}
			else_if = {
				limit = {
					exists = event_target:mercenary_dividend_destroyer
				}
				create_fleet = {
					effect = {
						set_owner = root
						while = {
							count = 3
							create_ship = {
								name = random
								design = event_target:mercenary_dividend_destroyer
								graphical_culture = event_target:mercenary_enclave_country
							}
						}
						while = {
							count = 6
							create_ship = {
								name = random
								design = event_target:mercenary_dividend_corvette
								graphical_culture = event_target:mercenary_enclave_country
							}
						}
					}
				}
			}
			else = {
				create_fleet = {
					effect = {
						set_owner = root
						while = {
							count = 12
							create_ship = {
								name = random
								design = event_target:mercenary_dividend_corvette
								graphical_culture = event_target:mercenary_enclave_country
							}
						}
					}
				}
			}
		}
	}

	option = {
		name = EXCELLENT
		trigger = {
			event_target:mercenary_enclave_country = {
				has_modifier = mercenary_fleet_size_upgrade_4
			}
		}
		add_monthly_resource_mult = {
			resource = energy
			value = @tier3materialreward
			min = @tier3materialmin
			max = @tier3materialmax
		}
		custom_tooltip = merc_enclave_grants_ships
		hidden_effect = {
			if = {
				limit = {
					exists = event_target:mercenary_dividend_battleship
				}
				create_fleet = {
					effect = {
						set_owner = root
						while = {
							count = 4
							create_ship = {
								name = random
								design = event_target:mercenary_dividend_corvette
								graphical_culture = event_target:mercenary_enclave_country
							}
						}
						while = {
							count = 4
							create_ship = {
								name = random
								design = event_target:mercenary_dividend_battleship
								graphical_culture = event_target:mercenary_enclave_country
							}
						}
					}
				}
			}
			else_if = {
				limit = {
					exists = event_target:mercenary_dividend_cruiser
				}
				create_fleet = {
					effect = {
						set_owner = root
						while = {
							count = 4
							create_ship = {
								name = random
								design = event_target:mercenary_dividend_cruiser
								graphical_culture = event_target:mercenary_enclave_country
							}
						}
						while = {
							count = 6
							create_ship = {
								name = random
								design = event_target:mercenary_dividend_destroyer
								graphical_culture = event_target:mercenary_enclave_country
							}
						}
					}
				}
			}
			else_if = {
				limit = {
					exists = event_target:mercenary_dividend_destroyer
				}
				create_fleet = {
					effect = {
						set_owner = root
						while = {
							count = 7
							create_ship = {
								name = random
								design = event_target:mercenary_dividend_destroyer
								graphical_culture = event_target:mercenary_enclave_country
							}
						}
						while = {
							count = 6
							create_ship = {
								name = random
								design = event_target:mercenary_dividend_corvette
								graphical_culture = event_target:mercenary_enclave_country
							}
						}
					}
				}
			}
			else = {
				create_fleet = {
					effect = {
						set_owner = root
						while = {
							count = 20
							create_ship = {
								name = random
								design = event_target:mercenary_dividend_corvette
								graphical_culture = event_target:mercenary_enclave_country
							}
						}
					}
				}
			}
		}
	}
}
##Jackpot Reward
country_event = {
	id = enclave.2020
	title = enclave.2000.name
	desc = enclave.2020.desc
	picture = GFX_evt_mercenary_enclave
	show_sound = evn_ove_mercenary_enclave
	is_triggered_only = yes
	trigger = {
		event_target:mercenary_enclave_country = {
			NOT = { has_modifier = merc_financial_troubles }
		}
	}

	immediate = {
		#Get Ships Design
		event_target:mercenary_enclave_country = {
			random_controlled_ship = {
				limit = { is_ship_size = corvette }
				save_event_target_as = mercenary_dividend_corvette
			}
			if = { #We don't really want them to give ships they don't have. But they must always be able to provide Corvettes.
				limit = {
					NOT = { exists = event_target:mercenary_dividend_corvette }
				}
				random_owned_design = {
					limit = { is_ship_size = corvette }
					save_event_target_as = mercenary_dividend_corvette
				}
			}
			random_controlled_ship = {
				limit = { is_ship_size = destroyer }
				save_event_target_as = mercenary_dividend_destroyer
			}
			random_controlled_ship = {
				limit = { is_ship_size = cruiser }
				save_event_target_as = mercenary_dividend_cruiser
			}
			random_controlled_ship = {
				limit = { is_ship_size = battleship }
				save_event_target_as = mercenary_dividend_battleship
			}
		}
	}

	option = {
		name = EXCELLENT
		trigger = {
			event_target:mercenary_enclave_country = {
				NOT = { has_modifier = mercenary_fleet_size_upgrade_2 }
			}
		}
		add_monthly_resource_mult = {
			resource = energy
			value = @tier1materialreward
			min = @tier1materialmin
			max = @tier1materialmax
		}
		add_monthly_resource_mult = {
			resource = minerals
			value = @tier1materialreward
			min = @tier1materialmin
			max = @tier1materialmax
		}
		custom_tooltip = merc_enclave_grants_ships
		hidden_effect = {
			if = {
				limit = {
					exists = event_target:mercenary_dividend_cruiser
				}
				create_fleet = {
					effect = {
						set_owner = root
						while = {
							count = 1
							create_ship = {
								name = random
								design = event_target:mercenary_dividend_cruiser
								graphical_culture = event_target:mercenary_enclave_country
							}
						}
					}
				}
			}
			else = {
				create_fleet = {
					effect = {
						set_owner = root
						while = {
							count = 3
							create_ship = {
								name = random
								design = event_target:mercenary_dividend_corvette
								graphical_culture = event_target:mercenary_enclave_country
							}
						}
					}
				}
			}
		}
	}

	option = {
		name = EXCELLENT
		trigger = {
			event_target:mercenary_enclave_country = {
				NOT = { has_modifier = mercenary_fleet_size_upgrade_4 }
				has_modifier = mercenary_fleet_size_upgrade_2
			}
		}
		add_monthly_resource_mult = {
			resource = energy
			value = @tier2materialreward
			min = @tier2materialmin
			max = @tier2materialmax
		}
		add_monthly_resource_mult = {
			resource = minerals
			value = @tier2materialreward
			min = @tier2materialmin
			max = @tier2materialmax
		}
		add_monthly_resource_mult = {
			resource = engineering_research
			value = @tier1researchreward
			min = @tier1researchmin
			max = @tier1researchmax
		}
		add_monthly_resource_mult = {
			resource = physics_research
			value = @tier1researchreward
			min = @tier1researchmin
			max = @tier1researchmax
		}
		add_monthly_resource_mult = {
			resource = society_research
			value = @tier1researchreward
			min = @tier1researchmin
			max = @tier1researchmax
		}
		custom_tooltip = merc_enclave_grants_ships
		hidden_effect = {
			if = {
				limit = {
					exists = event_target:mercenary_dividend_battleship
				}
				create_fleet = {
					effect = {
						set_owner = root
						while = {
							count = 2
							create_ship = {
								name = random
								design = event_target:mercenary_dividend_corvette
								graphical_culture = event_target:mercenary_enclave_country
							}
						}
						while = {
							count = 1
							create_ship = {
								name = random
								design = event_target:mercenary_dividend_battleship
								graphical_culture = event_target:mercenary_enclave_country
							}
						}
					}
				}
			}
			else_if = {
				limit = {
					exists = event_target:mercenary_dividend_cruiser
				}
				create_fleet = {
					effect = {
						set_owner = root
						while = {
							count = 2
							create_ship = {
								name = random
								design = event_target:mercenary_dividend_cruiser
								graphical_culture = event_target:mercenary_enclave_country
							}
						}
					}
				}
			}
			else_if = {
				limit = {
					exists = event_target:mercenary_dividend_destroyer
				}
				create_fleet = {
					effect = {
						set_owner = root
						while = {
							count = 2
							create_ship = {
								name = random
								design = event_target:mercenary_dividend_destroyer
								graphical_culture = event_target:mercenary_enclave_country
							}
						}
						while = {
							count = 2
							create_ship = {
								name = random

								design = event_target:mercenary_dividend_corvette
								graphical_culture = event_target:mercenary_enclave_country
							}
						}
					}
				}
			}
			else = {
				create_fleet = {
					effect = {
						set_owner = root
						while = {
							count = 6
							create_ship = {
								name = random
								design = event_target:mercenary_dividend_corvette
								graphical_culture = event_target:mercenary_enclave_country
							}
						}
					}
				}
			}
		}
	}

	option = {
		name = EXCELLENT
		trigger = {
			event_target:mercenary_enclave_country = {
				has_modifier = mercenary_fleet_size_upgrade_4
			}
		}
		add_monthly_resource_mult = {
			resource = energy
			value = @tier3materialreward
			min = @tier3materialmin
			max = @tier3materialmax
		}
		add_monthly_resource_mult = {
			resource = minerals
			value = @tier3materialreward
			min = @tier3materialmin
			max = @tier3materialmax
		}
		add_monthly_resource_mult = {
			resource = engineering_research
			value = @tier2researchreward
			min = @tier2researchmin
			max = @tier2researchmax
		}
		add_monthly_resource_mult = {
			resource = physics_research
			value = @tier2researchreward
			min = @tier2researchmin
			max = @tier2researchmax
		}
		add_monthly_resource_mult = {
			resource = society_research
			value = @tier2researchreward
			min = @tier2researchmin
			max = @tier2researchmax
		}
		custom_tooltip = merc_enclave_grants_ships
		hidden_effect = {
			if = {
				limit = {
					exists = event_target:mercenary_dividend_battleship
				}
				create_fleet = {
					effect = {
						set_owner = root
						while = {
							count = 4
							create_ship = {
								name = random
								design = event_target:mercenary_dividend_corvette
								graphical_culture = event_target:mercenary_enclave_country
							}
						}
						while = {
							count = 2
							create_ship = {
								name = random
								design = event_target:mercenary_dividend_battleship
								graphical_culture = event_target:mercenary_enclave_country
							}
						}
					}
				}
			}
			else_if = {
				limit = {
					exists = event_target:mercenary_dividend_cruiser
				}
				create_fleet = {
					effect = {
						set_owner = root
						while = {
							count = 4
							create_ship = {
								name = random

								design = event_target:mercenary_dividend_cruiser
								graphical_culture = event_target:mercenary_enclave_country
							}
						}
					}
				}
			}
			else_if = {
				limit = {
					exists = event_target:mercenary_dividend_destroyer
				}
				create_fleet = {
					effect = {
						set_owner = root
						while = {
							count = 3
							create_ship = {
								name = random
								design = event_target:mercenary_dividend_destroyer
								graphical_culture = event_target:mercenary_enclave_country
							}
						}
						while = {
							count = 6
							create_ship = {
								name = random
								design = event_target:mercenary_dividend_corvette
								graphical_culture = event_target:mercenary_enclave_country
							}
						}
					}
				}
			}
			else = {
				create_fleet = {
					effect = {
						set_owner = root
						while = {
							count = 12
							create_ship = {
								name = random
								design = event_target:mercenary_dividend_corvette
								graphical_culture = event_target:mercenary_enclave_country
							}
						}
					}
				}
			}
		}
	}
}
##Sadpot
country_event = {
	id = enclave.2025
	title = enclave.2000.name
	desc = enclave.2025.desc
	picture = GFX_evt_mercenary_enclave
	show_sound = evn_ove_mercenary_enclave
	is_triggered_only = yes

	option = {
		name = enclave.2025.a
		add_monthly_resource_mult = {
			resource = energy
			value = @tier1materialreward
			min = @tier1materialmin
			max = @tier1materialmax
		}
		hidden_effect = {
			event_target:mercenary_enclave_country = {
				add_modifier = {
					modifier = merc_financial_troubles
					days = 3600
				}
			}
		}
	}

	option = {
		name = enclave.2025.b
		event_target:mercenary_enclave_country = {
			ruler = {
				kill_leader = { show_notification = no}
			}
		}
		hidden_effect = {
			event_target:mercenary_enclave_country = {
				add_modifier = {
					modifier = merc_financial_troubles
					days = 1000
				}
				create_leader = {
					class = commander
					species = owner_main_species
					event_leader = yes
					name = random
					skill = 1
				}
				set_leader = last_created_leader
			}
		}
	}

	option = {
		name = enclave.2025.c
		trigger = {
			event_target:mercenary_enclave_country = {
				NOT = { has_modifier = mercenary_fleet_size_upgrade_2 }
			}
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= 1000 }
		}
		add_resource = { energy = -1000 }
		add_resource = { influence = 50 }
		event_target:mercenary_enclave_country = {
			add_trust = {
				who = root
				amount = 20
			}
		}
	}

	option = {
		name = enclave.2025.c
		trigger = {
			event_target:mercenary_enclave_country = {
				NOT = { has_modifier = mercenary_fleet_size_upgrade_4 }
				has_modifier = mercenary_fleet_size_upgrade_2
			}
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= 2500 }
		}
		add_resource = { energy = -2500 }
		add_resource = { influence = 75 }
		event_target:mercenary_enclave_country = {
			add_trust = {
				who = root
				amount = 20
			}
		}
	}

	option = {
		name = enclave.2025.c
		trigger = {
			event_target:mercenary_enclave_country = {
				has_modifier = mercenary_fleet_size_upgrade_4
			}
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= 10000 }
		}
		add_resource = { energy = -10000 }
		add_resource = { influence = 100 }
		event_target:mercenary_enclave_country = {
			add_trust = {
				who = root
				amount = 20
			}
		}
	}
}

#Logistic service
country_event = {
	id = enclave.2030
	base = enclave.205
	desc_clear = yes
	option_clear = yes

	desc = enclave.2030.desc

	#Discuss another matter (return to menu)
	option = {
		name = enclave.215.a
		hidden_effect = {
			country_event = { id = enclave.205 }
		}
	}

	option = {
		name = DEAL
		trigger = { max_naval_capacity < 76 }
		allow = {
			resource_stockpile_compare = { resource = energy value >= 1000 }
		}
		add_resource = { energy = -1000 }
		custom_tooltip = opinion10
		add_modifier = {
			modifier = mercenary_enclave_logistic_help
			days = 3600
		}
		hidden_effect = {
			event_target:mercenary_enclave_country = {
				add_trust = {
					who = root
					amount = 10
				}
			}
			country_event = { id = enclave.2035 days = 3600 }
		}
	}

	option = {
		name = DEAL
		trigger = {
			max_naval_capacity > 75
			max_naval_capacity < 151
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= 1500 }
		}
		add_resource = { energy = -1500 }
		custom_tooltip = opinion20
		add_modifier = {
			modifier = mercenary_enclave_logistic_help
			days = 3600
		}
		hidden_effect = {
			event_target:mercenary_enclave_country = {
				add_trust = {
					who = root
					amount = 20
				}
			}
			country_event = { id = enclave.2035 days = 3600 }
		}
	}

	option = {
		name = DEAL
		trigger = {
			max_naval_capacity > 150
			max_naval_capacity < 276
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= 2500 }
		}
		add_resource = { energy = -2500 }
		custom_tooltip = opinion20
		add_modifier = {
			modifier = mercenary_enclave_logistic_help
			days = 3600
		}
		hidden_effect = {
			event_target:mercenary_enclave_country = {
				add_trust = {
					who = root
					amount = 20
				}
			}
			country_event = { id = enclave.2035 days = 3600 }
		}
	}

	option = {
		name = DEAL
		trigger = {
			max_naval_capacity > 275
			max_naval_capacity < 451
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= 4000 }
		}
		add_resource = { energy = -4000 }
		custom_tooltip = opinion20
		add_modifier = {
			modifier = mercenary_enclave_logistic_help
			days = 3600
		}
		hidden_effect = {
			event_target:mercenary_enclave_country = {
				add_trust = {
					who = root
					amount = 20
				}
			}
			country_event = { id = enclave.2035 days = 3600 }
		}
	}

	option = {
		name = DEAL
		trigger = {
			max_naval_capacity > 450
		}
		allow = {
		resource_stockpile_compare = { resource = energy value >= 6000 }
		}
		add_resource = { energy = -5000 }
		custom_tooltip = opinion20
		add_modifier = {
			modifier = mercenary_enclave_logistic_help
			days = 3600
		}
		hidden_effect = {
			event_target:mercenary_enclave_country = {
				add_trust = {
					who = root
					amount = 20
				}
			}
			country_event = { id = enclave.2035 days = 3600 }
		}
	}
}

#Continue Logistic Services?
country_event = {
	id = enclave.2035
	title = enclave.2035.name
	desc = enclave.2035.desc
	picture = GFX_evt_mercenary_enclave
	show_sound = evn_ove_mercenary_enclave
	is_triggered_only = yes

	option = {
		name = DEAL
		trigger = { max_naval_capacity < 76 }
		allow = {
			resource_stockpile_compare = { resource = energy value >= 1000 }
		}
		add_resource = { energy = -1000 }
		custom_tooltip = opinion20
		add_modifier = {
			modifier = mercenary_enclave_logistic_help
			days = 3600
		}
		hidden_effect = {
			event_target:mercenary_enclave_country = {
				add_trust = {
					who = root
					amount = 20
				}
			}
			country_event = { id = enclave.2035 days = 3600 }
		}
	}

	option = {
		name = DEAL
		trigger = {
			max_naval_capacity > 75
			max_naval_capacity < 151
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= 1500 }
		}
		add_resource = { energy = -1500 }
		custom_tooltip = opinion20
		add_modifier = {
			modifier = mercenary_enclave_logistic_help
			days = 3600
		}
		hidden_effect = {
			event_target:mercenary_enclave_country = {
				add_trust = {
					who = root
					amount = 20
				}
			}
			country_event = { id = enclave.2035 days = 3600 }
		}
	}

	option = {
		name = DEAL
		trigger = {
			max_naval_capacity > 150
			max_naval_capacity < 276
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= 2500 }
		}
		add_resource = { energy = -2500 }
		custom_tooltip = opinion20
		add_modifier = {
			modifier = mercenary_enclave_logistic_help
			days = 3600
		}
		hidden_effect = {
			event_target:mercenary_enclave_country = {
				add_trust = {
					who = root
					amount = 20
				}
			}
			country_event = { id = enclave.2035 days = 3600 }
		}
	}

	option = {
		name = DEAL
		trigger = {
			max_naval_capacity > 275
			max_naval_capacity < 451
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= 4000 }
		}
		add_resource = { energy = -4000 }
		custom_tooltip = opinion20
		add_modifier = {
			modifier = mercenary_enclave_logistic_help
			days = 3600
		}
		hidden_effect = {
			event_target:mercenary_enclave_country = {
				add_trust = {
					who = root
					amount = 20
				}
			}
			country_event = { id = enclave.2035 days = 3600 }
		}
	}

	option = {
		name = DEAL
		trigger = {
			max_naval_capacity > 450
		}
		allow = {
		resource_stockpile_compare = { resource = energy value >= 6000 }
		}
		add_resource = { energy = -5000 }
		custom_tooltip = opinion20
		add_modifier = {
			modifier = mercenary_enclave_logistic_help
			days = 3600
		}
		hidden_effect = {
			event_target:mercenary_enclave_country = {
				add_trust = {
					who = root
					amount = 20
				}
			}
			country_event = { id = enclave.2035 days = 3600 }
		}
	}

	option = {
		name = enclave.2035.a
	}
}

#Mercenary Enclave: SHARE TECHNOLOGY
country_event = {
	id = enclave.2040
	base = enclave.205
	desc_clear = yes
	option_clear = yes

	desc = enclave.2040.desc

	#Discuss another matter (return to menu)
	option = {
		name = enclave.215.a
		hidden_effect = {
			country_event = { id = enclave.205 }
		}
	}

	#Offer technology for a small fee
	option = {
		name = DEAL
		add_resource = { energy = 1000 }
		custom_tooltip = opinion15
		custom_tooltip = enclave.2040.a.tt
		hidden_effect = {
			event_target:mercenary_enclave_country = {
				add_trust = {
					who = root
					amount = 15
				}
				set_timed_country_flag = { flag = updating_databanks days = @ShareTechTimer }
				set_saved_date = {
					key = updating_databanks_timer
					days_from_present = @ShareTechTimer
					expires = @ShareTechTimer
				}
				copy_techs_from = { target = root }
			}

			country_event = { id = enclave.225 }
		}
	}

	option = {
		name = GOODBYE
		default_hide_option = yes
	}
}

#Khan hires available mercs
event = {
	id = enclave.2045
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_country = {
			is_country_type = awakened_marauders
		}
		NOT = { has_global_flag = great_khan_dead }
		any_country = {
			is_country_type = enclave_mercenary
			NOT = {
				any_owned_fleet = {
					is_leased = yes
				}
			}
		}
	}

	immediate = {
		random_country = {
			limit = {
				is_country_type = awakened_marauders
			}
			save_event_target_as = khan_country
			random_owned_fleet = {
				limit = {
					has_fleet_flag = khan_fleet
				}
				save_event_target_as = khan_fleet
			}
		}
		random_country = {
			limit = {
				is_country_type = enclave_mercenary
				NOT = {
					any_owned_fleet = {
						is_leased = yes
					}
				}
			}
			save_event_target_as = mercenary_enclave_country
			#Check if the patron is a player to give them a chance at a counteroffer
			if = {
				limit = {
					event_target:mercenary_enclave_country = {
						any_owned_fleet = {
							is_ship_size = enclave_mercenary_station
							solar_system = {
								exists = space_owner
								space_owner = {
									is_ai = yes
								}
							}
						}
					}
				}
				#Khan hires only the main fleet
				ordered_controlled_fleet = {
					limit = {
						is_ship_class = shipclass_military
						is_leased = no
					}
					position = 0
					order_by = trigger:fleet_power
					save_event_target_as = mercenary_fleet
				}
				if = {
					limit = {
						exists = event_target:mercenary_fleet
					}
					event_target:mercenary_fleet = {
						give_fleet = { controller = event_target:khan_country days = 1510 }
						set_name = {
							key = NAME_Mercenary_Fleet
							variable_string = "[event_target:mercenary_enclave_country.GetName]"
						}
						auto_follow_fleet = {
	 						target = event_target:khan_fleet
						}
					}
				}
				set_country_flag = mercenary_enclave_rented_fleet
			}
			else = {
				event_target:mercenary_enclave_country = {
					random_owned_fleet = {
						limit = {
							is_ship_size = enclave_mercenary_station
							exists = solar_system
						}
						solar_system = {
							if = {
								limit = {
									exists = space_owner
								}
								space_owner = {
									country_event = { id = enclave.2050 }
								}
							}
						}
					}
				}
			}
		}
	}
}

country_event = {
	id = enclave.2050
	title = enclave.2050.name
	desc = enclave.2050.desc
	picture = GFX_evt_mercenary_fleet
	show_sound = evn_ove_mercenary_fleet
	is_triggered_only = yes

	option = { #Yes, open diplomacy
		name = enclave.2050.a
		custom_tooltip = enclave.2050.a.tt
		hidden_effect = {
			country_event = { id = enclave.205 }
			event_target:khan_country = {
				country_event = { id = enclave.2051 days = 60 }
			}
		}
	}

	option = { #Nope
		name = enclave.2050.b
		custom_tooltip = enclave.2050.a.tt
		hidden_effect = {
			event_target:khan_country = {
				country_event = { id = enclave.2051 days = 60 }
			}
		}
	}

	option = { #Nope, but rude
		name = enclave.2050.c
		custom_tooltip = enclave.2050.b.tt
		hidden_effect = {
			event_target:khan_country = {
				country_event = { id = enclave.2051 days = 7 }
			}
		}
	}
}

country_event = {
	id = enclave.2051
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		event_target:mercenary_enclave_country = {
			NOT = {
				any_owned_fleet = {
					is_leased = yes
				}
			}
		}
	}

	immediate = {
		event_target:mercenary_enclave_country = {
			ordered_controlled_fleet = {
				limit = {
					is_ship_class = shipclass_military
					is_leased = no
				}
				position = 0
				order_by = trigger:fleet_power
				save_event_target_as = mercenary_fleet
			}
			event_target:mercenary_fleet = {
				give_fleet = { controller = event_target:khan_country days = 1510 }
				set_name = {
					key = NAME_Mercenary_Fleet
					variable_string = "[event_target:mercenary_enclave_country.GetName]"
				}
				auto_follow_fleet = {
 					target = event_target:khan_fleet
				}
			}
			set_country_flag = mercenary_enclave_rented_fleet
		}
	}
}

#Khan dies, mercenaries leave
event = {
	id = enclave.2055
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_global_flag = great_khan_dead
		any_country = {
			is_country_type = enclave_mercenary
			any_owned_fleet = {
				is_leased = yes
				controller = {
					is_country_type = awakened_marauders
				}
			}
		}
	}

	immediate = {
		random_country = {
			limit = {
				is_country_type = awakened_marauders
			}
			save_event_target_as = khan_country
		}

		random_country = {
			limit = {
				is_country_type = enclave_mercenary
				any_owned_fleet = {
					is_leased = yes
					controller = {
						is_country_type = awakened_marauders
					}
				}
			}
			random_owned_fleet ={
				limit = {
					is_leased = yes
					controller = {
						is_country_type = awakened_marauders
					}
				}
				end_fleet_contract = {
					initiator = event_target:khan_country
					reason = cancelled
				}
			}
			remove_country_flag = mercenary_enclave_rented_fleet
		}
	}
}

# Flag the enclave to block the AI from hiring mercs too quickly
fleet_event = {
	id = enclave.2058
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		fromfrom = {
			has_civic = civic_mercenary_enclave
			NOT = {
				has_country_flag = merc_ai_delay
			}
		}
	}

	immediate = {
		fromfrom = {
			set_timed_country_flag = {
				flag = merc_ai_delay
				years = 1
			}
		}
	}
}

#Merc Fleet Lease Ended
fleet_event = {
	id = enclave.2059
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		from = {
			is_ai = no
		}
		fromfrom = {
			has_civic = civic_mercenary_enclave
		}
	}

	immediate = {
		fromfrom = {
			save_event_target_as = mercenary_enclave_country
			#Failsafe to catch if fleets are no longer on loan
			remove_loaning_fleet_flag = yes
		}
		from = {
			country_event = { id = enclave.2060 }
		}
	}
}

country_event = {
	id = enclave.2060
	title = enclave.2060.name
	desc = enclave.2060.desc
	picture = GFX_evt_mercenary_fleet
	show_sound = evn_ove_mercenary_fleet
	is_triggered_only = yes

	option = { #Nope
		name = enclave.2060.a
	}

	option = { #Yes, open diplomacy
		name = enclave.2060.b
		hidden_effect = {
			country_event = { id = enclave.205 }
		}
	}
}

#Unemployed mercs return to merc station
event = {
	id = enclave.2065
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_country = {
			is_country_type = enclave_mercenary
			any_owned_fleet = {
				NOT = { is_leased = yes }
			}
		}
	}

	immediate = {
		random_country = {
			limit = {
				is_country_type = enclave_mercenary
				any_owned_fleet = {
					NOT = { is_leased = yes }
				}
			}
			country_event = {id = enclave.2070 days = 5}
		}
	}
}

country_event = {
	id = enclave.2070
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_owned_fleet = {
			is_leased = no
			exists = solar_system
			solar_system = {
				NOT = {
					any_ship_in_system = {
						is_ship_size = enclave_mercenary_station
					}
				}
			}
		}
	}

	immediate = {
		random_owned_fleet = {
			limit = {
				is_ship_size = enclave_mercenary_station
			}
			save_event_target_as = mercenary_enclave_station
		}
		ordered_controlled_fleet = {
			limit = {
				is_ship_class = shipclass_military
				is_leased = no
			}
			position = 0
			order_by = trigger:fleet_power
			auto_follow_fleet = {
				target = event_target:mercenary_enclave_station
			}
		}
	}
}

country_event = { # Assign an admiral to hired merc fleet if they lose theirs
	id = enclave.2075
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_civic = civic_mercenary_enclave
		any_owned_fleet = {
			is_leased = yes
			NOT = {
				exists = leader
			}
		}
	}

	immediate = {
		create_leader = {
			class = commander
			species = event_target:mercenary_enclave_species
			event_leader = yes
			name = random
			skill = 3
			traits = {
				trait = leader_trait_mercenary_warrior
			}
		}
		random_owned_fleet = {
			limit = {
				is_leased = yes
				NOT = {
					exists = leader
				}
			}
			assign_leader = last_created_leader
		}
	}
}

# This = fleet
# From = country that borrowed the fleet
# FromFrom = country that owns the fleet
# FromFromFrom = country that initiated the ending (the same as owner in a case of expiration)
fleet_event = {
	id = enclave.2080
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		exists = leader # vfix
		fromfrom = {
			has_civic = civic_mercenary_enclave
		}
	}

	immediate = {
		if = {
			limit = {
				exists = leader
			}
			leader = {
				set_owner = fromfrom
			}
		}
	}
}

# This = fleet
# From = country that borrowed the fleet
# FromFrom = country that owns the fleet
# Is fired immediately after fleet is leased out
fleet_event = {
	id = enclave.2085
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		exists = leader # vfix
		fromfrom = {
			has_civic = civic_mercenary_enclave
		}
	}

	immediate = {
		if = {
			limit = {
				exists = leader
			}
			leader = {
				set_leader_flag = hired_admiral_merc_leader
				set_owner = from
			}
		}
	}
}

#####################
# SALVAGER ENCLAVES
#####################

# Salvager Enclave Greetings: Gatekeeper event
# Via on_custom_diplomacy | this = target country (player); from = country being contacted
country_event = {
	id = enclave.300
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		from = {
			is_country_type = enclave
			has_country_flag = salvager_enclave_country
		}
		has_salvager_event = no
	}

	immediate = {
		if = {
			limit = {
				NOT = { exists = event_target:salvager_enclave_country }
			}
			from = {
				save_global_event_target_as = salvager_enclave_country
			}
		}
		country_event = { id = enclave.305 }
	}
}

# Post-First Contact setup
# from = First Contact site owner
country_event = {
	id = enclave.304
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = {
				from = {
					NOT = { has_country_flag = salvager_enclave_country }
				}
			}
			from = {
				country_event = { id = enclave.305 }
			}
		}
		else = {
			fromfrom = {
				country_event = { id = enclave.305 }
			}
		}
	}
}

# Salvager Enclave: GREETINGS
# This = player country; event_target:salvager_enclave_country = enclave country
country_event = {
	id = enclave.305
	title = enclave.305.name
	desc_clear = yes
	option_clear = yes
	is_triggered_only = yes
	diplomatic = yes
	custom_gui = "enclave_salvager_window"
	custom_gui_option = "enclave_salvager_option"
	picture_event_data = {
		portrait = event_target:salvager_enclave_country
		room = salvagers_room
	}
	location = event_target:salvager_enclave_system
	#First-time greetings
	desc = {
		trigger = {
			NOR = {
				has_country_flag = salvager_enclave_diplomacy_engaged
				is_hostile = event_target:salvager_enclave_country
				is_homicidal = yes
			}
		}
		text = enclave.305.a.desc
		text = enclave.305.b.desc
		text = enclave.305.c.desc
	}
	#Return greetings
	desc = {
		trigger = {
			has_country_flag = salvager_enclave_diplomacy_engaged
			NOR = {
				is_hostile = event_target:salvager_enclave_country
				is_homicidal = yes
			}
		}
		text = enclave.305.n.desc
		text = enclave.305.o.desc
		text = enclave.305.p.desc
		text = enclave.305.q.desc
	}
	#First-time greetings for scavenger country
	desc = {
		exclusive_trigger = {
			NOR = {
				has_country_flag = salvager_enclave_diplomacy_engaged
				is_hostile = event_target:salvager_enclave_country
				is_homicidal = yes
			}
			is_scavenger = yes
		}
		text = enclave.305.desc.scavenger_first
	}
	#Return greetings for scavenger country
	desc = {
		trigger = { #not exclusive as want this one to be a bit rare
			has_country_flag = salvager_enclave_diplomacy_engaged
			NOR = {
				is_hostile = event_target:salvager_enclave_country
				is_homicidal = yes
			}
			is_scavenger = yes
		}
		text = enclave.305.desc.scavenger_followup
	}
	desc = {
		trigger = {
			has_country_flag = salvager_enclave_has_scrapped_organic
			NOR = {
				is_hostile = event_target:salvager_enclave_country
				is_homicidal = yes
			}
		}
		text = enclave.305.organic.desc
	}
	desc = {
		trigger = {
			OR = {
				is_hostile = event_target:salvager_enclave_country
				is_homicidal = yes
			}
		}
		text = enclave.305.desc.hostile
	}

	immediate = {
		if = {
			limit = {
				NOT = { has_country_flag = salvager_enclave_diplomacy_engaged }
				is_scavenger = yes
			}
			event_target:salvager_enclave_country = {
				add_trust = {
					who = root
					amount = 10
				}
			}
		}
	}

	#Note on Opinion levels: some options only become visible (trigger) at given opinion thresholds, but opinion 'allow' checks are only performed once the player has clicked through for more information.

	#Scrap Fleet
	option = {
		name = enclave.305.a
		custom_tooltip = salvager_tt_scrapfleet
		trigger = {
			NOR = {
				is_hostile = event_target:salvager_enclave_country
				is_homicidal = yes
			}
		}
		allow = {
			custom_tooltip = {
				fail_text = salvager_scrap_fleet_cooldown
				NOT = { has_country_flag = salvager_enclave_recently_scrapped }
			}
		}
		hidden_effect = {
			country_event = { id = enclave.310 }
		}
	}
	#Reclaimed Vessel
	option = {
		name = enclave.305.b
		custom_tooltip = salvager_tt_reclaimedvessel
		trigger = {
			NOR = {
				is_hostile = event_target:salvager_enclave_country
				is_homicidal = yes
			}
		}
		allow = {
			# Hide if this is the only playable country in the galaxy
			custom_tooltip = {
				text = requires_reclaimable_vessels
				count_playable_country = {
					limit = {
						NOR = {
							is_same_value = root
							has_ascension_perk = ap_enigmatic_engineering
						}
					}
					count > 1
				}
			}
			custom_tooltip = {
				fail_text = salvager_reclaimed_vessel_cooldown
				NOT = { has_country_flag = salvager_enclave_recently_reclaimed_all }
			}
		}
		hidden_effect = {
			country_event = { id = enclave.320 }
		}
	}
	#Salvage Works starbase building
	option = {
		name = enclave.305.c
		custom_tooltip = salvager_tt_salvageworks
		trigger = {
			NOR = {
				is_hostile = event_target:salvager_enclave_country
				is_homicidal = yes
				has_country_flag = salvager_enclave_bought_salvage_works
			}
			event_target:salvager_enclave_country = {
				trust = {
					who = root
					value >= 30
				}
			}
		}
		hidden_effect = {
			country_event = { id = enclave.330 }
		}
	}
	#Salvager Overdrive modifier
	option = {
		name = enclave.305.d
		trigger = {
			NOR = {
				is_hostile = event_target:salvager_enclave_country
				is_homicidal = yes
			}
			event_target:salvager_enclave_country = {
				trust = {
					who = root
					value >= 40
				}
			}
		}
		allow = {
			custom_tooltip = {
				fail_text = requires_salvage_works
				any_owned_starbase = {
					has_starbase_building = salvager_workshop
				}
			}
		}
		hidden_effect = {
			country_event = { id = enclave.335 }
		}
	}
	#Commission salvage
	option = {
		name = enclave.305.e
		custom_tooltip = salvager_tt_commissionsalvage
		trigger = {
			NOR = {
				is_hostile = event_target:salvager_enclave_country
				is_homicidal = yes
			}
			event_target:salvager_enclave_country = {
				trust = {
					who = root
					value >= 10
				}
			}
		}
		hidden_effect = {
			country_event = { id = enclave.340 }
		}
	}
	#Salvager Insight modifier
	option = {
		name = enclave.305.f
		trigger = {
			NOR = {
				is_hostile = event_target:salvager_enclave_country
				is_homicidal = yes
			}
			event_target:salvager_enclave_country = {
				trust = {
					who = root
					value >= 10
				}
			}
		}
		allow = {
			custom_tooltip = {
				fail_text = salvager_insight_cooldown
				NOT = { has_modifier = salvager_insight }
			}
		}
		hidden_effect = {
			country_event = { id = enclave.345 }
		}
	}
	#Master Salvager
	option = {
		name = enclave.305.g
		trigger = {
			NOR = {
				is_hostile = event_target:salvager_enclave_country
				is_homicidal = yes
			}
			event_target:salvager_enclave_country = {
				trust = {
					who = root
					value >= 20
				}
			}
		}
		allow = {
			custom_tooltip = {
				fail_text = master_salvager_already_bought
				NOT = {
					any_owned_leader = {
						has_leader_flag = master_salvager
					}
				}
			}
		}
		hidden_effect = {
			country_event = { id = enclave.350 }
		}
	}
	#Ask about the Many-Tentacled Guest (Jaunted Traveler event chain)
	option = {
		name = enclave.405.f
		trigger = {
			has_country_flag = knows_jaunting_traveler_story
			NOT = { has_country_flag = jaunted_traveler_secret_revealed }
		}
		hidden_effect = {
			country_event = { id = enclave.7110 }
		}
	}
	#Cease dialog
	option = {
		name = GOODBYE
		trigger = {
			NOR = {
				is_hostile = event_target:salvager_enclave_country
				is_homicidal = yes
			}
		}
		default_hide_option = yes
	}
	# Hostility cease
	option = {
		name = DOTDOTDOT
		trigger = {
			OR = {
				is_hostile = event_target:salvager_enclave_country
				is_homicidal = yes
			}
		}
	}

	after = {
		set_country_flag = salvager_enclave_diplomacy_engaged
	}
}

# Salvager Enclave: SCRAP FLEET
# This = player country; event_target:salvager_enclave_country = enclave country
country_event = {
	id = enclave.310
	base = enclave.305
	desc_clear = yes
	option_clear = yes

	desc = {
		trigger = {
			has_country_flag = has_scrappable_fleet
			NOT = {
				has_country_flag = has_organic_scrappable_fleet
			}
		}
		text = enclave.310.desc
	}
	desc = {
		trigger = {
			has_country_flag = has_organic_scrappable_fleet
		}
		text = enclave.310.organic.desc
	}
	desc = {
		trigger = {
			NOT = { has_country_flag = has_scrappable_fleet }
		}
		text = enclave.310.nofleet.desc
	}

	immediate = {
		if = {
			limit = {
				event_target:salvager_enclave_system = {
					any_fleet_in_system = {
						exists = owner
						fleet_can_be_scrapped = yes
					}
				}
			}
			set_country_flag = has_scrappable_fleet
			event_target:salvager_enclave_system = {
				ordered_fleet_in_system = {
					limit = {
						fleet_can_be_scrapped = yes
						NAND = {
							exists = event_target:scrappable_fleet_1
							is_same_value = event_target:scrappable_fleet_1
						}
					}
					order_by = trigger:fleet_power
					inverse = yes
					position = 0
					save_event_target_as = scrappable_fleet_1
					salvager_enclave_scrap_fleet_estimate = yes
				}
				ordered_fleet_in_system = {
					limit = {
						fleet_can_be_scrapped = yes
						NOR = {
							AND = {
								exists = event_target:scrappable_fleet_1
								is_same_value = event_target:scrappable_fleet_1
							}
							exists = event_target:scrappable_fleet_2
						}
					}
					order_by = trigger:fleet_power
					inverse = no
					position = 0
					save_event_target_as = scrappable_fleet_2
					salvager_enclave_scrap_fleet_estimate = yes
				}
				random_fleet_in_system = {
					limit = {
						fleet_can_be_scrapped = yes
						NOR = {
							AND = {
								exists = event_target:scrappable_fleet_1
								is_same_value = event_target:scrappable_fleet_1
							}
							AND = {
								exists = event_target:scrappable_fleet_2
								is_same_value = event_target:scrappable_fleet_2
							}
							exists = event_target:scrappable_fleet_3
						}
					}
					save_event_target_as = scrappable_fleet_3
					salvager_enclave_scrap_fleet_estimate = yes
				}
				random_fleet_in_system = {
					limit = {
						fleet_can_be_scrapped = yes
						NOR = {
							AND = {
								exists = event_target:scrappable_fleet_1
								is_same_value = event_target:scrappable_fleet_1
							}
							AND = {
								exists = event_target:scrappable_fleet_2
								is_same_value = event_target:scrappable_fleet_2
							}
							AND = {
								exists = event_target:scrappable_fleet_3
								is_same_value = event_target:scrappable_fleet_3
							}
							exists = event_target:scrappable_fleet_4
						}
					}
					save_event_target_as = scrappable_fleet_4
					salvager_enclave_scrap_fleet_estimate = yes
				}
			}
		}
	}

	#Back to menu
	option = {
		name = enclave.310.a
		hidden_effect = {
			country_event = { id = enclave.305 }
		}
	}
	#Choose a fleet to scrap (fleet 1)
	option = {
		name = enclave.310.b
		trigger = {
			exists = event_target:scrappable_fleet_1
		}
		allow = {
			resource_stockpile_compare = {
				resource = energy
				value >= @ScrapCost
				mult = -1
			}
			custom_tooltip = {
				fail_text = IS_NOT_CLOAKED
				event_target:scrappable_fleet_1 = {
					is_cloaked = no
				}
			}
		}
		add_resource = { energy = @ScrapCost }
		#Describe rewards to come (handled in a subsequent event)
		if = {
			limit = {
				event_target:scrappable_fleet_1 = {
					has_fleet_flag = scrap_organic_fleet
				}
			}
			custom_tooltip = enclave.310.organic_penalty.tt
			custom_tooltip = enclave.310.tt #"We will receive:"
			tooltip = {
				event_target:scrappable_fleet_1 = {
					add_resource = {
						alloys = 1
						mult = scrap_value
					}
					add_resource = {
						food = @ScrapTier1Food
					}
				}
			}
			custom_tooltip = opinion5
			hidden_effect = {
				add_resource = { energy = @ScrapOrganicCost }
				event_target:salvager_enclave_country = {
					add_trust = {
						who = root
						amount = 5
					}
				}
			}
			set_timed_country_flag = {
				flag = salvager_enclave_scrapping_organic
				days = @ScrapFleetTimer
			}
			hidden_effect = {
				root = {
					set_country_flag = you_monster_achievement
				}
			}
		}
		else = {
			custom_tooltip = enclave.310.tt
			tooltip = {
				event_target:scrappable_fleet_1 = {
					add_resource = {
						alloys = 1
						mult = scrap_value
					}
				}
			}
			custom_tooltip = opinion10
			hidden_effect = {
				event_target:salvager_enclave_country = {
					add_trust = {
						who = root
						amount = 10
					}
				}
			}
		}
		hidden_effect = {
			set_timed_country_flag = {
				flag = salvager_enclave_recently_scrapped
				days = @ScrapFleetTimer
			}
			set_saved_date = {
				key = salvager_scrap_timer
				days_from_present = @ScrapFleetTimer
				expires = @ScrapFleetTimer
			}
			set_variable = {
				which = scrap_value_due
				value = event_target:scrappable_fleet_1.scrap_value
			}
			event_target:scrappable_fleet_1 = {
				fleet_event = { id = enclave.311 } #Remove any leader; transfer fleet
			}
			country_event = { id = enclave.315 } #Thanks
		}
	}
	#Choose a fleet to scrap (fleet 2)
	option = {
		name = enclave.310.c
		trigger = {
			exists = event_target:scrappable_fleet_2
		}
		allow = {
			resource_stockpile_compare = {
				resource = energy
				value >= @ScrapCost
				mult = -1
			}
			custom_tooltip = {
				fail_text = IS_NOT_CLOAKED
				event_target:scrappable_fleet_2 = {
					is_cloaked = no
				}
			}
		}
		add_resource = { energy = @ScrapCost }
		#Describe rewards to come (handled in a subsequent event)
		if = {
			limit = {
				event_target:scrappable_fleet_2 = {
					has_fleet_flag = scrap_organic_fleet
				}
			}
			custom_tooltip = enclave.310.organic_penalty.tt
			custom_tooltip = enclave.310.tt #"We will receive:"
			tooltip = {
				event_target:scrappable_fleet_2 = {
					add_resource = {
						alloys = 1
						mult = scrap_value
					}
					add_resource = {
						food = @ScrapTier1Food
					}
				}
			}
			custom_tooltip = opinion5
			hidden_effect = {
				add_resource = { energy = @ScrapOrganicCost }
				event_target:salvager_enclave_country = {
					add_trust = {
						who = root
						amount = 5
					}
				}
			}
			set_timed_country_flag = {
				flag = salvager_enclave_scrapping_organic
				days = @ScrapFleetTimer
			}
			hidden_effect = {
				root = {
					set_country_flag = you_monster_achievement
				}
			}
		}
		else = {
			custom_tooltip = enclave.310.tt
			tooltip = {
				event_target:scrappable_fleet_2 = {
					add_resource = {
						alloys = 1
						mult = scrap_value
					}
				}
			}
			custom_tooltip = opinion10
			hidden_effect = {
				event_target:salvager_enclave_country = {
					add_trust = {
						who = root
						amount = 10
					}
				}
			}
		}
		hidden_effect = {
			set_timed_country_flag = {
				flag = salvager_enclave_recently_scrapped
				days = @ScrapFleetTimer
			}
			set_saved_date = {
				key = salvager_scrap_timer
				days_from_present = @ScrapFleetTimer
				expires = @ScrapFleetTimer
			}
			set_variable = {
				which = scrap_value_due
				value = event_target:scrappable_fleet_2.scrap_value
			}
			event_target:scrappable_fleet_2 = {
				fleet_event = { id = enclave.311 } #Remove any leader; transfer fleet
			}
			country_event = { id = enclave.315 } #Thanks
		}
	}
	#Choose a fleet to scrap (fleet 3)
	option = {
		name = enclave.310.d
		trigger = {
			exists = event_target:scrappable_fleet_3
		}
		allow = {
			resource_stockpile_compare = {
				resource = energy
				value >= @ScrapCost
				mult = -1
			}
			custom_tooltip = {
				fail_text = IS_NOT_CLOAKED
				event_target:scrappable_fleet_3 = {
					is_cloaked = no
				}
			}
		}
		add_resource = { energy = @ScrapCost }
		#Describe rewards to come (handled in a subsequent event)
		if = {
			limit = {
				event_target:scrappable_fleet_3 = {
					has_fleet_flag = scrap_organic_fleet
				}
			}
			custom_tooltip = enclave.310.organic_penalty.tt
			custom_tooltip = enclave.310.tt #"We will receive:"
			tooltip = {
				event_target:scrappable_fleet_3 = {
					add_resource = {
						alloys = 1
						mult = scrap_value
					}
					add_resource = {
						food = @ScrapTier1Food
					}
				}
			}
			custom_tooltip = opinion5
			hidden_effect = {
				add_resource = { energy = @ScrapOrganicCost }
				event_target:salvager_enclave_country = {
					add_trust = {
						who = root
						amount = 5
					}
				}
			}
			set_timed_country_flag = {
				flag = salvager_enclave_scrapping_organic
				days = @ScrapFleetTimer
			}
			hidden_effect = {
				root = {
					set_country_flag = you_monster_achievement
				}
			}
		}
		else = {
			custom_tooltip = enclave.310.tt
			tooltip = {
				event_target:scrappable_fleet_3 = {
					add_resource = {
						alloys = 1
						mult = scrap_value
					}
				}
			}
			custom_tooltip = opinion10
			hidden_effect = {
				event_target:salvager_enclave_country = {
					add_trust = {
						who = root
						amount = 10
					}
				}
			}
		}
		hidden_effect = {
			set_timed_country_flag = {
				flag = salvager_enclave_recently_scrapped
				days = @ScrapFleetTimer
			}
			set_saved_date = {
				key = salvager_scrap_timer
				days_from_present = @ScrapFleetTimer
				expires = @ScrapFleetTimer
			}
			set_variable = {
				which = scrap_value_due
				value = event_target:scrappable_fleet_3.scrap_value
			}
			event_target:scrappable_fleet_3 = {
				fleet_event = { id = enclave.311 } #Remove any leader; transfer fleet
			}
			country_event = { id = enclave.315 } #Thanks
		}
	}
	#Choose a fleet to scrap (fleet 4)
	option = {
		name = enclave.310.e
		trigger = {
			exists = event_target:scrappable_fleet_4
		}
		allow = {
			resource_stockpile_compare = {
				resource = energy
				value >= @ScrapCost
				mult = -1
			}
			custom_tooltip = {
				fail_text = IS_NOT_CLOAKED
				event_target:scrappable_fleet_4 = {
					is_cloaked = no
				}
			}
		}
		add_resource = { energy = @ScrapCost }
		#Describe rewards to come (handled in a subsequent event)
		if = {
			limit = {
				event_target:scrappable_fleet_4 = {
					has_fleet_flag = scrap_organic_fleet
				}
			}
			custom_tooltip = enclave.310.organic_penalty.tt
			custom_tooltip = enclave.310.tt #"We will receive:"
			tooltip = {
				event_target:scrappable_fleet_4 = {
					add_resource = {
						alloys = 1
						mult = scrap_value
					}
					add_resource = {
						food = @ScrapTier1Food
					}
				}
			}
			custom_tooltip = opinion5
			hidden_effect = {
				add_resource = { energy = @ScrapOrganicCost }
				event_target:salvager_enclave_country = {
					add_trust = {
						who = root
						amount = 5
					}
				}
			}
			set_timed_country_flag = {
				flag = salvager_enclave_scrapping_organic
				days = @ScrapFleetTimer
			}
			hidden_effect = {
				root = {
					set_country_flag = you_monster_achievement
				}
			}
		}
		else = {
			custom_tooltip = enclave.310.tt
			tooltip = {
				event_target:scrappable_fleet_4 = {
					add_resource = {
						alloys = 1
						mult = scrap_value
					}
				}
			}
			custom_tooltip = opinion10
			hidden_effect = {
				event_target:salvager_enclave_country = {
					add_trust = {
						who = root
						amount = 10
					}
				}
			}
		}
		hidden_effect = {
			set_timed_country_flag = {
				flag = salvager_enclave_recently_scrapped
				days = @ScrapFleetTimer
			}
			set_saved_date = {
				key = salvager_scrap_timer
				days_from_present = @ScrapFleetTimer
				expires = @ScrapFleetTimer
			}
			set_variable = {
				which = scrap_value_due
				value = event_target:scrappable_fleet_4.scrap_value
			}
			event_target:scrappable_fleet_4 = {
				fleet_event = { id = enclave.311 } #Remove any leader; transfer fleet
			}
			country_event = { id = enclave.315 } #Thanks
		}
	}
	option = {
		name = GOODBYE
		default_hide_option = yes
	}

	after = {
		remove_country_flag = has_scrappable_fleet
		remove_country_flag = has_organic_scrappable_fleet
	}
}
# from = customer; event_target:salvager_enclave_country = enclave country
fleet_event = {
	id = enclave.311
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = { exists = leader }
			leader = { unassign_leader = this }
		}
		set_owner = event_target:salvager_enclave_country
		if = {
			limit = {
				OR = {
					is_ship_size = space_amoeba #Lost Amoeba (juvenile)
					is_ship_size = space_amoeba_mother #Adult Amoeba ("Bubbles")
				}
			}
			random_list = {
				3 = { }
				1 = {
					modifier = {
						factor = 0
						from = { has_modifier = amoeba_hunting_buff }
					}
					modifier = {
						factor = 5
						is_active_resolution = resolution_amoeba_conservation_act
					}
					event_target:salvager_enclave_country = {
						country_event = { id = enclave.312 days = 200 }
					}
				}
			}
		}
		queue_actions = {
			move_to = event_target:salvager_enclave_starbase
			wait = { duration = 5 }
			effect = {
				id = salvager_scrap_fleet_effect@from
				root = { destroy_fleet = this }
			}
		}
		from = {
			country_event = { id = enclave.360 days = 120 random = 40 } #Deliver resource
		}
	}
}
#Salvagers Adopt the Once-Lost Amoeba
country_event = {
	id = enclave.312
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		NOT = {
			has_country_flag = adopted_amoeba
		}
		event_target:salvager_enclave_system = {
			any_system_ambient_object = {
				has_ambient_object_flag = salvager_debris_field
			}
		}
	}

	immediate = {
		event_target:salvager_enclave_system = {
			random_system_ambient_object = {
				limit = {
					has_ambient_object_flag = salvager_debris_field
				}
				save_event_target_as = salvager_debris_field
			}
		}
		create_fleet = {
			name = "NAME_Salvager_Amoeba"
			effect = {
				set_owner = root
				create_ship = {
					name = "NAME_Salvager_Amoeba"
					design = "NAME_Large_Space_Organism_Teal"
					prefix = no
					upgradable = no
					effect = {
						# set_disable_at_health = 0.001
						set_ship_flag = salvager_amoeba_ship #May not be Reanimated
					}
				}
				set_location = {
					target = event_target:salvager_debris_field
				}
				set_fleet_stance = passive
				# set_fleet_flag = lost_amoeba_adult_fleet@root #Used in Centenarian event
			}
			settings = {
				can_upgrade = no
				can_disband = no
				can_change_composition = no
				can_change_leader = no
				uses_naval_capacity = no
			}
		}
		set_country_flag = adopted_amoeba
		# country_event = { id = distar.304 days = 36000 } #Evolve into Centenarian (untested)
	}
}

# Salvager Enclave: THANKS (scrap)
# This = player country; event_target:salvager_enclave_country = enclave country
country_event = {
	id = enclave.315
	base = enclave.305
	desc_clear = yes
	desc = enclave.315.desc

	trigger = {
		exists = event_target:salvager_enclave_country
	}
}

# Salvager Enclave: RECLAIMED VESSEL
# This = player country; event_target:salvager_enclave_country = enclave country
country_event = {
	id = enclave.320
	base = enclave.305
	desc_clear = yes
	option_clear = yes

	desc = {
		trigger = {
			NOT = {
				has_country_flag = salvager_enclave_recently_reclaimed_all
			}
		}
		text = enclave.320.desc
	}
	desc = {
		trigger = {
			has_country_flag = salvager_enclave_recently_reclaimed_all
		}
		text = enclave.320.timeout.desc
	}

	immediate = {
		salvager_enclave_find_reclaimed_corvette_design = yes
		if = {
			limit = { has_technology = tech_destroyers }
			salvager_enclave_find_reclaimed_destroyer_design = yes
		}
		if = {
			limit = { has_technology = tech_cruisers }
			salvager_enclave_find_reclaimed_cruiser_design = yes
		}
		if = {
			limit = { has_technology = tech_battleships }
			salvager_enclave_find_reclaimed_battleship_design = yes
		}
		#Set a scaling cost multiplier based on years passed. Positive values are used in allow checks.
		if = {
			limit = { mid_game_years_passed < 0 }
			set_variable = {
				which = reclaimed_cost_mult_comparable
				value = 0.8
			}
			set_variable = {
				which = reclaimed_cost_mult
				value = -0.8
			}
		}
		else_if = {
			limit = { end_game_years_passed < 0 }
			set_variable = {
				which = reclaimed_cost_mult_comparable
				value = 1
			}
			set_variable = {
				which = reclaimed_cost_mult
				value = -1
			}
		}
		else = {
			set_variable = {
				which = reclaimed_cost_mult_comparable
				value = 1.3
			}
			set_variable = {
				which = reclaimed_cost_mult
				value = -1.3
			}
		}
	}

	#Back to menu
	option = {
		name = enclave.310.a
		hidden_effect = {
			country_event = { id = enclave.305 }
		}
	}
	#Corvette
	option = {
		name = enclave.320.b
		trigger = {
			exists = event_target:salvager_reclaimed_corvette
			NOT = { has_country_flag = salvager_enclave_recently_reclaimed_all }
		}
		allow = {
			resource_stockpile_compare = {
				resource = energy
				value >= @ReclaimedCorvetteCost
				mult = reclaimed_cost_mult_comparable
			}
		}
		custom_tooltip = enclave.320.b.tt
		add_resource = {
			energy = @ReclaimedCorvetteCost
			mult = reclaimed_cost_mult
		}
		custom_tooltip = opinion1
		hidden_effect = {
			create_fleet = {
				effect = {
					set_owner = root
					create_ship = {
						name = random
						design = event_target:salvager_reclaimed_corvette
						graphical_culture = event_target:salvager_enclave_country
					}
					set_location = {
						target = root.capital_scope
					}
				}
			}
			change_variable = {
				which = reclaimed_ships_bought
				value = 1
			}
			event_target:salvager_enclave_country = {
				add_trust = {
					who = root
					amount = 1
				}
			}
			country_event = { id = enclave.320 }
		}
	}
	#Corvettes (bulk purchase)
	option = {
		name = enclave.320.bb
		trigger = {
			exists = event_target:salvager_reclaimed_corvette
			NOR = {
				has_country_flag = salvager_enclave_recently_reclaimed_all
				check_variable = {
					which = reclaimed_ships_bought
					value > 0
				}
			}
		}
		allow = {
			resource_stockpile_compare = {
				resource = energy
				value >= @ReclaimedCorvetteSquadronCost
				mult = reclaimed_cost_mult_comparable
			}
		}
		custom_tooltip = enclave.320.bb.tt
		add_resource = {
			energy = @ReclaimedCorvetteSquadronCost
			mult = reclaimed_cost_mult
		}
		custom_tooltip = opinion5
		hidden_effect = {
			create_fleet = {
				effect = {
					set_owner = root
					while = {
						count = 10
						create_ship = {
							name = random
							design = event_target:salvager_reclaimed_corvette
							graphical_culture = event_target:salvager_enclave_country
						}
					}
					set_location = {
						target = root.capital_scope
					}
				}
			}
			change_variable = {
				which = reclaimed_ships_bought
				value = 10
			}
			event_target:salvager_enclave_country = {
				add_trust = {
					who = root
					amount = 5
				}
			}
			country_event = { id = enclave.320 }
		}
	}
	#Destroyer
	option = {
		name = enclave.320.c
		trigger = {
			exists = event_target:salvager_reclaimed_destroyer #includes a check for whether ROOT has this ship tech. or not
			NOT = { has_country_flag = salvager_enclave_recently_reclaimed_all }
		}
		allow = {
			custom_tooltip = {
				fail_text = enclave.320.c.timeout
				NOT = { has_country_flag = salvager_enclave_recently_reclaimed_destroyer }
			}
			resource_stockpile_compare = {
				resource = energy
				value >= @ReclaimedDestroyerCost
				mult = reclaimed_cost_mult_comparable
			}
		}
		custom_tooltip = enclave.320.c.tt
		add_resource = {
			energy = @ReclaimedDestroyerCost
			mult = reclaimed_cost_mult
		}
		custom_tooltip = opinion2
		hidden_effect = {
			create_fleet = {
				effect = {
					set_owner = root
					create_ship = {
						name = random
						design = event_target:salvager_reclaimed_destroyer
						graphical_culture = event_target:salvager_enclave_country
					}
					set_location = {
						target = root.capital_scope
					}
				}
			}
			change_variable = {
				which = reclaimed_ships_bought
				value = 1
			}
			set_timed_country_flag = {
				flag = salvager_enclave_recently_reclaimed_destroyer
				days = @ReclaimedDestroyerTimer
			}
			set_saved_date = {
				key = salvager_destroyer_timer
				days_from_present = @ReclaimedDestroyerTimer
				expires = @ReclaimedDestroyerTimer
			}
			event_target:salvager_enclave_country = {
				add_trust = {
					who = root
					amount = 2
				}
			}
			country_event = { id = enclave.320 }
		}
	}
	#Cruiser
	option = {
		name = enclave.320.d
		trigger = {
			exists = event_target:salvager_reclaimed_cruiser #includes a check for whether ROOT has this ship tech. or not
			NOT = { has_country_flag = salvager_enclave_recently_reclaimed_all }
		}
		allow = {
			custom_tooltip = {
				fail_text = enclave.320.d.timeout
				NOT = { has_country_flag = salvager_enclave_recently_reclaimed_cruiser }
			}
			resource_stockpile_compare = {
				resource = energy
				value >= @ReclaimedCruiserCost
				mult = reclaimed_cost_mult_comparable
			}
		}
		custom_tooltip = enclave.320.d.tt
		add_resource = {
			energy = @ReclaimedCruiserCost
			mult = reclaimed_cost_mult
		}
		custom_tooltip = opinion3
		hidden_effect = {
			create_fleet = {
				effect = {
					set_owner = root
					create_ship = {
						name = random
						design = event_target:salvager_reclaimed_cruiser
						graphical_culture = event_target:salvager_enclave_country
					}
					set_location = {
						target = root.capital_scope
					}
				}
			}
			change_variable = {
				which = reclaimed_ships_bought
				value = 1
			}
			set_timed_country_flag = {
				flag = salvager_enclave_recently_reclaimed_cruiser
				days = @ReclaimedCruiserTimer
			}
			set_saved_date = {
				key = salvager_cruiser_timer
				days_from_present = @ReclaimedCruiserTimer
				expires = @ReclaimedCruiserTimer
			}
			event_target:salvager_enclave_country = {
				add_trust = {
					who = root
					amount = 3
				}
			}
			country_event = { id = enclave.320 }
		}
	}
	#Battleship
	option = {
		name = enclave.320.e
		trigger = {
			exists = event_target:salvager_reclaimed_battleship #includes a check for whether ROOT has this ship tech. or not
			NOT = { has_country_flag = salvager_enclave_recently_reclaimed_all }
		}
		allow = {
			custom_tooltip = {
				fail_text = enclave.320.e.timeout
				NOT = { has_country_flag = salvager_enclave_recently_reclaimed_battleship }
			}
			resource_stockpile_compare = {
				resource = energy
				value >= @ReclaimedBattleshipCost
				mult = reclaimed_cost_mult_comparable
			}
		}
		custom_tooltip = enclave.320.e.tt
		add_resource = {
			energy = @ReclaimedBattleshipCost
			mult = reclaimed_cost_mult
		}
		custom_tooltip = opinion4
		hidden_effect = {
			create_fleet = {
				effect = {
					set_owner = root
					create_ship = {
						name = random
						design = event_target:salvager_reclaimed_battleship
						graphical_culture = event_target:salvager_enclave_country
					}
					set_location = {
						target = root.capital_scope
					}
				}
			}
			change_variable = {
				which = reclaimed_ships_bought
				value = 1
			}
			set_timed_country_flag = {
				flag = salvager_enclave_recently_reclaimed_battleship
				days = @ReclaimedBattleshipTimer
			}
			set_saved_date = {
				key = salvager_battleship_timer
				days_from_present = @ReclaimedBattleshipTimer
				expires = @ReclaimedBattleshipTimer
			}
			event_target:salvager_enclave_country = {
				add_trust = {
					who = root
					amount = 4
				}
			}
			country_event = { id = enclave.320 }
		}
	}
	option = {
		name = GOODBYE
		default_hide_option = yes
	}

	after = {
		hidden_effect = {
			if = {
				limit = {
					check_variable = {
						which = reclaimed_ships_bought
						value >= @ReclaimedShipsLimit
					}
				}
				set_timed_country_flag = {
					flag = salvager_enclave_recently_reclaimed_all
					days = @ReclaimedShipsTimer
				}
				set_saved_date = {
					key = reclaimed_vessel_timer
					days_from_present = @ReclaimedShipsTimer
					expires = @ReclaimedShipsTimer
				}
				country_event = {
					id = enclave.321 #Reset counter
					days = @ReclaimedShipsTimer
				}
			}
		}
	}
}
#Clear 'reclaimed ships bought' counter after @ReclaimedShipsTimer
country_event = {
	id = enclave.321
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		set_variable = {
			which = reclaimed_ships_bought
			value = 0
		}
	}
}

# Salvager Enclave: THANKS FOR PURCHASE (other)
# This = player country; event_target:salvager_enclave_country = enclave country
country_event = {
	id = enclave.325
	base = enclave.305
	desc_clear = yes
	desc = enclave.325.desc
}

# Salvager Enclave: SALVAGE WORKS starbase building
# This = player country; event_target:salvager_enclave_country = enclave country
country_event = {
	id = enclave.330
	base = enclave.305
	desc_clear = yes
	option_clear = yes

	desc = {
		trigger = {
			event_target:salvager_enclave_country = {
				trust = {
					who = root
					value >= 40
				}
			}
		}
		text = enclave.330.desc
	}
	desc = {
		trigger = {
			event_target:salvager_enclave_country = {
				trust = {
					who = root
					value < 40
				}
			}
		}
		text = enclave.330.lowopinion.desc
	}

	#Back to menu
	option = {
		name = enclave.330.a
		hidden_effect = {
			country_event = { id = enclave.305 }
		}
	}
	option = {
		name = DEAL
		allow = {
			event_target:salvager_enclave_country = {
				trust = {
					who = root
					value >= 40
				}
			}
			resource_stockpile_compare = { resource = energy value >= 1000 }
		}
		add_resource = { energy = -1000 }
		custom_tooltip = opinion10
		custom_tooltip = enclave.330.b.tt
		hidden_effect = {
			event_target:salvager_enclave_country = {
				add_trust = {
					who = root
					amount = 10
				}
				set_country_flag = salvage_works@root
			}
			set_country_flag = salvager_enclave_bought_salvage_works
			country_event = { id = enclave.325 }
		}
	}
	option = {
		name = TOOPOOR
		trigger = {
			event_target:salvager_enclave_country = {
				trust = {
					who = root
					value >= 40
				}
			}
			resource_stockpile_compare = { resource = energy value < 1000 }
		}
		hidden_effect = {
			country_event = { id = enclave.305 }
		}
	}
	option = {
		name = GOODBYE
		default_hide_option = yes
	}
}

# Salvager Enclave: SALVAGER OVERDRIVE empire modifier
# This = player country; event_target:salvager_enclave_country = enclave country
country_event = {
	id = enclave.335
	base = enclave.305
	desc_clear = yes
	option_clear = yes

	desc = enclave.335.desc

	#Back to menu
	option = {
		name = enclave.335.a
		hidden_effect = {
			country_event = { id = enclave.305 }
		}
	}
	option = {
		name = DEAL
		allow = {
			event_target:salvager_enclave_country = {
				trust = {
					who = root
					value >= 50
				}
			}
			custom_tooltip = {
				fail_text = salvager_overdrive_cooldown
				NOT = { has_country_flag = salvager_overdrive }
			}
			resource_stockpile_compare = { resource = energy value >= 800 }
			resource_stockpile_compare = { resource = volatile_motes value >= 20 }
		}
		#Costs
		add_resource = { energy = -800 }
		add_resource = { volatile_motes = -20 }
		#Gains
		custom_tooltip = opinion5
		add_modifier = {
			modifier = salvager_overdrive
			days = 720
		}
		hidden_effect = {
			event_target:salvager_enclave_country = {
				add_trust = {
					who = root
					amount = 5
				}
			}
			#Establish service timeout (until it can be used again)
			set_timed_country_flag = {
				flag = salvager_overdrive
				days = @SalvagerOverdriveTimeout
			}
			set_saved_date = {
				key = salvager_overdrive_timer
				days_from_present = @SalvagerOverdriveTimeout
				expires = @SalvagerOverdriveTimeout
			}
			#Wrap-up
			set_country_flag = salvager_enclave_bought_salvager_overdrive
			country_event = { id = enclave.325 }
			country_event = { id = enclave.336 days = 1441 } #@SalvagerOverdriveTimeout + 1
		}
	}
	option = {
		name = TOOPOOR
		trigger = {
			event_target:salvager_enclave_country = {
				trust = {
					who = root
					value >= 50
				}
			}
			resource_stockpile_compare = { resource = energy value < 800 }
			resource_stockpile_compare = { resource = volatile_motes value < 20 }
		}
		hidden_effect = {
			country_event = { id = enclave.305 }
		}
	}
	option = {
		name = GOODBYE
		default_hide_option = yes
	}
}
# Salvager Enclave: SALVAGER OVERDRIVE empire modifier reminder
# This = player country; event_target:salvager_enclave_country = enclave country
country_event = {
	id = enclave.336
	base = enclave.335
	desc_clear = yes
	desc = enclave.336.desc

	trigger = {
		exists = event_target:salvager_enclave_country
		NOT = {
			is_hostile = event_target:salvager_enclave_country
		}
		event_target:salvager_enclave_country = {
			trust = {
				who = root
				value >= 40
			}
		}
		any_owned_starbase = {
			has_starbase_building = salvager_workshop
		}
	}
}

# Salvager Enclave: SALVAGE COMMISSION
# This = player country; event_target:salvager_enclave_country = enclave country
country_event = {
	id = enclave.340
	base = enclave.305
	desc_clear = yes
	option_clear = yes

	desc = {
		trigger = {
			has_country_flag = salvage_commission_available #includes opinion check
		}
		text = enclave.340.a.desc
		text = enclave.340.b.desc
	}
	desc = {
		trigger = {
			NOT = { has_country_flag = salvage_commission_available } #includes opinion check
		}
		text = enclave.340.nodebris.desc
	}
	desc = {
		trigger = {
			event_target:salvager_enclave_country = {
				trust = {
					who = root
					value < 20
				}
			}
		}
		text = enclave.340.lowopinion.desc
	}

	immediate = {
		if = {
			limit = {
				NOT = { has_country_flag = salvager_enclave_salvage_commission_active }
				event_target:salvager_enclave_country = {
					trust = {
						who = root
						value >= 20
					}
				}
				count_available_debris = { count > 0 }
			}
			set_country_flag = salvage_commission_available
		}
	}

	#Back to menu
	option = {
		name = enclave.340.a
		hidden_effect = {
			country_event = { id = enclave.305 }
		}
	}
	option = {
		name = DEAL
		allow = {
			event_target:salvager_enclave_country = {
				trust = {
					who = root
					value >= 20
				}
			}
			custom_tooltip = {
				fail_text = one_salvage_commission_only
				NOT = { has_country_flag = salvager_enclave_salvage_commission_active }
			}
			custom_tooltip = {
				fail_text = requires_debris_field
				has_country_flag = salvage_commission_available
			}
		}
		add_resource = { energy = -400 }
		custom_tooltip = opinion5
		custom_tooltip = enclave.340.b.tt
		hidden_effect = {
			#First, check the debris hasn't timed out already
			if = {
				limit = {
					count_available_debris = { count < 1 }
				}
				country_event = { id = enclave.342 }
			}
			else = {
				event_target:salvager_enclave_country = {
					add_trust = {
						who = root
						amount = 5
					}
				}
				set_timed_country_flag = {
					flag = salvager_enclave_salvage_commission_active #removed when goods are delivered, or else after this fallback amount
					days = 90 #based on DEBRIS_RESEARCH_TIME
				}
				set_country_flag = salvager_enclave_bought_salvage_commission
				#Transfer debris fields
				while = {
					count = 3
					random_available_debris = {
						weights = {
							base = 1
							#Prioritise debris inside closed borders
							modifier = {
								add = 5
								solar_system = {
									exists = owner
									owner = { has_closed_borders = root }
								}
							}
							#Prioritise debris nearest to the Salvagers
							modifier = {
								add = 5
								solar_system = {
									distance = {
										source = event_target:salvager_enclave_system
										min_jumps = 1
										max_jumps = 5
									}
								}
							}
						}
						pass_debris_ownership = {
							owner = event_target:salvager_enclave_country
						}
					}
					change_variable = {
						which = salvage_commission_debris_taken
						value = 1
					}
				}
				#Wrap-up
				country_event = { id = enclave.341 } #Post-sales thanks
				country_event = {
					id = enclave.365
					days = 60
					random = 30 #based on DEBRIS_RESEARCH_TIME
				}
			}
		}
	}
	option = {
		name = TOOPOOR
		trigger = {
			has_country_flag = salvage_commission_available #includes opinion check
			resource_stockpile_compare = { resource = energy value < 400 }
		}
		hidden_effect = {
			country_event = { id = enclave.305 }
		}
	}
	option = {
		name = GOODBYE
		default_hide_option = yes
	}

	after = {
		hidden_effect = {
			remove_country_flag = salvage_commission_available
		}
	}
}
# Salvager Enclave: THANKS FOR PURCHASE (Salvage Commission)
country_event = {
	id = enclave.341
	base = enclave.305
	desc_clear = yes
	desc = enclave.341.desc
}
# Salvager Enclave: SORRY, NO CAN DO (Salvage Commission)
country_event = {
	id = enclave.342
	base = enclave.305
	desc_clear = yes
	desc = enclave.342.desc
}

# Salvager Enclave: SALVAGER INSIGHT empire modifier
# This = player country; event_target:salvager_enclave_country = enclave country
country_event = {
	id = enclave.345
	base = enclave.305
	desc_clear = yes
	option_clear = yes

	desc = enclave.345.desc

	immediate = {
		#Set a scaling multiplier based on years passed
		if = {
			limit = { mid_game_years_passed < 0 }
			set_variable = {
				which = salvager_insight_cost_mult
				value = 1.25
			}
		}
		else_if = {
			limit = { end_game_years_passed < 0 }
			set_variable = {
				which = salvager_insight_cost_mult
				value = 1
			}
		}
		else = {
			set_variable = {
				which = salvager_insight_cost_mult
				value = 0.75
			}
		}
		#Cap the cost at 3k energy (num_pops * @SalvagerInsightEnergyCost * salvager_insight_cost_mult)
		if = {
			limit = {
				OR = {
					AND = {
						mid_game_years_passed < 0
						num_pops > 150
					}
					AND = {
						end_game_years_passed < 0
						num_pops > 200
					}
					AND = {
						end_game_years_passed >= 0
						num_pops > 280
					}
				}
			}
			set_variable = {
				which = salvager_insight_pop_value_var
				value = 200
			}
		}
		else = {
			#Fetch num_pops as a variable, then multiply by salvager_insight_cost_mult
			export_trigger_value_to_variable = {
				trigger = num_pops
				variable = salvager_insight_pop_value_var
			}
			multiply_variable = {
				which = salvager_insight_pop_value_var
				value = salvager_insight_cost_mult
			}
			round_variable_to_closest = {
				which = salvager_insight_pop_value_var
				value = 10
			}
		}
		#Flip the positive value into a cost (separate variable, to allow stockpile comparisons)
		set_variable = {
			which = salvager_insight_pop_cost_var
			value = salvager_insight_pop_value_var
		}
		multiply_variable = {
			which = salvager_insight_pop_cost_var
			value = -1
		}
	}

	#Back to menu
	option = {
		name = enclave.345.a
		hidden_effect = {
			country_event = { id = enclave.305 }
		}
	}
	option = {
		name = DEAL
		allow = {
			event_target:salvager_enclave_country = {
				trust = {
					who = root
					value >= 20
				}
			}
			custom_tooltip = {
				fail_text = salvager_insight_cooldown
				NOT = { has_modifier = salvager_insight }
			}
			resource_stockpile_compare = {
				resource = energy
				value >= @SalvagerInsightEnergyCost
				mult = salvager_insight_pop_cost_var
			}
			resource_stockpile_compare = {
				resource = alloys
				value >= @SalvagerInsightAlloyCost
				mult = -1
			}
		}
		custom_tooltip = opinion5
		add_resource = {
			energy = @SalvagerInsightEnergyCost
			mult = salvager_insight_pop_value_var
		}
		add_resource = {
			alloys = @SalvagerInsightAlloyCost
		}
		add_modifier = {
			modifier = salvager_insight
			years = 5
		}
		hidden_effect = {
			event_target:salvager_enclave_country = {
				add_trust = {
					who = root
					amount = 5
				}
			}
			set_country_flag = salvager_enclave_bought_salvager_insight
			country_event = { id = enclave.325 } # Thanks
			country_event = { id = enclave.346 days = 1801 } # Reminder (in 5 years, 1 day)
		}
	}
	option = {
		name = TOOPOOR
		trigger = {
			event_target:salvager_enclave_country = {
				trust = {
					who = root
					value >= 20
				}
			}
			resource_stockpile_compare = {
				resource = energy
				value < @SalvagerInsightEnergyCost
				mult = salvager_insight_pop_cost_var
			}
			resource_stockpile_compare = {
				resource = alloys
				value < @SalvagerInsightAlloyCost
				mult = -1
			}
		}
		hidden_effect = {
			country_event = { id = enclave.305 }
		}
	}
	option = {
		name = GOODBYE
		default_hide_option = yes
	}
}
# Salvager Enclave: SALVAGER INSIGHT empire modifier reminder
# This = player country; event_target:salvager_enclave_country = enclave country
country_event = {
	id = enclave.346
	base = enclave.345
	desc_clear = yes
	desc = enclave.346.desc

	trigger = {
		exists = event_target:salvager_enclave_country
		NOR = {
			is_hostile = event_target:salvager_enclave_country
			is_homicidal = yes
		}
		event_target:salvager_enclave_country = {
			trust = {
				who = root
				value >= 20
			}
		}
	}
}

# Salvager Enclave: Master Salvager
# This = player country; event_target:salvager_enclave_country = enclave country
country_event = {
	id = enclave.350
	base = enclave.305
	desc_clear = yes
	option_clear = yes

	desc = {
		text = enclave.350.desc
		trigger = {
			event_target:salvager_enclave_country = {
				trust = {
					who = root
					value >= 30
				}
			}
		}
	}
	desc = {
		text = enclave.350.desc.not_available
		trigger = {
			event_target:salvager_enclave_country = {
				trust = {
					who = root
					value < 30
				}
			}
		}
	}
	#Back to menu
	option = {
		name = enclave.350.a
		hidden_effect = {
			country_event = { id = enclave.305 }
		}
	}
	option = {
		name = DEAL
		allow = {
			event_target:salvager_enclave_country = {
				trust = {
					who = root
					value >= 30
				}
			}
			resource_stockpile_compare = {
				resource = energy
				value >= 2000
			}
			resource_stockpile_compare = {
				resource = influence
				value >= 50
			}
		}
		add_resource = { energy = -2000 }
		add_resource = { influence = -50 }
		custom_tooltip = opinion10
		custom_tooltip = master_salvager_explanation
		if = {
			limit = {
				has_paragon_dlc = yes
				is_gestalt = no
			}
			custom_tooltip = unlocks_salvager_council_position
		}
		hidden_effect = {
			event_target:salvager_enclave_country = {
				add_trust = {
					who = root
					amount = 10
				}
				species = {
					save_event_target_as = salvager_species
				}
			}
			create_master_salvager_effect = yes
			country_event = { id = enclave.325 } # Post-Sale Message
		}
	}
	option = {
		name = TOOPOOR
		trigger = {
			event_target:salvager_enclave_country = {
				trust = {
					who = root
					value >= 30
				}
			}
			resource_stockpile_compare = {
				resource = energy
				value < 2000
			}
			resource_stockpile_compare = {
				resource = influence
				value <= 50
			}
		}
		hidden_effect = {
			country_event = { id = enclave.305 }
		}
	}
	option = {
		name = GOODBYE
		default_hide_option = yes
	}
}

# Salvager Enclave: Scrap Delivery
# This = player country; event_target:salvager_enclave_country = enclave country
country_event = {
	id = enclave.360
	title = enclave.360.name
	desc = {
		trigger = {
			NOR = {
				has_country_flag = salvager_enclave_scrapping_organic
				has_country_flag = salvager_scrap_bonus_engineering
				has_country_flag = salvager_scrap_bonus_physics
				is_machine_empire = yes
			}
		}
		text = enclave.360.a.desc
	}
	desc = {
		trigger = {
			NOR = {
				has_country_flag = salvager_enclave_scrapping_organic
				has_country_flag = salvager_scrap_bonus_engineering
				has_country_flag = salvager_scrap_bonus_physics
			}
		}
		text =  enclave.360.b.desc
	}
	desc = {
		trigger = {
			NOT = {
				has_country_flag = salvager_enclave_scrapping_organic
			}
			OR = {
				has_country_flag = salvager_scrap_bonus_engineering
				has_country_flag = salvager_scrap_bonus_physics
			}
		}
		text = enclave.360.c.desc
	}
	desc = {
		trigger = {
			has_country_flag = salvager_enclave_scrapping_organic
			NOR = {
				has_country_flag = salvager_scrap_bonus_engineering
				has_country_flag = salvager_scrap_bonus_physics
			}
		}
		text = enclave.360.d.desc
	}
	desc = {
		trigger = {
			has_country_flag = salvager_enclave_scrapping_organic
			OR = {
				has_country_flag = salvager_scrap_bonus_engineering
				has_country_flag = salvager_scrap_bonus_physics
			}
		}
		text = enclave.360.e.desc
	}
	picture = GFX_evt_salvager_enclave_disassembly
	show_sound = evn_ove_salvager_enclave_disassembly
	is_triggered_only = yes

	immediate = {
		random_list = {
			3 = { }
			2 = {
				set_country_flag = salvager_scrap_bonus_engineering
			}
			1 = {
				set_country_flag = salvager_scrap_bonus_physics
			}
		}
	}

	option = {
		trigger = {
			NOR = {
				has_country_flag = salvager_scrap_bonus_engineering
				has_country_flag = salvager_scrap_bonus_physics
			}
		}
		name = EXCELLENT
		add_resource = {
			alloys = 1
			mult = scrap_value_due
		}
		if = {
			limit = {
				has_country_flag = salvager_enclave_scrapping_organic
			}
			add_resource = {
				food = @ScrapTier1Food
			}
			set_country_flag = salvager_enclave_has_scrapped_organic #Used to flavour greetings texts
			remove_country_flag = salvager_enclave_scrapping_organic
		}
	}
	option = {
		trigger = {
			has_country_flag = salvager_scrap_bonus_engineering
		}
		name = EXCELLENT
		add_resource = {
			alloys = 1
			mult = scrap_value_due
		}
		if = {
			limit = {
				has_country_flag = salvager_enclave_scrapping_organic
			}
			add_resource = {
				food = @ScrapTier1Food
			}
			set_country_flag = salvager_enclave_has_scrapped_organic #Used to flavour greetings texts
			remove_country_flag = salvager_enclave_scrapping_organic
		}
		add_monthly_resource_mult = {
			resource = engineering_research
			value = @tier3researchreward
			min = @tier3researchmin
			max = @tier3researchmax
		}
	}
	option = {
		trigger = {
			has_country_flag = salvager_scrap_bonus_physics
		}
		name = EXCELLENT
		add_resource = {
			alloys = 1
			mult = scrap_value_due
		}
		if = {
			limit = {
				has_country_flag = salvager_enclave_scrapping_organic
			}
			add_resource = {
				food = @ScrapTier1Food
			}
			set_country_flag = salvager_enclave_has_scrapped_organic #Used to flavour greetings texts
			remove_country_flag = salvager_enclave_scrapping_organic
		}
		add_monthly_resource_mult = {
			resource = physics_research
			value = @tier2researchreward
			min = @tier2researchmin
			max = @tier2researchmax
		}
	}

	after = {
		hidden_effect = {
			remove_country_flag = salvager_scrap_bonus_engineering
			remove_country_flag = salvager_scrap_bonus_physics
		}
	}
}

# Salvager Enclave: Commissioned Salvage Delivery
# This = player country; event_target:salvager_enclave_country = enclave country
country_event = {
	id = enclave.365
	title = enclave.365.name
	desc = enclave.365.desc
	picture = GFX_evt_salvager_enclave_disassembly
	show_sound = evn_ove_salvager_enclave_disassembly
	is_triggered_only = yes

	immediate = {
		remove_country_flag = salvager_enclave_salvage_commission_active
	}

	option = {
		name = enclave.365.a
		trigger = {
			is_gestalt = no
			NOR = {
				has_ethic = ethic_xenophobe
				has_ethic = ethic_fanatic_xenophobe
				has_valid_civic = civic_barbaric_despoilers
			}
		}
	}
	option = {
		name = enclave.365.b
		trigger = {
			is_gestalt = no
			OR = {
				has_ethic = ethic_xenophobe
				has_ethic = ethic_fanatic_xenophobe
				has_valid_civic = civic_barbaric_despoilers
			}
		}
	}
	option = {
		name = CURIOUS
		trigger = {
			is_gestalt = yes
		}
	}
	option = {
		name = enclave.365.d
		trigger = {
			event_target:salvager_enclave_country = {
				trust = {
					who = root
					value >= 20
				}
			}
			count_available_debris = { count > 0 }
		}
		hidden_effect = {
			country_event = { id = enclave.340 } # Commission Salvage
		}
	}

	after = {
		custom_tooltip = enclave.365.tt
		if = {
			limit = {
				check_variable = {
					which = salvage_commission_debris_taken
					value > 2
				}
			}
			add_resource = { engineering_research = @SalvageTier3Tech }
			add_resource = { alloys = @SalvageTier2Alloys }
		}
		else_if = {
			limit = {
				check_variable = {
					which = salvage_commission_debris_taken
					value = 2
				}
			}
			add_resource = { engineering_research = @SalvageTier2Tech }
			add_resource = { alloys = @SalvageTier1Alloys }
		}
		else = {
			add_resource = { engineering_research = @SalvageTier1Tech }
			add_resource = { minerals = @SalvageTier1Minerals }
		}
	}
}

# Salvager Enclave Destroyed (HIDDEN)
country_event = {
	id = enclave.370
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		owner = {
			is_country_type = enclave
			has_country_flag = salvager_enclave_country
			FROMFROM = {
				is_ship_size = enclave_salvager_station
			}
		}
	}

	immediate = {
		FROMFROM = {
			solar_system = { save_event_target_as = salvager_system }
		}
		FROM = {
			country_event = { id = enclave.375 }
			save_event_target_as = salvager_destroyer
		}
		observer_event = { id = observer.90 }
		every_country = {
			limit = {
				has_communications = ROOT
				NOT = { is_country = event_target:salvager_destroyer }
				is_country_type = default
			}
			country_event = { id = enclave.380 }
		}
	}
}

# Salvager Enclave Destroyed (Destroyer)
country_event = {
	id = enclave.375
	title = "enclave.375.name"
	desc = "enclave.375.desc"
	picture = GFX_evt_space_debris
	location = event_target:salvager_system
	show_sound = event_ship_bridge
	is_triggered_only = yes

	immediate = {
		set_country_flag = destroyed_salvager # Achievement
	}

	option = {
		name = EXCELLENT
		add_resource = {
			alloys = 7000
			energy = 1500
		}
	}
}

# Salvager Enclave Destroyed
country_event = {
	id = enclave.380
	title = "enclave.375.name"
	desc = "enclave.380.desc"
	picture = GFX_evt_space_debris
	location = event_target:salvager_system
	show_sound = event_ship_bridge
	is_triggered_only = yes

	option = {
		name = UNFORTUNATE
	}
}

# Revoke Master Salvager upon attacking the Salvagers
# via on_entering_battle | from = attacked country (Salvagers)
country_event = {
	id = enclave.390
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		exists = event_target:salvager_enclave_country
		from = { is_same_value = event_target:salvager_enclave_country }
		any_owned_leader = {
			has_leader_flag = master_salvager
		}
		NOT = {
			has_country_flag = attacked_salvagers
		}
	}

	immediate = {
		set_country_flag = attacked_salvagers
		random_owned_leader = {
			limit = {
				has_leader_flag = master_salvager
			}
			leader_event = {
				id = enclave.8000
				days = 5
				scopes = {
					FROM = event_target:salvager_enclave_country
				}
			}
		}
	}
}

########################
# SHROUDWALKER ENCLAVES
########################

# Shroudwalker Enclave Greetings: Gatekeeper event
# Via on_custom_diplomacy | this = target country (player); from = country being contacted
country_event = {
	id = enclave.400
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		from = {
			is_country_type = enclave
			has_country_flag = shroudwalker_enclave_country
		}
		NOT = {
			has_active_event = {
				enclave.405 #GREETINGS
				enclave.410 #DIVINATION SALES
				enclave.415 #DIVINATION RITUAL
				enclave.416 #DIVINATION RITUAL FINISHED
				enclave.420 #SHROUD BEACON Building
				enclave.425 #BEACON Thanks
				origin.5605 #Teachers of the Shroud Origin Intro
				origin.5615 #Entrance via Shroud Tunnel
			}
		}
	}

	immediate = {
		if = {
			limit = {
				NOT = { exists = event_target:shroudwalker_enclave_country }
			}
			from = {
				save_global_event_target_as = shroudwalker_enclave_country
			}
		}
		country_event = { id = enclave.405 }
	}
}

# Post-First Contact setup
# from = First Contact site owner
country_event = {
	id = enclave.404
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = {
				from = {
					NOT = { has_country_flag = shroudwalker_enclave_country }
				}
			}
			from = {
				country_event = { id = enclave.405 }
			}
		}
		else = {
			fromfrom = {
				country_event = { id = enclave.405 }
			}
		}
	}
}

# Shroudwalker Enclave: GREETINGS
# This = player country; event_target:shroudwalker_enclave_country = enclave country
country_event = {
	id = enclave.405
	title = enclave.405.name
	location = event_target:shroudwalker_enclave_system
	#First-time greetings
	desc = {
		trigger = {
			NOR = {
				has_country_flag = shroudwalker_enclave_diplomacy_engaged
				is_hostile = event_target:shroudwalker_enclave_country
				is_homicidal = yes
				has_ascension_perk = ap_mind_over_matter
				has_origin = origin_shroudwalker_apprentice
			}
		}
		text = enclave.405.generic.a.desc
	}
	desc = {
		trigger = {
			NOT = { has_country_flag = shroudwalker_enclave_diplomacy_engaged }
			OR = {
				has_ascension_perk = ap_mind_over_matter #and by extension, psionic ascension.
				has_origin = origin_shroudwalker_apprentice
			}
		}
		text = enclave.405.psionic.a.desc
	}
	#Return visit greetings
	desc = {
		trigger = {
			has_country_flag = shroudwalker_enclave_diplomacy_engaged
			NOR = {
				is_homicidal = yes
				is_hostile = event_target:shroudwalker_enclave_country
				has_ascension_perk = ap_mind_over_matter
				has_origin = origin_shroudwalker_apprentice
			}
		}
		text = enclave.405.generic.n.desc
		text = enclave.405.generic.o.desc
		text = enclave.405.generic.p.desc
	}
	desc = {
		trigger = {
			has_country_flag = shroudwalker_enclave_diplomacy_engaged
			OR = {
				has_ascension_perk = ap_mind_over_matter #and by extension, psionic ascension.
				has_origin = origin_shroudwalker_apprentice
			}
		}
		text = enclave.405.psionic.n.desc
		text = enclave.405.psionic.o.desc
	}
	#Hostile greeting
	desc = {
		trigger = {
			OR = {
				is_homicidal = yes
				is_hostile = event_target:shroudwalker_enclave_country
			}
		}
		text = enclave.405.hostile.a.desc
	}
	is_triggered_only = yes

	diplomatic = yes
	custom_gui = "enclave_artist_window"
	custom_gui_option = "enclave_artist_option"
	picture_event_data = {
		portrait = event_target:shroudwalker_enclave_country
		room = shroudwalkers_room
	}

	immediate = {
		if = {
			limit = {
				NOR = {
					has_country_flag = shroudwalker_enclave_diplomacy_engaged
					is_homicidal = yes
				}
			}
			every_system = {
				limit = {
					has_star_flag = shroudwalker_enclave_system
				}
				root = { set_visited = prev }
			}
		}
	}

	#Purchase Divination
	option = {
		name = enclave.405.a
		trigger = {
			NOR = {
				is_hostile = event_target:shroudwalker_enclave_country
				is_homicidal = yes
			}
		}
		allow = {
			custom_tooltip = {
				fail_text = shroudwalker_divination_cooldown
				has_active_shroudwalker_divination = no
			}
			custom_tooltip = {
				fail_text = shroudwalker_divination_cooldown_two
				NOT = {
					has_country_flag = divination_purchase
				}
			}
		}
		hidden_effect = {
			country_event = { id = enclave.410 }
		}
	}
	# Purchase their aid
	option = {
		name = enclave.405.b
		trigger = {
			NOR = {
				is_hostile = event_target:shroudwalker_enclave_country
				is_homicidal = yes
			}
		}
		allow = {
			custom_tooltip = {
				fail_text = shroudwalker_teacher_cooldown_tt
				NOT = { has_country_flag = shroudwalker_teacher_cooldown }
			}
			custom_tooltip = {
				fail_text = shroudwalker_teacher_already_bought
				NOT = {
					any_owned_leader = {
						has_leader_flag = shroudwalker_teacher
					}
				}
			}
		}
		hidden_effect = {
			country_event = { id = enclave.7100 }
		}
	}
	# Purchase information about enemies
	option = {
		name = enclave.405.c
		trigger = {
			has_nemesis = yes
			NOR = {
				is_hostile = event_target:shroudwalker_enclave_country
				is_homicidal = yes
			}
			event_target:shroudwalker_enclave_country = {
				trust = {
					who = root
					value >= 10
				}
			}
		}
		allow = {
			custom_tooltip = {
				fail_text = shroudwalker_insight_cooldown_tt
				NOT = { has_country_flag = shroudwalker_insight_cooldown }
			}
			custom_tooltip = {
				fail_text = enclave.405.c.tt
				event_target:shroudwalker_enclave_country = {
					trust = {
						who = root
						value >= 20
					}
				}
			}
			custom_tooltip = {
				fail_text = enclave.405.c.tt.2
				has_active_spynetwork = yes
				any_spynetwork = {
					owner = { is_same_value = root }
					target = { is_country_type = default }
				}
			}
		}
		hidden_effect = {
			country_event = { id = enclave.7050 }
		}
	}
	#Purchase Shroud Beacon
	option = {
		name = enclave.405.d
		trigger = {
			NOR = {
				has_country_flag = shroudwalker_enclave_bought_shroud_beacon
				is_hostile = event_target:shroudwalker_enclave_country
				is_homicidal = yes
			}
		}
		allow = {
			custom_tooltip = {
				fail_text = enclave.405.d.tt
				event_target:shroudwalker_enclave_country = {
					trust = {
						who = root
						value >= 30
					}
				}
			}
		}
		hidden_effect = {
			country_event = { id = enclave.420 }
		}
	}
	# Purchase zro extraction technology
	option = {
		name = enclave.405.e
		trigger = {
			NOR = {
				is_hostile = event_target:shroudwalker_enclave_country
				is_homicidal = yes
				has_technology = tech_mine_zro
				has_country_flag = purchased_zro_tech
			}
			event_target:shroudwalker_enclave_country = {
				trust = {
					who = root
					value >= 30
				}
			}
		}
		allow = {
			custom_tooltip = {
				fail_text = enclave.405.e.tt
				event_target:shroudwalker_enclave_country = {
					trust = {
						who = root
						value >= 50
					}
				}
			}
		}
		hidden_effect = {
			country_event = { id = enclave.7250 }
		}
	}
	#Ask about the Many-Striped Guest (Jaunted Traveler event chain)
	option = {
		name = enclave.405.e
		trigger = {
			has_country_flag = knows_jaunting_traveler_story
			NOT = { has_country_flag = jaunted_traveler_secret_revealed }
		}
		hidden_effect = {
			country_event = { id = enclave.7110 }
		}
	}
	#Cease dialog
	option = {
		name = GOODBYE
		trigger = {
			NOR = {
				is_hostile = event_target:shroudwalker_enclave_country
				is_homicidal = yes
			}
		}
		default_hide_option = yes
	}

	option = {
		name = DOTDOTDOT
		trigger = {
			OR = {
				is_hostile = event_target:shroudwalker_enclave_country
				is_homicidal = yes
			}
		}
	}

	after = {
		hidden_effect = {
			set_country_flag = shroudwalker_enclave_diplomacy_engaged
		}
	}
}

# Shroudwalker Enclave: DIVINATION SALES
# This = player country; event_target:shroudwalker_enclave_country = enclave country
country_event = {
	id = enclave.410
	base = enclave.405
	desc_clear = yes
	option_clear = yes

	desc = enclave.410.desc

	immediate = {
		#Set a scaling multiplier based on years passed
		if = {
			limit = { mid_game_years_passed < 0 }
			set_variable = {
				which = divination_cost_mult
				value = 1.4
			}
		}
		else_if = {
			limit = { end_game_years_passed < 0 }
			set_variable = {
				which = divination_cost_mult
				value = 1
			}
		}
		else = {
			set_variable = {
				which = divination_cost_mult
				value = 0.7
			}
		}
		#Cap the cost at 9k energy (num_pops * @DivinationEnergyCost * divination_cost_mult)
		if = {
			limit = {
				OR = {
					AND = {
						mid_game_years_passed < 0
						num_pops > 210
					}
					AND = {
						end_game_years_passed < 0
						num_pops > 300
					}
					AND = {
						end_game_years_passed >= 0
						num_pops > 420
					}
				}
			}
			set_variable = {
				which = divination_pop_value_var
				value = 300
			}
		}
		else = {
			#Fetch num_pops as a variable, then multiply by divination_cost_mult
			export_trigger_value_to_variable = {
				trigger = num_pops
				variable = divination_pop_value_var
			}
			multiply_variable = {
				which = divination_pop_value_var
				value = divination_cost_mult
			}
			divide_variable = {
				which = divination_pop_value_var
				value = 2
			}
			round_variable_to_closest = {
				which = divination_pop_value_var
				value = 10
			}
		}
		#Flip the positive value into a cost (separate variable, to allow stockpile comparisons)
		set_variable = {
			which = divination_pop_cost_var
			value = divination_pop_value_var
		}
		multiply_variable = {
			which = divination_pop_cost_var
			value = -1
		}
	}

	#Back to menu
	option = {
		name = enclave.410.a
		hidden_effect = {
			country_event = { id = enclave.405 }
		}
	}
	#Purchase Divination
	option = {
		name = enclave.410.b
		allow = {
			custom_tooltip = {
				fail_text = shroudwalker_divination_cooldown
				has_active_shroudwalker_divination = no
			}
			custom_tooltip = {
				fail_text = shroudwalker_divination_cooldown_two
				NOT = {
					has_country_flag = divination_purchase
				}
			}
			resource_stockpile_compare = {
				resource = influence
				value >= @DivinationInfluenceCost
				mult = -1
			}
			resource_stockpile_compare = {
				resource = energy
				value >= @DivinationEnergyCost
				mult = divination_pop_cost_var
			}
		}
		custom_tooltip = opinion10
		add_resource = {
			influence = @DivinationInfluenceCost
		}
		add_resource = {
			energy = @DivinationEnergyCost
			mult = divination_pop_value_var
		}
		hidden_effect = {
			event_target:shroudwalker_enclave_country = {
				add_trust = {
					who = root
					amount = 10
				}
			}
			set_timed_country_flag = {
				flag = divination_purchase
				days = 180
			}
			set_saved_date = {
				key = shroudwalker_divination_timer
				days_from_present = 180
				expires = 180
			}
			country_event = { id = enclave.415 }
		}
	}
	option = {
		name = GOODBYE
		default_hide_option = yes
	}
}

# Shroudwalker Enclave: DIVINATION RITUAL
# This = player country; event_target:shroudwalker_enclave_country = enclave country
country_event = {
	id = enclave.415
	base = enclave.405
	desc_clear = yes
	desc = enclave.415.desc
	option_clear = yes

	option = {
		name = DOTDOTDOT
		custom_tooltip = enclave.415.tt
		hidden_effect = {
			country_event = { id = enclave.4100 days = 10 }
		}
	}
}

# Shroudwalker Enclave: DIVINATION RITUAL FINISHED
situation_event = {
	id = enclave.416
	title = enclave.416.name
	desc = enclave.416.desc
	is_triggered_only = yes

	diplomatic = yes
	custom_gui = "enclave_artist_window"
	custom_gui_option = "enclave_artist_option"
	picture_event_data = {
		portrait = event_target:shroudwalker_enclave_country
		room = shroudwalkers_room
	}

	option = {
		name = DOTDOTDOT
	}

	after = {
		destroy_situation = this
	}
}

# Shroudwalker Enclave: SHROUD BEACON starbase building
# This = player country; event_target:shroudwalker_enclave_country = enclave country
country_event = {
	id = enclave.420
	base = enclave.405
	desc_clear = yes
	option_clear = yes

	desc = enclave.420.desc

	#Back to menu
	option = {
		name = enclave.420.a
		hidden_effect = {
			country_event = { id = enclave.405 }
		}
	}
	#Buy Shroud Beacon
	option = {
		name = enclave.420.b
		trigger = {
			NOT = { has_country_flag = shroudwalker_enclave_bought_shroud_beacon }
		}
		allow = {
			event_target:shroudwalker_enclave_country = {
				trust = {
					who = root
					value >= 40
				}
			}
			resource_stockpile_compare = { resource = energy value >= 800 }
		}
		add_resource = { energy = -800 }
		custom_tooltip = opinion10
		custom_tooltip = shroud_beacon_info
		hidden_effect = {
			event_target:shroudwalker_enclave_country = {
				add_trust = {
					who = root
					amount = 10
				}
				set_country_flag = shroud_beacon@root
			}
			set_country_flag = shroudwalker_enclave_bought_shroud_beacon
			country_event = { id = enclave.425 }
		}
	}
	option = {
		name = TOOPOOR
		trigger = {
			resource_stockpile_compare = { resource = energy value < 800 }
		}
		hidden_effect = {
			country_event = { id = enclave.405 }
		}
	}
	option = {
		name = GOODBYE
		default_hide_option = yes
	}
}

# Shroudwalker Enclave: THANKS (Shroud Beacon)
# This = player country; event_target:shroudwalker_enclave_country = enclave country
country_event = {
	id = enclave.425
	base = enclave.405
	desc_clear = yes
	desc = enclave.425.desc
}

# Shroudwalker Enclave Destroyed (HIDDEN)
country_event = {
	id = enclave.430
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		owner = {
			is_country_type = enclave
			has_country_flag = shroudwalker_enclave_country
			FROMFROM = {
				is_ship_size = enclave_shroudwalker_station
			}
		}
	}

	immediate = {
		FROMFROM = {
			solar_system = { save_event_target_as = shroudwalker_system }
		}
		FROM = {
			country_event = { id = enclave.435 }
			save_event_target_as = shroudwalker_destroyer
		}
		observer_event = { id = observer.95 }
		every_country = {
			limit = {
				has_communications = ROOT
				NOT = { is_country = event_target:shroudwalker_destroyer }
				is_country_type = default
			}
			country_event = { id = enclave.440 }
		}
		every_country = {
			limit = {
				has_modifier = shroudwalker_zro_tithe
			}
			remove_modifier = shroudwalker_zro_tithe
		}
	}
}

# Shroudwalker Enclave Destroyed (Destroyer)
country_event = {
	id = enclave.435
	title = "enclave.435.name"
	desc = "enclave.435.desc"
	picture = GFX_evt_space_debris
	location = event_target:shroudwalker_system
	show_sound = event_ship_bridge
	is_triggered_only = yes

	immediate = {
		set_country_flag = destroyed_shroudwalkers # Achievement
		if = {
			limit = {
				has_origin = origin_shroudwalker_apprentice
			}
			set_country_flag = non_prophet_organization_achievement
		}
	}

	option = {
		name = EXCELLENT
		add_resource = {
			unity = 10000
			sr_zro = 500
		}
	}
}

 # Shroudwalker Enclave Destroyed
country_event = {
	id = enclave.440
	title = "enclave.435.name"
	desc = "enclave.440.desc"
	picture = GFX_evt_space_debris
	location = event_target:shroudwalker_system
	show_sound = event_ship_bridge
	is_triggered_only = yes

	option = {
		name = UNFORTUNATE
	}
}

####################################
# SHROUDWALKER SERVICE SETUP EVENTS
####################################

### DIVINATIONS ###

# Divination setup
country_event = {
	id = enclave.4100
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		exists = event_target:shroudwalker_enclave_country
	}

	immediate = {
		random_list = {
			5 = {
				modifier = {
					factor = 0.2
					has_country_flag = recent_divination_locus
				}
				start_situation = {
					type = divination_locus
				}
				set_timed_country_flag = {
					flag = recent_divination_locus
					years = 20
				}
			}
			5 = {
				modifier = {
					factor = 0.2
					has_country_flag = recent_divination_visitors
				}
				start_situation = {
					type = divination_visitors
				}
				set_timed_country_flag = {
					flag = recent_divination_visitors
					years = 20
				}
			}
		}
	}
}

# "Dismembered Cloud" setup
situation_event = {
	id = enclave.4150
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		NOT = {
			has_situation_flag = divination_occurring
		}
		owner = {
			exists = federation
			has_federation = yes
			federation = {
				OR = {
					has_federation_type = default_federation
					has_federation_type = research_federation
				}
					NOT = { has_federation_flag = dismembered_cloud_complete }
					NOT = { has_federation_flag = recent_or_current_dismembered_cloud }
				any_member = {
					is_at_war = no
					has_technology = tech_sensors_2
				}
				NOT = {
					any_member = {
						has_event_chain = dismembered_cloud_chain
					}
				}
			}
			count_owned_ship = {
				limit = { is_ship_class = shipclass_science_ship }
				count > 0
			}
		}
	}

	immediate = {
		set_situation_flag = divination_occurring
		owner = {
			random_owned_ship = {
				limit = {
					is_ship_class = shipclass_science_ship
				}
				ship_event = { id = federations3.2000 }
			}
		}
	}
}

# "A Most Irritating Envoy" setup
situation_event = {
	id = enclave.4151
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		NOT = {
			has_situation_flag = divination_occurring
		}
		owner = {
			NOR = {
				is_gestalt = yes
				has_ethic = ethic_fanatic_egalitarian
				has_country_flag = recent_envoy_event
			}
			any_relation = {
				is_harming_relations_with = root
				any_envoy = {
					has_envoy_task = {
						task = harm_relations
						target = root
					}
				}
				is_gestalt = no
				NOT = { has_country_flag = recent_envoy_event }
			}
			any_pop_faction = {
				NOT = { is_pop_faction_type = progressive }
				NOT = { is_pop_faction_type = prosperity }
				NOT = { is_pop_faction_type = xenoist }
				is_owner_ethic_pop_faction = yes
			}
		}
	}

	immediate = {
		set_situation_flag = divination_occurring
		owner = {
			country_event = { id = envoy_events.5 }
		}
	}
}

### SHROUD BEACON/TUNNEL ###

# Shroud Beacon Constructed - Shroud Tunnel Established
country_event = {
	id = enclave.4200
	title = "enclave.4200.name"
	desc = "enclave.4200.desc"
	picture = GFX_evt_shroud_tunnel
	show_sound = evn_ove_shroud_tunnel
	location = FROM

	is_triggered_only = yes

	trigger = {
		NOT = {
			has_origin = origin_shroudwalker_apprentice
			has_country_flag = built_first_shroud_tunnel
		}
		any_owned_starbase = {
			has_starbase_building = shroud_beacon
		}
	}

	immediate = {
		owner = {
			set_country_flag = built_first_shroud_tunnel
			add_seen_bypass_type = shroud_tunnel
		}
	}

	option = {
		name = EXCELLENT
	}
}

# Shroudwalkers Depart - Gatekeeper event
country_event = {
	id = enclave.4239
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_crisis = yes #Contingency, Extradimensionals or Prethoryn
		NOR = {
			has_global_flag = shroudwalkers_departed
			has_global_flag = marauder_crisis_ongoing #Khan
			has_global_flag = gray_goo_crisis_active #Gray Tempest
			crisis_happened_and_defeated = yes #Contingency, Extradimensionals or Prethoryn
		}
		any_country = {
			is_country_type = enclave
			has_country_flag = shroudwalker_enclave_country
		}
	}

	immediate = {
		every_country = {
			limit = {
				has_origin = origin_shroudwalker_apprentice
				is_country_type = default # probably there is a need in checking if country has "Teachers of the Shroud" origin
			}
			country_event = { id = enclave.4240 }
		}
	}

	after = {
		every_country = {
			limit = {
				is_country_type = enclave
				has_country_flag = shroudwalker_enclave_country
			}
			destroy_country = yes
		}

		set_global_flag = shroudwalkers_departed
	}
}

# Shroudwalkers Depart - Crisis Event
country_event = {
	id = enclave.4240
	title = "enclave.4240.name"
	desc = "enclave.4240.desc"
	diplomatic = yes
	custom_gui = "enclave_artist_window"
	custom_gui_option = "enclave_artist_option"
	picture_event_data = {
		portrait = event_target:shroudwalker_enclave_country
		room = shroudwalkers_room
	}

	is_triggered_only = yes

	option = {
		name = "enclave.4240.a"
		add_modifier = {
			modifier = "shroudwalkers_depart_reverence"
			years = 20
		}
	}

	option = {
		name = "enclave.4240.b"
		add_modifier = {
			modifier = "shroudwalkers_depart_anger"
			years = 20
		}
	}

	after = {
		add_resource = { sr_zro = 50 }
	}
}

# Shroudwalkers Depart - You are the Crisis - Teachers' Warning

country_event = {
	id = enclave.4243
	title = "enclave.4243.name"
	desc = "enclave.4243.desc"
	diplomatic = yes
	custom_gui = "enclave_artist_window"
	custom_gui_option = "enclave_artist_option"
	picture_event_data = {
		portrait = event_target:shroudwalker_enclave_country
		room = shroudwalkers_room
	}

	is_triggered_only = yes

	trigger = {
		has_origin = origin_shroudwalker_apprentice
		has_crisis_level = crisis_level_2
		exists = event_target:shroudwalker_enclave_country
		NOR = {
			has_country_flag = teachers_warning
			has_global_flag = marauder_crisis_ongoing #Khan
			has_global_flag = gray_goo_crisis_active #Gray Tempest
		}
	}

	immediate = {
		set_country_flag = teachers_warning
	}

	option = {
		name = "enclave.4243.a"
	}

	option = {
		name = "enclave.4243.b"
	}
}

# Shroudwalkers Depart - You are the Crisis - Gatekeeper event

country_event = {
	id = enclave.4244
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_crisis_level = crisis_level_5
		exists = event_target:shroudwalker_enclave_country
		NOR = {
			has_global_flag = shroudwalkers_departed
			has_global_flag = marauder_crisis_ongoing #Khan
			has_global_flag = gray_goo_crisis_active #Gray Tempest
			crisis_happened_and_defeated = yes #Contingency, Extradimensionals or Prethoryn
		}
		any_country = {
			is_country_type = enclave
			has_country_flag = shroudwalker_enclave_country
		}
	}

	immediate = {
		every_country = {
			limit = {
				has_origin = origin_shroudwalker_apprentice
				is_country_type = default
			}
			country_event = { id = enclave.4245 }
		}
	}

	after = {
		every_country = {
			limit = {
				is_country_type = enclave
				has_country_flag = shroudwalker_enclave_country
			}
			destroy_country = yes
		}

		set_global_flag = shroudwalkers_departed
	}
}

# Shroudwalkers Depart - You are the Crisis - Teachers' Farewell
country_event = {
	id = enclave.4245
	title = "enclave.4245.name"
	desc = "enclave.4245.desc"
	diplomatic = yes
	custom_gui = "enclave_artist_window"
	custom_gui_option = "enclave_artist_option"
	picture_event_data = {
		portrait = event_target:shroudwalker_enclave_country
		room = shroudwalkers_room
	}

	is_triggered_only = yes

	option = {
		name = "enclave.4245.a"
		add_modifier = {
			modifier = "shroudwalkers_depart_reverence"
			years = 20
		}
	}

	option = {
		name = "enclave.4245.b"
		add_modifier = {
			modifier = "shroudwalkers_depart_anger"
			years = 20
		}
	}

	after = {
		add_resource = { sr_zro = 50 }
		if = {
			limit = {
				has_origin = origin_shroudwalker_apprentice
			}
			set_country_flag = non_prophet_organization_achievement
		}
	}
}

## Psionic Breach - Shroud Tunnel Event ##

fleet_event = {
	id = enclave.4250
	title = "enclave.4250.name"
	desc = "enclave.4250.desc"
	picture = GFX_evt_vortex

	is_triggered_only = yes

	trigger = {
		owner = {
			NOT = {
				has_country_flag = psionic_breach
			}
		}
	}

	immediate = {
		owner = {
			set_country_flag = psionic_breach
		}
		create_ambient_object = {
			type = "psi_storm_1"
			location = from
		}
		create_country = {
			name = "NAME_Psionic_Avatar_Country"
			type = faction
		}
		last_created_country = {
			set_country_flag = avatar_country
			create_fleet = {
				name = "NAME_Psionic_Avatar"
				settings = {
					can_upgrade = no
					can_change_composition = no
					can_change_leader = no
					uses_naval_capacity = no
					spawn_debris = no
					is_boss = yes
				}
				effect = {
					set_owner = PREV
					set_fleet_flag = avatar_fleet
					create_ship = {
						name = "NAME_Avatar"
						design = "NAME_Shroud_Avatar"
						prefix = no
						upgradable = no
					}
					set_location = last_created_ambient_object
				}
			}
		}
	}

	option = {
		name = "enclave.4250.a"
		trigger = {
			owner = {
				NOR = {
					has_ethic = ethic_spiritualist
					has_ethic = ethic_fanatic_spiritualist
					has_ethic = ethic_militarist
					has_ethic = ethic_fanatic_militarist
					has_ethic = ethic_pacifist
					has_ethic = ethic_fanatic_pacifist
				}
			}
		}
	}

	option = {
		name = "enclave.4250.b"
		trigger = {
			owner = {
				OR = {
					has_ethic = ethic_spiritualist
					has_ethic = ethic_fanatic_spiritualist
				}
			}
		}
	}

	option = {
		name = "enclave.4250.c"
		trigger = {
			owner = {
				OR = {
					has_ethic = ethic_militarist
					has_ethic = ethic_fanatic_militarist
				}
			}
		}
	}

	option = {
		name = "enclave.4250.d"
		trigger = {
			owner = {
				OR = {
					has_ethic = ethic_pacifist
					has_ethic = ethic_fanatic_pacifist
				}
			}
		}
	}
}

####################
# DIVINATION EVENTS
####################

#All Too Lucid
situation_event = {
	id = enclave.5000
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		NOT = {
			has_situation_flag = divination_occurring
		}
		owner = {
			is_ai = no
			is_gestalt = no
			is_individual_machine = no
			NOT = { has_country_flag = too_lucid_flag }
			num_pops > 4
			count_owned_planet = {
				count > 1
				limit = { is_colony = yes }
			}
		}
	}

	immediate = {
		set_situation_flag = divination_occurring
		owner = {
			random_owned_planet = {
				limit = {
					is_capital = no
					is_under_colonization = no
				}
				planet_event = { id = enclave.5005 }
			}
		}
	}
}
planet_event = {
	id = enclave.5005
	title = "enclave.5005.name"
	desc = {
		trigger = {
			hidden:owner = {
				switch = {
					trigger = is_species_class
					HUM = { text = "enclave.5005a.desc" }
					MAM = { text = "enclave.5005a.desc" }
					LITHOID = { text = "enclave.5005b.desc" }
					PLANT = { text = "enclave.5005c.desc" }
					FUN = { text = "enclave.5005d.desc" }
					REP = { text = "enclave.5005e.desc" }
					AVI = { text = "enclave.5005e.desc" }
					MOL = { text = "enclave.5005f.desc" }
					ART = { text = "enclave.5005g.desc" }
					NECROID = { text = "enclave.5005h.desc" }
					AQUATIC = { text = "enclave.5005e.desc" }
					TOX = { text = "enclave.5005a.desc" }
					default = { text = "enclave.5005a.desc" }
				}
			}
		}
	}
	picture = GFX_evt_zro_4
	situation = from #this will only do anything if from is actually a situation
	show_sound = event_default
	location = ROOT
	is_triggered_only = yes

	pre_triggers = {
		has_owner = yes
		is_homeworld = no
		original_owner = yes
		has_ground_combat = no
		is_capital = no
	}
	# original_owner doesn't work in pre_triggers apparently.
	trigger = {
		original_owner = yes
	}

	immediate = {
		owner = {
			set_country_flag = too_lucid_flag
		}
		set_planet_flag = colony_event
	}

	option = {
		name = enclave.5005.a
		planet_event = {
			id = enclave.5010
			days = 60
			random = 20
		}
		add_modifier = {
			modifier = too_lucid_00
			days = -1
		}
	}
}
planet_event = {
	id = enclave.5010
	title = "enclave.5010.name"
	desc = "enclave.5010.desc"
	picture = GFX_evt_news_room
	show_sound = event_default
	location = ROOT

	immediate = {
		remove_modifier = too_lucid_00
	}

	trigger = {
		original_owner = yes
	}

	is_triggered_only = yes

	option = {
		name = enclave.5010.a
		planet_event = {
			id = enclave.5025
			days = 60
			random = 30
		}
		add_modifier = {
			modifier = too_lucid_01
			days = -1
		}
	}
	option = {
		name = enclave.5010.b
		enable_special_project = {
			name = "TO_DREAM_PROJECT_01"
			location = this
			owner = root
		}
		add_modifier = {
			modifier = too_lucid_00
			days = -1
		}
	}
}
planet_event = {
	id = enclave.5015
	title = "enclave.5015.name"
	desc = "enclave.5015.desc"
	picture = GFX_evt_vivisection
	show_sound = event_default
	location = ROOT

	trigger = {
		original_owner = yes
	}

	is_triggered_only = yes

	option = {
		name = UNDERSTOOD
		enable_special_project = {
			name = "TO_DREAM_PROJECT_02"
			location = this
			owner = root
		}
	}
}
planet_event = {
	id = enclave.5020
	title = "enclave.5020.name"
	desc = {
		trigger = {
			hidden:owner = {
				switch = {
					trigger = is_species_class
					HUM = { text = "enclave.5020a.desc" }
					MAM = { text = "enclave.5020a.desc" }
					LITHOID = { text = "enclave.5020b.desc" }
					PLANT = { text = "enclave.5020c.desc" }
					FUN = { text = "enclave.5020d.desc" }
					REP = { text = "enclave.5020e.desc" }
					AVI = { text = "enclave.5020e.desc" }
					MOL = { text = "enclave.5020f.desc" }
					ART = { text = "enclave.5020g.desc" }
					NECROID = { text = "enclave.5020h.desc" }
					AQUATIC = { text = "enclave.5020e.desc" }
					TOX = { text = "enclave.5020a.desc" }
					default = { text = "enclave.5020a.desc" }
				}
			}
		}
	}
	picture = GFX_evt_microscopic_life
	show_sound = event_default
	location = ROOT

	trigger = {
		original_owner = yes
	}

	immediate = {
		remove_modifier = too_lucid_00
	}

	is_triggered_only = yes

	option = {
		name = enclave.5020.a
		add_modifier = {
			modifier = too_lucid_02
			months = 120
		}
	}
}
planet_event = {
	id = enclave.5025
	title = "enclave.5025.name"
	desc = "enclave.5025.desc"
	picture = GFX_evt_emergency_workers
	show_sound = event_default
	location = ROOT

	immediate = {
		remove_modifier = too_lucid_01
	}

	trigger = {
		original_owner = yes
	}

	is_triggered_only = yes

	option = {
		name = enclave.5025.a
		planet_event = {
			id = enclave.5030
			days = 60
			random = 30
		}
		add_modifier = {
			modifier = too_lucid_03
			months = 120
		}
	}
}
planet_event = {
	id = enclave.5030
	title = "enclave.5030.name"
	desc = "enclave.5030.desc"
	picture = GFX_evt_vivisection
	show_sound = event_default
	location = ROOT

	trigger = {
		original_owner = yes
	}

	is_triggered_only = yes

	option = {
		name = UNDERSTOOD
		planet_event = {
			id = enclave.5035
			days = 60
			random = 30
		}
	}
}
planet_event = {
	id = enclave.5035
	title = "enclave.5035.name"
	desc = "enclave.5035.desc"
	picture = GFX_evt_burning_city
	show_sound = event_default
	location = ROOT

	trigger = {
		original_owner = yes
	}

	is_triggered_only = yes

	option = {
		name = enclave.5035.a
		add_modifier = {
			modifier = martial_law
			months = 120
		}
	}
}

# Shrouded
situation_event = {
	id = enclave.5050
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		NOT = {
			has_situation_flag = divination_occurring
		}
		owner = {
			count_owned_ship = {
				limit = { is_ship_class = shipclass_science_ship }
				count > 0
			}
			NOT = {
				has_country_flag = shrouded_ship
			}
		}
	}

	immediate = {
		set_situation_flag = divination_occurring
		owner = {
			random_owned_ship = {
				limit = { is_ship_class = shipclass_science_ship }
				ship_event = { id = enclave.5055 }
			}
		}
	}
}

ship_event = {
	id = enclave.5055
	title = "enclave.5055.name"
	desc = "enclave.5055.desc"
	show_sound = event_mystic_reveal
	picture = GFX_evt_ship_travel
	location = event_target:shrouded_system
	situation = from #this will only do anything if from is actually a situation

	is_triggered_only = yes

	trigger = {
		exists = solar_system # ensure the vessel is e.g. not in transit
		owner = {
			NOT = {
				has_country_flag = shrouded_ship
			}
		}
	}

	immediate = {
		solar_system = {
			save_event_target_as = shrouded_system
		}
		owner = {
			set_country_flag = shrouded_ship
		}
		fleet = {
			if = {
				limit = { exists = leader }
				leader = {
					unassign_leader = this
					save_event_target_as = shrouded_leader
					exile_leader_as = shrouded_leader
				}
			}
			delete_fleet = this
		}
		hidden_effect = {
			create_point_of_interest = {
				id = enclave.5055.poi.1
				name = "enclave.5055.poi_1"
				desc = "enclave.5055.poi.desc"
				event_chain = shrouded_ship_chain
				location = event_target:shrouded_system
			}
		}
	}

	option = {
		name = UNDERSTOOD
		owner = {
			begin_event_chain = {
				event_chain = shrouded_ship_chain
				target = this
			}
			add_event_chain_counter = {
				event_chain = shrouded_ship_chain
				counter = "shrouded_ship_discoveries"
				amount = 1
			}
			event_target:shrouded_system = {
				enable_special_project = {
					name = "SHROUDED_SHIP_PROJECT"
					location = event_target:shrouded_system
					owner = root.owner
				}
			}
		}
	}
}

country_event = {
	id = enclave.5060
	title = "enclave.5060.name"
	desc = "enclave.5060.desc"
	show_sound = event_mystic_reveal
	picture = GFX_evt_ship_in_orbit_3
	location = event_target:shrouded_system

	is_triggered_only = yes

	trigger = {
		owner = {
			has_event_chain = shrouded_ship_chain
		}
	}

	option = {
		name = FASCINATING
		hidden_effect = {
			country_event = { id = enclave.5065 days = 180 }
		}
		owner = {
			add_event_chain_counter = {
				event_chain = shrouded_ship_chain
				counter = "shrouded_ship_discoveries"
				amount = 1
			}
			add_monthly_resource_mult = {
				resource = physics_research
				value = @tier1researchreward
				min = @tier1researchmin
				max = @tier1researchmax
			}
		}
	}
}

country_event = {
	id = enclave.5065
	title = "enclave.5065.name"
	desc = "enclave.5065.desc"
	show_sound = event_mystic_reveal
	picture = GFX_evt_ship_in_orbit_3
	location = event_target:shrouded_system

	is_triggered_only = yes

	trigger = {
		owner = {
			has_event_chain = shrouded_ship_chain
		}
	}

	immediate = {
		create_fleet = {
			name = "NAME_Unshrouded_Science_Ship"
			effect = {
				set_owner = prev
				if = {
					limit = {
						has_first_contact_dlc = yes
					}
					create_ship_design = {
						design = "NAME_From_Beyond_Ship_Cloak"
					}
				}
				else = {
					create_ship_design = {
						design = "NAME_From_Beyond_Ship"
					}
				}
				create_ship = {
					name = "NAME_Conceptual_Ship"
					design = last_created_design
					graphical_culture = "extra_dimensional_01"
					prefix = no
					upgradable = no
					effect = {
						set_ship_flag = special_science_ship
					}
				}
				set_location = event_target:shrouded_system
				if = {
					limit = {
						exists = event_target:shrouded_leader
					}
					set_leader = event_target:shrouded_leader
				}
			}
		}
	}

	option = {
		name = "enclave.5065.a"
		owner = {
			end_event_chain = shrouded_ship_chain
		}
	}
}

#Rogue Shaman
situation_event = {
	id = enclave.5070
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		NOT = {
			has_situation_flag = divination_occurring
		}
		owner = {
			is_ai = no
			is_gestalt = no
			NOR = {
				has_country_flag = rogue_shaman_flag
				has_country_flag = active_divination_event
			}
			num_pops > 1
			count_owned_planet = {
				count > 1
				limit = { is_colony = yes }
			}
		}
	}

	immediate = {
		set_situation_flag = divination_occurring
		save_event_target_as = shaman_divination_situation
		owner = {
			set_country_flag = active_divination_event
			random_owned_planet = {
				limit = { is_capital = no }
				planet_event = { id = enclave.5075 }
			}
		}
	}
}

planet_event = {
	id = enclave.5075
	title = "enclave.5075.name"
	desc = "enclave.5075.desc"
	picture = GFX_evt_shroudwalker_teachers
	show_sound = evn_ove_shroudwalker_apprentice
	location = ROOT
	situation = from #this will only do anything if from is actually a situation
	is_triggered_only = yes

	pre_triggers = {
		has_owner = yes
		is_homeworld = no
		original_owner = yes
		has_ground_combat = no
		is_capital = no
	}

	trigger = {
		is_under_colonization = no
	}

	immediate = {
		owner = {
			set_country_flag = rogue_shaman_flag
		}
		set_planet_flag = colony_event
	}

	option = {
		name = enclave.5075.a
		event_target:shaman_divination_situation = {
			add_situation_progress = 40
		}
		hidden_effect = {
			planet_event = {
				id = enclave.5076
				days = 60
				random = 20
			}
		}
		rogue_shaman_modifier_removal = yes
		add_modifier = {
			modifier = rogue_shaman_00
			days = -1
		}
		event_target:shroudwalker_enclave_country = {
			add_trust = {
				who = root
				amount = 10
			}
		}
	}
	option = {
		name = enclave.5075.b
		event_target:shaman_divination_situation = {
			add_situation_progress = 15
		}
		hidden_effect = {
			planet_event = {
				id = enclave.5080
				days = 60
				random = 20
			}
		}
		rogue_shaman_modifier_removal = yes
		add_modifier = {
			modifier = rogue_shaman_01
			days = -1
		}
		event_target:shroudwalker_enclave_country = {
			add_trust = {
				who = root
				amount = -5
			}
		}
	}
	option = {
		name = enclave.5075.c
		event_target:shaman_divination_situation = {
			add_situation_progress = 20
		}
		hidden_effect = {
			planet_event = {
				id = enclave.5080
				days = 60
				random = 20
			}
		}
		rogue_shaman_modifier_removal = yes
		add_modifier = {
			modifier = rogue_shaman_01
			days = -1
		}
		event_target:shroudwalker_enclave_country = {
			add_trust = {
				who = root
				amount = -10
			}
		}
	}
}

planet_event = {
	id = enclave.5076
	title = "enclave.5076.name"
	desc = "enclave.5076.desc"
	picture = GFX_evt_conclave
	show_sound = event_default
	location = ROOT

	trigger = {
		original_owner = yes
	}

	is_triggered_only = yes

	option = {
		event_target:shaman_divination_situation = {
			add_situation_progress = 25
		}
		name = enclave.5076.a
		hidden_effect = {
			planet_event = {
				id = enclave.5077
				days = 60
				random = 30
			}
		}
	}
}

planet_event = {
	id = enclave.5077
	title = "enclave.5077.name"
	desc = "enclave.5077.desc"
	picture = GFX_evt_surrender
	show_sound = event_default
	location = ROOT

	trigger = {
		original_owner = yes
	}

	is_triggered_only = yes

	immediate = {
		owner = {
			remove_country_flag = active_divination_event
		}
	}

	option = {
		event_target:shaman_divination_situation = {
			add_situation_progress = 30
		}
		name = enclave.5077.a
		rogue_shaman_modifier_removal = yes
		add_modifier = {
			modifier = rogue_shaman_02
			days = 720
		}
	}
}

planet_event = {
	id = enclave.5080
	title = "enclave.5080.name"
	desc = "enclave.5080.desc"
	picture = GFX_evt_alien_propaganda
	show_sound = event_default
	location = ROOT

	trigger = {
		original_owner = yes
	}

	is_triggered_only = yes

	option = {
		name = enclave.5080.a
		event_target:shaman_divination_situation = {
			add_situation_progress = 25
		}
		hidden_effect = {
			planet_event = {
				id = enclave.5076
				days = 60
				random = 20
			}
		}
		rogue_shaman_modifier_removal = yes
		add_modifier = {
			modifier = rogue_shaman_00
			days = -1
		}
	}
	option = {
		event_target:shaman_divination_situation = {
			add_situation_progress = 25
		}
		name = enclave.5080.b
		hidden_effect = {
			planet_event = {
				id = enclave.5081
				days = 60
				random = 20
			}
		}
		rogue_shaman_modifier_removal = yes
		add_modifier = {
			modifier = rogue_shaman_03
			days = -1
		}
	}
}

planet_event = {
	id = enclave.5081
	title = "enclave.5081.name"
	desc = "enclave.5081.desc"
	picture = GFX_evt_conclave
	show_sound = event_default
	location = ROOT

	trigger = {
		original_owner = yes
	}

	is_triggered_only = yes

	immediate = {
		remove_modifier = rogue_shaman_03
	}

	option = {
		event_target:shaman_divination_situation = {
			add_situation_progress = 15
		}
		name = CURIOUS
		hidden_effect = {
			planet_event = {
				id = enclave.5082
				days = 120
				random = 20
			}
		}
	}
}

planet_event = {
	id = enclave.5082
	title = "enclave.5082.name"
	desc = "enclave.5082.desc"
	picture = GFX_evt_psionics
	show_sound = event_default
	location = ROOT

	trigger = {
		original_owner = yes
	}

	is_triggered_only = yes

	immediate = {
		owner = {
			remove_country_flag = active_divination_event
		}
	}

	option = {
		event_target:shaman_divination_situation = {
			add_situation_progress = 10
		}
		name = FASCINATING
		rogue_shaman_modifier_removal = yes
		add_modifier = {
			modifier = rogue_shaman_04
			days = -1
		}
	}
}

#The Great Schism - Divination Event
situation_event = {
	id = enclave.5085
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		NOT = {
			has_situation_flag = divination_occurring
		}
		owner = {
			NOT = { has_country_flag = great_schism_flag }
			num_pops > 1
			count_owned_planet = {
				count > 1
				limit = { is_colony = yes }
			}
		}
	}

	immediate = {
		set_situation_flag = divination_occurring
		save_event_target_as = schism_divination_situation
		owner = {
			random_owned_planet = {
				limit = { is_capital = no }
				planet_event = { id = enclave.5090 }
				set_planet_flag = colony_event
			}
		}
	}
}

planet_event = {
	id = enclave.5090
	title = "enclave.5090.name"
	desc = "enclave.5090.desc"
	picture = GFX_evt_shroudwalker_enclave
	show_sound = evn_ove_shroudwalker_enclave
	location = ROOT
	is_triggered_only = yes
	situation = from #this will only do anything if from is actually a situation

	pre_triggers = {
		has_owner = yes
		is_homeworld = no
		original_owner = yes
		has_ground_combat = no
		is_capital = no
	}

	trigger = {
		is_under_colonization = no
		exists = event_target:schism_divination_situation
	}

	immediate = {
		owner = {
			set_country_flag = great_schism_flag
		}
		set_planet_flag = colony_event
	}

	option = {
		name = enclave.5090.a
		event_target:schism_divination_situation = {
			add_situation_progress = 10
		}
		hidden_effect = {
			planet_event = {
				id = enclave.5095
				days = 60
			}
			event_target:shroudwalker_enclave_country = {
				add_trust = {
					who = root
					amount = -10
				}
			}
		}
	}
	option = {
		name = enclave.5090.b
		hidden_effect = {
			planet_event = {
				id = enclave.5120
				days = 60
			}
			event_target:shroudwalker_enclave_country = {
				add_trust = {
					who = root
					amount = 10
				}
			}
		}
	}
	option = {
		name = enclave.5090.c
		trigger = {
			owner = {
				OR = {
					has_ethic = ethic_xenophobe
					has_ethic = ethic_fanatic_xenophobe
				}
			}
		}
		hidden_effect = {
			planet_event = {
				id = enclave.5100
				days = 60
			}
			event_target:shroudwalker_enclave_country = {
				add_trust = {
					who = root
					amount = 10
				}
			}
		}
	}
}

#Welcome Reformers Chain
planet_event = {
	id = enclave.5095
	title = "enclave.5095.name"
	desc = "enclave.5095.desc"
	is_triggered_only = yes

	diplomatic = yes
	custom_gui = "enclave_artist_window"
	custom_gui_option = "enclave_artist_option"
	picture_event_data = {
		portrait = event_target:shroudwalker_enclave_country
		room = shroudwalkers_room
	}

	immediate = {
		create_country = {
			name = "NAME_Shroud_Reformers"
			type = faction
			species = event_target:shroudwalker_enclave_country.species
			auto_delete = no
			flag = {
				icon = {
					category = "special"
					file = "shroudwalkers.dds"
				}
				background = {
					category = "backgrounds"
					file = "sinus.dds"
				}
				colors = {
					"black"
					"red"
					"null"
					"null"
				}
			}
			effect = {
				create_leader = {
					name = random
					class = random_ruler
					species = event_target:shroudwalker_enclave_country.species
					skill = 4
					traits = {
						trait = leader_trait_expertise_psionics
					}
				}
			}
		}
		last_created_country = {
			save_event_target_as = reformers_of_the_shroud
		}
		event_target:reformers_of_the_shroud = {
			ruler = {
				save_event_target_as = shroud_reformer
			}
		}
	}

	option = {
		name = UNDERSTOOD
		hidden_effect = {
			planet_event = {
				id = enclave.5100
				days = 60
			}
		}
	}
}

planet_event = {
	id = enclave.5100
	title = "enclave.5100.name"
	desc = "enclave.5100.desc"
	diplomatic = yes
	custom_gui = "enclave_artist_window"
	custom_gui_option = "enclave_artist_option"
	picture_event_data = {
		portrait = event_target:reformers_of_the_shroud
		room = FROM.ruler
	}
	is_triggered_only = yes

	trigger = {
		exists = event_target:schism_divination_situation
	}

	option = {
		name = "enclave.5100.a"
		event_target:schism_divination_situation = {
			add_situation_progress = 10
		}
		allow = {
			owner = {
				resource_stockpile_compare = {
					resource = energy
					value >= 500
				}
				resource_stockpile_compare = {
					resource = rare_crystals
					value >= 50
				}
			}
		}
		owner = {
			add_resource = {
				energy = -500
				rare_crystals = -50
			}
		}
		hidden_effect = {
			planet_event = {
				id = enclave.5105
				days = 100
				random = 30
			}
		}
	}
	option = {
		name = "enclave.5100.b"
		event_target:schism_divination_situation = {
			add_situation_progress = -10
		}
		hidden_effect = {
			planet_event = {
				id = enclave.5106
				days = 100
				random = 30
			}
		}
	}
}

planet_event = {
	id = enclave.5105
	title = "enclave.5105.name"
	desc = "enclave.5105.desc"
	is_triggered_only = yes

	diplomatic = yes
	custom_gui = "enclave_artist_window"
	custom_gui_option = "enclave_artist_option"
	picture_event_data = {
		portrait = event_target:reformers_of_the_shroud
		room = FROM.ruler
	}

	option = {
		name = EXCELLENT
		hidden_effect = {
			random_list = {
				50 = {
					planet_event = {
						id = enclave.5110
						days = 180
						random = 20
					}
				}
				50 = {
					planet_event = {
						id = enclave.5115
						days = 180
						random = 20
					}
				}
			}
		}
	}
}

planet_event = {
	id = enclave.5106
	title = "enclave.5106.name"
	desc = "enclave.5106.desc"
	picture = GFX_evt_shrouded_planet
	show_sound = event_default
	location = ROOT
	is_triggered_only = yes

	trigger = {
		exists = event_target:schism_divination_situation
	}

	option = {
		name = UNDERSTOOD
		event_target:schism_divination_situation = {
			add_situation_progress = 20
		}
		add_modifier = {
			modifier = great_schism_03
			days = -1
		}
	}
}

#50% spawn chance A
planet_event = {
	id = enclave.5110
	title = "enclave.5110.name"
	desc = "enclave.5110.desc"
	picture = GFX_evt_planet_beam
	show_sound = event_default
	location = ROOT
	is_triggered_only = yes

	immediate = {
		event_target:reformers_of_the_shroud = {
			destroy_country = yes
		}
	}

	option = {
		name = EXCELLENT
		add_modifier = {
			modifier = great_schism_01
			days = -1
		}
	}
}

#50% spawn chance B
planet_event = {
	id = enclave.5115
	title = "enclave.5110.name"
	desc = "enclave.5115.desc"
	picture = GFX_evt_shrouded_planet
	show_sound = event_default
	location = ROOT
	is_triggered_only = yes

	immediate = {
		event_target:reformers_of_the_shroud = {
			destroy_country = yes
		}
	}

	option = {
		name = UNFORTUNATE
		add_modifier = {
			modifier = great_schism_02
			days = -1
		}
	}
}

#Reformers Denied
planet_event = {
	id = enclave.5120
	title = "enclave.5095.name"
	desc = "enclave.5120.desc"
	diplomatic = yes
	custom_gui = "enclave_artist_window"
	custom_gui_option = "enclave_artist_option"
	picture_event_data = {
		portrait = event_target:shroudwalker_enclave_country
		room = shroudwalkers_room
	}
	is_triggered_only = yes

	trigger = {
		exists = event_target:schism_divination_situation
	}

	option = {
		name = DOTDOTDOT
		event_target:schism_divination_situation = {
			add_situation_progress = 80
		}
	}
}


#Floating Parts - Divination Event
situation_event = {
	id = enclave.5125
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		NOT = {
			has_situation_flag = divination_occurring
		}
		situation_progress >= 10
		owner = {
			NOT = { has_country_flag = floating_parts_flag }
		}
	}

	immediate = {
		set_situation_flag = divination_occurring
		save_event_target_as = floating_parts_situation
		owner = {
			random_system_within_border = {
				create_ambient_object = {
					type = small_debris_object
				}
				save_event_target_as = floating_shell_system
				set_star_flag = floating_shell_flag
			}
			country_event = { id = enclave.5130 }
		}
	}
}

country_event = {
	id = enclave.5130
	title = enclave.5130.name
	desc = enclave.5130.desc
	picture = GFX_evt_space_debris
	location = event_target:floating_shell_system
	is_triggered_only = yes
	situation = from #this will only do anything if from is actually a situation

	trigger = {
		owner = {
			NOT = { has_country_flag = floating_parts_flag }
		}
	}

	immediate = {
		set_country_flag = floating_parts_flag
	}

	option = {
		name = INTERESTING
		event_target:floating_parts_situation = {
			add_situation_progress = 6
		}
		owner = {
			enable_special_project = {
				name = "FLOATING_PARTS_PROJECT_00"
			}
		}
	}
}

country_event = {
	id = enclave.5135
	title = enclave.5135.name
	desc = enclave.5135.desc
	picture = GFX_evt_space_debris
	location = event_target:floating_shell_system
	is_triggered_only = yes

	immediate = {
		random_system_within_border = {
			limit = {
				NOT = {
					has_star_flag = floating_shell_flag
				}
			}
			create_ambient_object = {
				type = small_debris_object
			}
			save_event_target_as = floating_engine_system
			set_star_flag = floating_engine_flag
		}
	}

	option = {
		name = INTERESTING
		owner = {
			add_monthly_resource_mult = {
				resource = engineering_research
				value = @tier1researchreward
				min = @tier1researchmin
				max = @tier1researchmax
			}
			give_next_armor_tech_option_effect = yes
		}
		hidden_effect = {
			country_event = { id = enclave.5136 days = 90 }
		}
	}
}

country_event = {
	id = enclave.5136
	title = enclave.5136.name
	desc = enclave.5136.desc
	picture = GFX_evt_satellite_in_orbit
	location = event_target:floating_engine_system
	is_triggered_only = yes

	immediate = {
		random_system_within_border = {
			limit = {
				NOR = {
					has_star_flag = floating_engine_flag
					has_star_flag = floating_shell_flag
				}
			}
			create_ambient_object = {
				type = small_debris_object
			}
			save_event_target_as = floating_core_system
			set_star_flag = floating_core_flag
		}
	}

	option = {
		name = enclave.5156.a
		event_target:floating_parts_situation = {
			add_situation_progress = 6
		}
		add_monthly_resource_mult = {
			resource = engineering_research
			value = @tier1researchreward
			min = @tier1researchmin
			max = @tier1researchmax
		}
		hidden_effect = {
			country_event = { id = enclave.5140 days = 90 }
		}
	}
}

country_event = {
	id = enclave.5140
	title = enclave.5140.name
	desc = enclave.5140.desc
	picture = GFX_evt_sapient_AI
	location = event_target:floating_core_system
	is_triggered_only = yes

	option = {
		name = enclave.5140.a
		enable_special_project = {
			name = "FLOATING_PARTS_PROJECT_01"
		}
	}
}

country_event = {
	id = enclave.5145
	title = enclave.5145.name
	desc = enclave.5145.desc
	picture = GFX_evt_ship_in_orbit_3
	location = event_target:floating_core_system
	is_triggered_only = yes

	option = {
		name = enclave.5145.a
		create_fleet = {
			settings = {
				spawn_debris = no
			}
			effect = {
				set_owner = PREV
				create_ship_design = {
					design = "NAME_Shroud_Fragment"
				}
				create_ship = {
					name = "NAME_Shroud_Fragment"
					design = last_created_design
					upgradable = no
				}
				set_location = event_target:floating_core_system
			}
		}
	}

	option = {
		name = enclave.5145.b
		add_resource = { alloys = 750 }
	}
}

### DIVINATION EVENTS - Pre-Existing Events ###

#Lightshow - anomaly.235#

situation_event = {
	id = enclave.5150
	title = enclave.5150.name
	desc = enclave.5150.desc
	picture = GFX_evt_surreal_visions
	show_sound = event_mystic_reveal
	location = event_target:lightshow_divination_planet
	situation = this
	is_triggered_only = yes

	trigger = {
		NOT = {
			has_situation_flag = divination_occurring
		}
		situation_progress >= 15
		owner = {
			NOT = {
				has_country_flag = lightshow_divination_flag
			}
			has_shroudwalker_divination_event = no
		}
	}

	immediate = {
		set_situation_flag = divination_occurring
		save_event_target_as = lightshow_situation
		owner = {
			set_country_flag = lightshow_divination_flag
			random_planet_within_border = {
				limit = {
					NOR = {
						is_planet_class = pc_gas_giant
						is_planet_class = pc_astral_scar
					}
					is_artificial = no
					is_asteroid = no
					is_star = no
					is_colony = no
				}
				save_event_target_as = lightshow_divination_planet
			}
		}
	}

	option = {
		name = UNDERSTOOD
		event_target:lightshow_situation = {
			add_situation_progress = 20
		}
		event_target:lightshow_divination_planet = {
			add_anomaly = {
				target = root.owner
				category = FROZ_ILLUMINATED_CAT
			}
		}
	}
}

#Grimacing - anomaly.230

situation_event = {
	id = enclave.5155
	title = enclave.5150.name
	desc = enclave.5150.desc
	picture = GFX_evt_surreal_visions
	show_sound = event_mystic_reveal
	location = event_target:grimacing_divination_planet
	situation = this
	is_triggered_only = yes

	trigger = {
		NOT = {
			has_situation_flag = divination_occurring
		}
		situation_progress >= 15
		owner = {
			NOT = {
				has_country_flag = grimacing_divination_flag
			}
		}
	}

	immediate = {
		set_situation_flag = divination_occurring
		save_event_target_as = grimacing_situation
		owner = {
			set_country_flag = grimacing_divination_flag
			random_planet_within_border = {
				limit = {
					NOR = {
						is_planet_class = pc_gas_giant
						is_planet_class = pc_astral_scar
					}
					is_artificial = no
					is_asteroid = no
					is_star = no
					is_colony = no
				}
				save_event_target_as = grimacing_divination_planet
			}
		}
	}

	option = {
		name = UNDERSTOOD
		event_target:grimacing_situation = {
			add_situation_progress = 20
		}
		event_target:grimacing_divination_planet = {
			add_anomaly = {
				target = root.owner
				category = FRBR_GRIMACING_CAT
			}
		}
	}
}

#Improbable Teapot - anomaly.4060#

situation_event = {
	id = enclave.5160
	title = enclave.5150.name
	desc = enclave.5150.desc
	picture = GFX_evt_surreal_visions
	show_sound = event_mystic_reveal
	location = event_target:teapot_divination_planet
	situation = this
	is_triggered_only = yes

	trigger = {
		NOT = {
			has_situation_flag = divination_occurring
		}
		situation_progress >= 10
		owner = {
			NOT = {
				has_country_flag = teapot_divination_flag
			}
		}
	}

	immediate = {
		set_situation_flag = divination_occurring
		save_event_target_as = teapot_situation
		owner = {
			set_country_flag = teapot_divination_flag
			random_planet_within_border = {
				limit = {
					is_star = yes
				}
				save_event_target_as = teapot_divination_planet
			}
		}
	}

	option = {
		name = UNDERSTOOD
		event_target:teapot_situation = {
			add_situation_progress = 20
		}
		event_target:teapot_divination_planet = {
			add_anomaly = {
				target = root.owner
				category = SUN_TEAPOT_CAT
			}
		}
	}
}

# Brain Slugs! - distar.170 #

situation_event = {
	id = enclave.5165
	title = enclave.5150.name
	desc = enclave.5150.desc
	picture = GFX_evt_surreal_visions
	show_sound = event_mystic_reveal
	location = event_target:brainslug_divination_planet
	situation = this
	is_triggered_only = yes

	trigger = {
		NOT = {
			has_situation_flag = divination_occurring
		}
		situation_progress >= 15
		owner = {
			NOT = {
				has_country_flag = brainslug_divination_flag
			}
		}
	}

	immediate = {
		set_situation_flag = divination_occurring
		save_event_target_as = brainslug_situation
		owner = {
			set_country_flag = brainslug_divination_flag
			random_planet_within_border = {
				limit = {
					is_colonizable = yes
					is_artificial = no
					is_asteroid = no
					is_star = no
					is_colony = no
					is_under_colonization = no
				}
				save_event_target_as = brainslug_divination_planet
			}
		}
	}

	option = {
		name = UNDERSTOOD
		event_target:brainslug_situation = {
			add_situation_progress = 30
		}
		event_target:brainslug_divination_planet = {
			add_anomaly = {
				target = root.owner
				category = DISTAR_BRAINSLUG_CAT
			}
		}
	}
}

#The Doorway - colony.3005 #

situation_event = {
	id = enclave.5170
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		NOT = {
			has_situation_flag = divination_occurring
		}
		situation_progress >= 10
		owner = {
			NOT = {
				has_country_flag = dportal_country
			}
		}
	}

	immediate = {
		set_situation_flag = divination_occurring
		owner = {
			# This gets checked and set in colony.3005
			# set_country_flag = dportal_country 
			random_owned_planet = {
				limit = {
					has_owner = yes
					is_colony = yes
					original_owner = yes
					NOR = {
						is_under_colonization = yes
						has_ground_combat = yes
						is_homeworld = yes
						is_occupied_flag = yes
						is_capital = yes
						num_pops < 2
						is_planet_class = pc_habitat
						is_planet_class = pc_ringworld_habitable
						is_planet_class = pc_shattered_ring_habitable
						has_planet_flag = colony_event
					}
				}
				save_event_target_as = doorway_divination_planet
			}
			event_target:doorway_divination_planet = {
				planet_event = {
					id = colony.3005
				}
			}
		}
	}
}

#Atmospheric Ecosystem - anomaly.300#

situation_event = {
	id = enclave.5175
	title = enclave.5150.name
	desc = enclave.5150.desc
	picture = GFX_evt_surreal_visions
	show_sound = event_mystic_reveal
	location = event_target:atmoseco_divination_planet
	situation = this
	is_triggered_only = yes

	trigger = {
		NOT = {
			has_situation_flag = divination_occurring
		}
		situation_progress >= 15
		owner = {
			NOT = {
				has_country_flag = atmoseco_divination_flag
			}
		}
	}

	immediate = {
		set_situation_flag = divination_occurring
		save_event_target_as = atmoseco_situation
		owner = {
			set_country_flag = atmoseco_divination_flag
			random_planet_within_border = {
				limit = {
					is_planet_class = pc_gas_giant
				}
				save_event_target_as = atmoseco_divination_planet
			}
		}
	}

	option = {
		name = UNDERSTOOD
		event_target:atmoseco_situation = {
			add_situation_progress = 30
		}
		event_target:atmoseco_divination_planet = {
			add_anomaly = {
				target = root.owner
				category = life_gasgiant_category
			}
		}
	}
}

# The Color of Science - anomaly.6740 #

situation_event = {
	id = enclave.5180
	title = enclave.5150.name
	desc = enclave.5150.desc
	picture = GFX_evt_surreal_visions
	show_sound = event_mystic_reveal
	location = event_target:colorscience_divination_planet
	situation = this
	is_triggered_only = yes

	trigger = {
		NOT = {
			has_situation_flag = divination_occurring
		}
		situation_progress >= 15
		owner = {
			NOT = {
				has_country_flag = colorscience_divination_flag
			}
		}
	}

	immediate = {
		set_situation_flag = divination_occurring
		save_event_target_as = colorscience_situation
		owner = {
			set_country_flag = colorscience_divination_flag
			random_planet_within_border = {
				limit = {
					is_star = yes
				}
				save_event_target_as = colorscience_divination_planet
			}
		}
	}

	option = {
		name = UNDERSTOOD
		event_target:colorscience_situation = {
			add_situation_progress = 30
		}
		event_target:colorscience_divination_planet = {
			add_anomaly = {
				target = root.owner
				category = STAR_RESONANCE_CAT
			}
		}
	}
}

# Terminal Orbit - anomaly.2570 #

situation_event = {
	id = enclave.5185
	title = enclave.5150.name
	desc = enclave.5150.desc
	picture = GFX_evt_surreal_visions
	show_sound = event_mystic_reveal
	location = event_target:terminal_divination_planet
	situation = this
	is_triggered_only = yes

	trigger = {
		NOT = {
			has_situation_flag = divination_occurring
		}
		situation_progress >= 15
		owner = {
			NOT = {
				has_country_flag = terminal_divination_flag
			}
		}
	}

	immediate = {
		set_situation_flag = divination_occurring
		save_event_target_as = terminal_situation
		owner = {
			set_country_flag = terminal_divination_flag
			random_planet_within_border = {
				limit = {
					is_planet_class = pc_gas_giant
				}
				save_event_target_as = terminal_divination_planet
			}
		}
	}

	option = {
		name = UNDERSTOOD

		event_target:terminal_divination_planet = {
			add_anomaly = {
				target = root.owner
				category = terminal_gasgiant_category
			}
		}
	}
}

# Hero Redivivus - Divination - Sign of the Visitor

situation_event = {
	id = enclave.5190
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		NOT = {
			has_situation_flag = divination_occurring
		}
		owner = {
			NOR = {
				has_country_flag = redivivus_flag
				is_gestalt = yes
				is_machine_empire = yes
			}
		}
	}

	immediate = {
		set_situation_flag = divination_occurring
		save_event_target_as = redivivus_situation
		owner = {
			create_leader = {
				class = commander
				species = owner_main_species
				name = random
				skill = 3
				traits = {
					trait = leader_trait_erudite
				}
				effect = {
					save_event_target_as = hero_redivivus
					exile_leader_as = redivivus
				}
			}
			random_owned_planet = {
				limit = {
					is_homeworld = yes
					original_owner = yes
				}
				planet_event = { id = enclave.5195 }
				set_planet_flag = redivivus_planet
			}
		}
	}
}

planet_event = {
	id = enclave.5195
	title = "enclave.5195.name"
	desc = "enclave.5195.desc"
	picture = GFX_evt_shroudwalker_teachers
	show_sound = evn_ove_shroudwalker_apprentice
	location = ROOT
	situation = from
	is_triggered_only = yes

	pre_triggers = {
		has_owner = yes
		is_homeworld = yes
		original_owner = yes
		has_ground_combat = no
	}

	immediate = {
		owner = {
			set_country_flag = redivivus_flag
		}
	}

	option = {
		name = enclave.5195.a
		hidden_effect = {
			enable_special_project = {
				name = "REDIVIVUS_PROJECT"
				location = this
				owner = root
			}
		}
	}
}

planet_event = {
	id = enclave.5200
	title = "enclave.5200.name"
	desc = "enclave.5200.desc"
	picture = GFX_evt_medieval_alien_civilization
	show_sound = event_default
	location = ROOT
	is_triggered_only = yes

	pre_triggers = {
		has_owner = yes
		is_homeworld = yes
		original_owner = yes
		has_ground_combat = no
	}

	option = {
		name = enclave.5200.a
		hidden_effect = {
			add_modifier = {
				modifier = hero_redivivus
				days = 1080
			}
		}
	}
}

####################
# DIVINATION EVENTS
####################

# Shattered Frontier
# Via divination_locus | owner = country
situation_event = {
	id = enclave.5500
	title = enclave.5500.name
	desc = enclave.5500.desc
	picture = GFX_evt_satellite_in_orbit
	show_sound = event_yellow_alert
	location = event_target:shattered_frontier_planet
	situation = this
	is_triggered_only = yes

	trigger = {
		NOT = {
			has_situation_flag = divination_occurring
		}
		situation_progress >= 50
		owner = {
			is_ai = no
			NOR = {
				has_country_flag = divination_shattered_frontier
				has_origin = origin_tree_of_life
				has_origin = origin_doomsday
			}
			any_owned_planet = {
				is_homeworld = no
				is_capital = no
				is_colony = yes
				original_owner = yes
				has_ground_combat = no
				is_occupied_flag = no
				is_under_colonization = no
				NOR = {
					is_planet_class = pc_habitat
					has_planet_flag = shattered_frontier_planet
					has_modifier = penal_colony
					has_modifier = resort_colony
				}
				count_owned_pop = {
					count > 4
				}
			}
		}
	}

	immediate = {
		set_situation_flag = divination_occurring
		save_event_target_as = divination_situation
		owner = {
			random_owned_planet = {
				limit = {
					is_homeworld = no
					is_capital = no
					is_colony = yes
					original_owner = yes
					has_ground_combat = no
					is_occupied_flag = no
					NOR = {
						is_planet_class = pc_habitat
						has_planet_flag = shattered_frontier_planet
						has_modifier = penal_colony
						has_modifier = resort_colony
					}
					count_owned_pop = {
						count > 4
					}
				}
				set_planet_flag = colony_event
				set_planet_flag = shattered_frontier_planet
				save_event_target_as = shattered_frontier_planet
			}
			set_country_flag = divination_shattered_frontier
		}
	}

	option = {
		name = enclave.5500.a
		event_target:shattered_frontier_planet = {
			enable_special_project = {
				name = SHATTERED_FRONTIER_ANOMALY
				owner = owner
				location = this
			}
		}
	}
}
#Anomaly collapses (project cancelled)
planet_event = {
	id = enclave.5501
	title = enclave.5501.name
	desc = {
		trigger = {
			owner = { is_gestalt = no }
		}
		text = enclave.5501.desc
	}
	desc = {
		trigger = {
			owner = { is_gestalt = yes }
		}
		text = enclave.5501.gestalt.desc
	}
	picture = GFX_evt_ship_in_orbit
	show_sound = event_yellow_alert
	location = root
	situation = event_target:divination_situation
	is_triggered_only = yes

	option = {
		name = CURSES
		trigger = {
			owner = { is_gestalt = no }
		}
	}
	option = {
		name = WORRYING
		trigger = {
			owner = { is_gestalt = yes }
		}
	}
	option = {
		name = CURIOUS
	}

	after = {
		add_planet_devastation = 5
		if = {
			limit = {
				hidden:owner = { is_gestalt = yes }
			}
			add_modifier = {
				modifier = "shattered_frontier_deviancy"
				days = -1
			}
		}
		else = {
			add_modifier = {
				modifier = "shattered_frontier_looting"
				days = -1
			}
		}
		hidden_effect = {
			planet_event = {
				id = enclave.5502
				days = 15
				random = 15
			}
		}
	}
}
#Colony becomes riotous/unsettled
planet_event = {
	id = enclave.5502
	title = enclave.5502.name
	desc = {
		trigger = {
			owner = { is_gestalt = no }
		}
		text = enclave.5502.desc
	}
	desc = {
		trigger = {
			owner = { is_gestalt = yes }
		}
		text = enclave.5502.gestalt.desc
	}
	picture = {
		trigger = {
			owner = { is_gestalt = no }
		}
		picture = GFX_evt_burning_city
	}
	picture = {
		trigger = {
			owner = { is_gestalt = yes }
		}
		picture = GFX_evt_sabotaged_ship
	}
	show_sound = event_planetary_riot
	location = root
	situation = event_target:divination_situation
	is_triggered_only = yes

	immediate = {
		owner = {
			abort_special_project = { type = SHATTERED_FRONTIER_ANOMALY } #no turning back
		}
		add_planet_devastation = 5
	}

	#Wait it out
	option = {
		name = enclave.5502.a
		trigger = {
			owner = { is_gestalt = no }
		}
		custom_tooltip = enclave.5502.a.tt
	}
	option = {
		name = enclave.5502.gestalt.a
		trigger = {
			owner = { is_gestalt = yes }
		}
		custom_tooltip = enclave.5502.gestalt.a.tt
	}
	#Wait, but apply social benefits
	option = {
		name = enclave.5502.b
		trigger = {
			owner = { is_gestalt = no }
		}
		allow = {
			owner = {
				resource_stockpile_compare = {
					resource = consumer_goods
					value >= 800
				}
			}
		}
		owner = {
			add_resource = { consumer_goods = 800 }
		}
		remove_modifier = shattered_frontier_looting
		add_modifier = {
			modifier = shattered_frontier_benefits
			days = 720
		}
	}
	#Sceptical lockdown
	option = {
		name = enclave.5502.c
		trigger = {
			owner = { is_gestalt = no }
		}
		remove_modifier = shattered_frontier_looting
		add_modifier = {
			modifier = shattered_frontier_lockdown
			days = 720
		}
	}
	option = {
		name = enclave.5502.gestalt.c
		trigger = {
			owner = { is_gestalt = yes }
		}
		allow = {
			owner = {
				resource_stockpile_compare = {
					resource = influence
					value >= 15
				}
			}
		}
		owner = {
			add_resource = { influence = -15 }
		}
		remove_modifier = shattered_frontier_looting
		if = {
			limit = {
				hidden:owner = { is_hive_empire = yes }
			}
			add_modifier = {
				modifier = shattered_frontier_lockdown_hive
				days = 720
			}
		}
		else = {
			add_modifier = {
				modifier = shattered_frontier_lockdown_machine
				days = 720
			}
		}
	}

	after = {
		custom_tooltip = enclave.5502.pop_removed
		hidden_effect = {
			random_owned_pop = {
				limit = {
					NOT = { is_pop_category = ruler }
				}
				kill_pop = yes
			}
			planet_event = {
				id = enclave.5503
				days = 360
				random = 360
			}
		}
	}
}
#Moment of Clarity (resolution)
planet_event = {
	id = enclave.5503
	title = enclave.5503.name
	desc = {
		trigger = {
			switch = {
				trigger = has_modifier
				shattered_frontier_looting = { text = enclave.5503.looting.desc }
				shattered_frontier_deviancy = { text = enclave.5503.gestalt.desc }
				shattered_frontier_benefits = { text = enclave.5503.benefits.desc }
				shattered_frontier_lockdown = { text = enclave.5503.lockdown.desc }
				shattered_frontier_lockdown_hive = { text = enclave.5503.gestalt.desc }
				shattered_frontier_lockdown_machine = { text = enclave.5503.gestalt.desc }
				default = { text = enclave.5503.looting.desc }
			}
		}
	}
	picture = GFX_evt_colony_settlement
	show_sound = event_mystic_reveal_light
	location = root
	situation = event_target:divination_situation
	is_triggered_only = yes

	option = {
		name = GOOD
		trigger = { has_modifier = shattered_frontier_looting }
		remove_modifier = shattered_frontier_looting
		custom_tooltip = POPS_ON_ROOT
		tooltip = {
			add_modifier = {
				modifier = shattered_frontier_pop_community
				days = -1
			}
		}
		hidden_effect = {
			every_owned_pop = {
				limit = {
					is_robot_pop = no
				}
				add_modifier = {
					modifier = shattered_frontier_pop_community
					days = -1
				}
			}
		}
	}
	option = {
		name = DOTDOTDOT
		trigger = { has_modifier = shattered_frontier_deviancy }
		remove_modifier = shattered_frontier_deviancy
	}
	option = {
		name = GOOD
		trigger = { has_modifier = shattered_frontier_benefits }
		remove_modifier = shattered_frontier_benefits
	}
	option = {
		name = enclave.5503.d
		trigger = { has_modifier = shattered_frontier_lockdown }
		remove_modifier = shattered_frontier_lockdown
	}
	option = {
		name = GOOD
		trigger = { has_modifier = shattered_frontier_lockdown_hive }
		remove_modifier = shattered_frontier_lockdown_hive
	}
	option = {
		name = GOOD
		trigger = { has_modifier = shattered_frontier_lockdown_machine }
		remove_modifier = shattered_frontier_lockdown_machine
	}
}
#Silhouette is revealed (50% researched)
planet_event = {
	id = enclave.5504
	title = enclave.5504.name
	desc = {
		trigger = {
			owner = { is_gestalt = no }
		}
		text = enclave.5504.desc
	}
	desc = {
		trigger = {
			owner = { is_gestalt = yes }
		}
		text = enclave.5504.gestalt.desc
	}
	picture = GFX_evt_ghost_ship
	show_sound = event_mystic_reveal
	location = root
	situation = event_target:divination_situation
	is_triggered_only = yes

	trigger = {
		NOT = { has_planet_flag = shattered_frontier_ship_appeared }
	}

	immediate = {
		set_planet_flag = shattered_frontier_ship_appeared #prevents this event in case the player cancels, then resumes research
		# create_ambient_object = {
		# 	type = shattered_frontier_ship
		# 	location = root
		# }
		# last_created_ambient_object = {
		# 	set_location = {
		# 		target = root
		# 		angle = 135
		# 	}
		# 	set_ambient_object_flag = shattered_frontier_ship
		# 	save_event_target_as = shattered_frontier_ship #only works here
		# }
	}

	option = {
		name = WORRYING
	}
	option = {
		name = INTRIGUING
		trigger = {
			owner = {
				NOT = { has_technology = tech_psionic_theory }
			}
		}
	}
	option = {
		name = enclave.5504.c
		trigger = {
			owner = { has_technology = tech_psionic_theory }
		}
	}

	after = {
		hidden_effect = {
			event_target:shattered_frontier_ship = {
				destroy_ambient_object = this
			}
		}
	}
}
#Project complete; unleash the Psi Storm
planet_event = {
	id = enclave.5505
	title = enclave.5505.name
	desc = {
		trigger = {
			owner = { is_gestalt = no }
		}
		text = enclave.5505.desc
	}
	desc = {
		trigger = {
			owner = { is_gestalt = yes }
		}
		text = enclave.5505.gestalt.desc
	}
	picture = GFX_evt_ghost_ship
	show_sound = event_wind_ruins
	location = root
	situation = event_target:divination_situation
	is_triggered_only = yes

	trigger = {
		exists = owner
	}

	immediate = {
		create_ambient_object = {
			type = shattered_frontier_ship
			location = root
		}
		last_created_ambient_object = {
			set_location = {
				target = root
				angle = 135
			}
			set_ambient_object_flag = shattered_frontier_object
			save_event_target_as = shattered_frontier_ship
		}
		create_ambient_object = {
			type = psi_storm_1
			location = root
		}
		last_created_ambient_object = {
			set_ambient_object_flag = shattered_frontier_object
			save_event_target_as = shattered_frontier_storm
			set_location = {
				target = prev
				distance = 0
				angle = random
			}
		}
		if = {
			limit = { has_moon = yes }
			every_moon = {
				limit = {
					colonizable_planet = no
					NOR = {
						is_planet_class = pc_shattered
						habitable_planet = yes
						is_planet_class = pc_habitat
					}
				}
				clear_planet_modifiers = yes
				clear_deposits = yes
				change_pc = pc_shrouded
				save_event_target_as = shrouded_moon
			}
		}
	}

	#Continue investigating
	option = {
		name = enclave.5505.a
		trigger = {
			owner = { is_gestalt = no }
		}
		add_modifier = {
			modifier = shattered_frontier_storm_mod
			days = -1
		}
		hidden_effect = {
			planet_event = {
				id = enclave.5510
				days = 40
				random = 20
			}
		}
	}
	option = {
		name = enclave.5505.gestalt.a
		trigger = {
			owner = { is_gestalt = yes }
		}
		add_modifier = {
			modifier = shattered_frontier_storm_mod
			days = -1
		}
		hidden_effect = {
			planet_event = {
				id = enclave.5510
				days = 40
				random = 20
			}
		}
	}
	#Cease prodding!
	option = {
		name = enclave.5505.b
		trigger = {
			owner = { is_gestalt = no }
		}
		add_modifier = {
			modifier = shattered_frontier_storm_mod
			days = -1
		}
		hidden_effect = {
			planet_event = {
				id = enclave.5506
				days = 20
				random = 20
			}
		}
	}
	option = {
		name = enclave.5505.b
		trigger = {
			owner = { is_gestalt = yes }
		}
		add_modifier = {
			modifier = shattered_frontier_storm_gestalt_mod
			days = -1
		}
		hidden_effect = {
			planet_event = {
				id = enclave.5506
				days = 20
				random = 20
			}
		}
	}
}
#Research backed off; the Psi Storm subsides
planet_event = {
	id = enclave.5506
	title = enclave.5506.name
	desc = {
		trigger = {
			owner = { is_gestalt = no }
		}
		text = enclave.5506.desc
	}
	desc = {
		trigger = {
			owner = { is_gestalt = yes }
		}
		text = enclave.5506.gestalt.desc
	}
	picture = GFX_evt_ship_in_orbit
	show_sound = event_power_down
	location = root
	situation = event_target:divination_situation
	is_triggered_only = yes

	trigger = {
		exists = owner
		original_owner = yes
	}

	immediate = {
		every_ambient_object = {
			limit = { has_ambient_object_flag = shattered_frontier_object }
			destroy_ambient_object = this
		}
	}

	option = {
		name = enclave.5506.a
		trigger = {
			owner = { is_gestalt = no }
		}
		add_modifier = {
			modifier = shattered_frontier_uncertain_future
			years = 30
		}
	}
	option = {
		name = DOTDOTDOT
		trigger = {
			owner = { is_gestalt = yes }
		}
		add_modifier = {
			modifier = shattered_frontier_uncertain_future_gestalt
			years = 15
		}
	}

	after = {
		remove_modifier = shattered_frontier_storm_mod
		add_planet_devastation = 15
		hidden_effect = {
			if = { #it can be removed in the meantime
				limit = { exists = event_target:divination_situation }
				event_target:divination_situation = {
					set_situation_flag = shattered_frontier_denied
				}
			}
		}
	}
}
#Research persisted; the Psi Storm is resolved
planet_event = {
	id = enclave.5510
	title = enclave.5510.name
	desc = {
		trigger = {
			owner = { is_gestalt = no }
		}
		text = enclave.5510.desc
	}
	desc = {
		trigger = {
			owner = { is_gestalt = yes }
		}
		text = enclave.5510.gestalt.desc
	}
	picture = GFX_evt_ship_in_orbit
	show_sound = event_mystic_reveal
	location = root
	situation = event_target:divination_situation
	is_triggered_only = yes

	trigger = {
		exists = owner
	}

	immediate = {
		event_target:shattered_frontier_storm = {
			destroy_ambient_object = this
		}
	}

	option = {
		name = ONSCREEN
		remove_modifier = shattered_frontier_storm_mod
		hidden_effect = {
			if = { #it can be removed in the meantime
				limit = { exists = event_target:divination_situation }
				event_target:divination_situation = {
					set_situation_flag = shattered_frontier_embraced
				}
			}
			owner = {
				if = {
					limit = { is_gestalt = yes }
					country_event = { id = enclave.5535 }
				}
				else = {
					country_event = { id = enclave.5515 }
				}
			}
		}
	}
}
#Dialog with the colony ship (regular empires) | from = planet
country_event = {
	id = enclave.5515
	title = enclave.5515.name
	is_triggered_only = yes
	diplomatic = yes
	picture_event_data = { room = no_video_feed_room }
	desc = enclave.5515.desc

	immediate = {
		#Create a temporary country for the colonists
		create_country = {
			name = "NAME_Shattered_Frontier"
			type = shroud_spirits
			auto_delete = no #cannot be auto-deleted, as they'll lack colonies
			flag = {
				icon = {
					category = "special"
					file = "unknown.dds"
				}
				background = {
					category = "backgrounds"
					file = "00_solid.dds"
				}
				colors = {
					"black"
					"null"
					"null"
					"null"
				}
			}
			ignore_initial_colony_error = yes
			effect = {
				save_event_target_as = shattered_frontier_country
				establish_communications_no_message = root
				set_graphical_culture = root
				set_faction_hostility = {
					target = root
					set_hostile = no
					set_neutral = no
					set_friendly = yes
				}
			}
		}
		#Create a leader to talk to
		if = {
			limit = {
				has_utopia = yes
				is_synthetic_empire = no
			}
			event_target:shattered_frontier_country = {
				create_leader = {
					class = official
					species = root.species
					name = random
					skill = 2
					traits = {
						trait = leader_trait_psionic
						trait = leader_trait_erudite
					}
					event_leader = yes
					effect = {
						set_leader_flag = shattered_frontier_official
						save_event_target_as = shattered_frontier_official
					}
				}
			}
		}
		else_if = {
			limit = {
				has_utopia = yes
				is_synthetic_empire = yes
			}
			event_target:shattered_frontier_country = {
				create_leader = {
					class = official
					species = root.species
					name = random
					skill = 2
					traits = {
						trait = leader_trait_synthetic
						trait = leader_trait_erudite
					}
					event_leader = yes
					effect = {
						set_leader_flag = shattered_frontier_official
						save_event_target_as = shattered_frontier_official
					}
				}
			}
		}
		else = {
			event_target:shattered_frontier_country = {
				create_leader = {
					class = official
					species = root.species
					name = random
					skill = 3
					traits = {
						trait = leader_trait_erudite
					}
					event_leader = yes
					effect = {
						set_leader_flag = shattered_frontier_official
						save_event_target_as = shattered_frontier_official
					}
				}
			}
		}
		#Swap the ghost colony ship for a real one
		event_target:shattered_frontier_ship = {
			destroy_ambient_object = this
		}
		create_fleet = {
			name = random
			settings = { spawn_debris = no }
			effect = {
				set_owner = event_target:shattered_frontier_country
				create_ship = {
					name = "NAME_Unknown"
					random_existing_design = colonizer
					colonizer_species = root
					graphical_culture = root
				}
				set_location = {
					target = event_target:shattered_frontier_planet
					angle = 135
				}
				save_event_target_as = shattered_frontier_colony_ship
			}
		}
	}

	option = {
		name = enclave.5515.a
		icon = {
			icon = GFX_option_icon_friendly
			text = dialog_friendly_tt
		}
		hidden_effect = {
			set_country_flag = shattered_frontier_dialog_friendly
		}
	}
	option = {
		name = enclave.5515.b
		icon = {
			icon = GFX_option_icon_hostile
			text = dialog_hostile_tt
		}
		hidden_effect = {
			set_country_flag = shattered_frontier_dialog_hostile
		}
	}

	after = {
		hidden_effect = {
			country_event = { id = enclave.5516 }
		}
	}
}
country_event = {
	id = enclave.5516
	title = enclave.5515.name
	is_triggered_only = yes
	diplomatic = yes
	picture_event_data = { room = no_video_feed_room }
	desc = enclave.5516.desc

	immediate = { }

	option = {
		name = enclave.5516.a
		icon = {
			icon = GFX_option_icon_isolationist
			text = dialog_wary_tt
		}
		hidden_effect = {
			country_event = { id = enclave.5525 } #'Wary' path
		}
	}
	option = {
		name = enclave.5516.b
		icon = {
			icon = GFX_option_icon_friendly
			text = dialog_friendly_tt
		}
		hidden_effect = {
			remove_country_flag = shattered_frontier_dialog_hostile
			set_country_flag = shattered_frontier_dialog_friendly
			country_event = { id = enclave.5520 } #'Friendly' path
		}
	}
	option = {
		name = enclave.5516.c
		icon = {
			icon = GFX_option_icon_hostile
			text = dialog_hostile_tt
		}
		trigger = { has_country_flag = shattered_frontier_dialog_hostile }
		hidden_effect = {
			country_event = { id = enclave.5530 } #'Hostile' path
		}
	}
}
#Colony Ship identity is revealed (friendly & wary)
country_event = {
	id = enclave.5520
	title = enclave.5515.name
	diplomatic = yes
	picture_event_data = {
		portrait = event_target:shattered_frontier_official
		graphical_culture = root
		room = ethic_spaceship_room
	}
	is_triggered_only = yes
	desc = {
		trigger = { has_country_flag = shattered_frontier_dialog_friendly }
		text = enclave.5520.friendly.desc
	}
	desc = {
		trigger = {
			NOT = { has_country_flag = shattered_frontier_dialog_friendly }
		}
		text = enclave.5520.wary.desc
	}

	immediate = {
		event_target:shattered_frontier_colony_ship = {
			set_name = "NAME_Mended_Frontier"
		}
	}

	#Receive colony ship; start debrief
	option = {
		name = enclave.5520.a
		icon = {
			icon = GFX_option_icon_friendly
			text = dialog_friendly_tt
		}
		trigger = { has_country_flag = shattered_frontier_dialog_friendly }
		event_target:shattered_frontier_colony_ship = {
			set_owner = root
		}
		hidden_effect = {
			country_event = { id = enclave.5521 }
		}
	}
	#Ask to keep distance; receive debrief
	option = {
		name = enclave.5520.b
		icon = {
			icon = GFX_option_icon_isolationist
			text = dialog_wary_tt
		}
		hidden_effect = {
			country_event = { id = enclave.5525 }
		}
	}

	after = {
		hidden_effect = {
			remove_country_flag = shattered_frontier_dialog_friendly
			remove_country_flag = shattered_frontier_dialog_hostile
		}
	}
}
#Friendly path
country_event = {
	id = enclave.5521
	base = enclave.5520
	desc_clear = yes
	option_clear = yes
	desc = enclave.5521.desc

	immediate = { }

	option = {
		name = enclave.5521.a
		hidden_effect = {
			country_event = { id = enclave.5522 }
		}
	}
}
country_event = {
	id = enclave.5522
	base = enclave.5520
	desc_clear = yes
	option_clear = yes
	desc = enclave.5522.desc

	immediate = { }

	option = {
		name = enclave.5522.a
		clone_leader = {
			target = event_target:shattered_frontier_official
			effect = {
				save_event_target_as = shattered_frontier_official
			}
		}
	}
}
#Neutral path
country_event = {
	id = enclave.5525
	title = enclave.5515.name
	diplomatic = yes
	picture_event_data = {
		portrait = event_target:shattered_frontier_official
		graphical_culture = root
		room = ethic_spaceship_room
	}
	is_triggered_only = yes
	desc = enclave.5521.desc

	immediate = {
		event_target:shattered_frontier_colony_ship = {
			set_name = "NAME_Mended_Frontier"
		}
	}

	option = {
		name = enclave.5525.a
		hidden_effect = {
			country_event = { id = enclave.5526 }
		}
	}
}
country_event = {
	id = enclave.5526
	base = enclave.5525
	desc_clear = yes
	option_clear = yes
	desc = enclave.5526.desc

	immediate = { }

	option = {
		name = enclave.5526.a
		hidden_effect = {
			event_target:shattered_frontier_colony_ship = {
				shattered_frontier_colony_depart = yes
			}
		}
	}
	option = {
		name = enclave.5526.b
		hidden_effect = {
			event_target:shattered_frontier_colony_ship = {
				shattered_frontier_colony_depart = yes
			}
		}
	}
}
#Hostile path
country_event = {
	id = enclave.5530
	title = enclave.5515.name
	diplomatic = yes
	picture_event_data = {
		portrait = event_target:shattered_frontier_official
		graphical_culture = root
		room = ethic_spaceship_room
	}
	is_triggered_only = yes
	desc = enclave.5530.desc

	immediate = {
		event_target:shattered_frontier_country = {
			set_faction_hostility = {
				target = root
				set_neutral = yes
			}
		}
	}

	#Begone!
	option = {
		name = {
			trigger = { is_spiritualist = no }
			text = enclave.5530.a
		}
		name = {
			trigger = { is_spiritualist = yes }
			text = enclave.5530.a.spirit
		}
		icon = {
			icon = GFX_option_icon_isolationist
			text = dialog_wary_tt
		}
		hidden_effect = {
			country_event = { id = enclave.5531 }
		}
	}
	#Battlestations!
	option = {
		name = enclave.5530.b
		icon = {
			icon = GFX_option_icon_hostile
			text = dialog_hostile_tt
		}
		hidden_effect = {
			event_target:shattered_frontier_country = {
				set_faction_hostility = {
					target = root
					set_hostile = yes
				}
			}
		}
	}
}
country_event = {
	id = enclave.5531
	base = enclave.5530
	desc_clear = yes
	option_clear = yes
	desc = enclave.5531.desc

	immediate = { }

	option = {
		name = END_TRANSMISSION
		default_hide_option = yes
		hidden_effect = {
			event_target:shattered_frontier_colony_ship = {
				shattered_frontier_colony_depart = yes
			}
		}
	}
}
#Dialog with the colony ship (gestalt empires) | from = planet
country_event = {
	id = enclave.5535
	title = enclave.5535.name
	is_triggered_only = yes
	diplomatic = yes
	picture_event_data = { room = no_video_feed_room }
	desc = enclave.5535.desc

	trigger = {
		is_gestalt = yes
	}

	immediate = {
		#Create a temporary country for the colonists
		create_country = {
			name = "NAME_Shattered_Frontier"
			type = shroud_spirits
			auto_delete = no #cannot be auto-deleted, as they'll lack colonies
			flag = {
				icon = {
					category = "special"
					file = "unknown.dds"
				}
				background = {
					category = "backgrounds"
					file = "00_solid.dds"
				}
				colors = {
					"black"
					"null"
					"null"
					"null"
				}
			}
			ignore_initial_colony_error = yes
			effect = {
				save_event_target_as = shattered_frontier_country
				establish_communications_no_message = root
				set_graphical_culture = root
				set_faction_hostility = {
					target = root
					set_hostile = no
					set_neutral = no
					set_friendly = yes
				}
			}
		}
		#Create a leader to talk to (hives)
		if = {
			limit = {
				is_hive_empire = yes
			}
			event_target:shattered_frontier_country = {
				create_leader = {
					class = official
					species = root.species
					name = random
					skill = 1
					traits = {
						trait = leader_trait_psionic
					}
					event_leader = yes
					effect = {
						set_leader_flag = shattered_frontier_official
						save_event_target_as = shattered_frontier_official
					}
				}
			}
		}
		#Create a leader to talk to (machines)
		else = {
			event_target:shattered_frontier_country = {
				create_leader = {
					class = official
					species = root.species
					name = random
					skill = 1
					traits = {
						trait = leader_trait_synthetic
					}
					event_leader = yes
					effect = {
						set_leader_flag = shattered_frontier_official
						save_event_target_as = shattered_frontier_official
					}
				}
			}
		}
		#Swap the ghost colony ship for a real one
		event_target:shattered_frontier_ship = {
			destroy_ambient_object = this
		}
		create_fleet = {
			name = random
			settings = { spawn_debris = no }
			effect = {
				set_owner = event_target:shattered_frontier_country
				create_ship = {
					name = "NAME_Unknown"
					random_existing_design = colonizer
					colonizer_species = root
					graphical_culture = root
				}
				set_location = {
					target = event_target:shattered_frontier_planet
					angle = 135
				}
				save_event_target_as = shattered_frontier_colony_ship
			}
		}
	}

	option = {
		name = enclave.5535.a
		icon = {
			icon = GFX_option_icon_hostile
			text = dialog_hostile_tt
		}
	}
	option = {
		name = enclave.5535.b
		icon = {
			icon = GFX_option_icon_friendly
			text = dialog_friendly_tt
		}
	}

	after = {
		hidden_effect = {
			country_event = { id = enclave.5536 }
		}
	}
}
country_event = {
	id = enclave.5536
	title = enclave.5535.name
	is_triggered_only = yes
	diplomatic = yes
	picture_event_data = { room = no_video_feed_room }
	desc = enclave.5536.desc

	immediate = { }

	option = {
		name = enclave.5536.a
		icon = {
			icon = GFX_option_icon_hostile
			text = dialog_hostile_tt
		}
		trigger = { has_country_flag = shattered_frontier_dialog_hostile }
		hidden_effect = {
			country_event = { id = enclave.5550 } #'Hostile' path
		}
	}
	option = {
		name = enclave.5536.b
		icon = {
			icon = GFX_option_icon_friendly
			text = dialog_friendly_tt
		}
		hidden_effect = {
			country_event = { id = enclave.5540 } #'Friendly/wary' path
		}
	}
}
#Colony Ship is revealed (friendly/wary)
country_event = {
	id = enclave.5540
	title = enclave.5535.name
	diplomatic = yes
	picture_event_data = {
		portrait = event_target:shattered_frontier_official
		graphical_culture = root
		room = ethic_spaceship_room
	}
	is_triggered_only = yes
	desc = enclave.5540.desc

	immediate = {
		event_target:shattered_frontier_colony_ship = {
			set_name = "NAME_Mended_Frontier"
		}
	}

	option = {
		name = DOTDOTDOT
		icon = {
			icon = GFX_option_icon_isolationist
			text = dialog_wary_tt
		}
		hidden_effect = {
			country_event = { id = enclave.5541 }
		}
	}
	option = {
		name = enclave.5540.b
		icon = {
			icon = GFX_option_icon_isolationist
			text = dialog_wary_tt
		}
		hidden_effect = {
			country_event = { id = enclave.5541 }
		}
	}
}
country_event = {
	id = enclave.5541
	base = enclave.5540
	desc_clear = yes
	option_clear = yes
	desc = enclave.5541.desc

	immediate = { }

	option = {
		name = enclave.5541.a
		icon = {
			icon = GFX_option_icon_isolationist
			text = dialog_wary_tt
		}
		hidden_effect = {
			event_target:shattered_frontier_colony_ship = {
				shattered_frontier_colony_depart = yes
			}
		}
	}
	option = {
		name = enclave.5541.b
		icon = {
			icon = GFX_option_icon_isolationist
			text = dialog_wary_tt
		}
		hidden_effect = {
			event_target:shattered_frontier_colony_ship = {
				shattered_frontier_colony_depart = yes
			}
		}
	}
	option = {
		name = enclave.5541.c
		icon = {
			icon = GFX_option_icon_hostile
			text = dialog_hostile_tt
		}
		hidden_effect = {
			event_target:shattered_frontier_country = {
				set_faction_hostility = {
					target = root
					set_hostile = yes
				}
			}
		}
	}
}
#Hostile path
country_event = {
	id = enclave.5550
	title = enclave.5535.name
	diplomatic = yes
	picture_event_data = {
		portrait = event_target:shattered_frontier_official
		graphical_culture = root
		room = ethic_spaceship_room
	}
	is_triggered_only = yes
	desc = enclave.5550.desc

	immediate = {
		event_target:shattered_frontier_country = {
			set_faction_hostility = {
				target = root
				set_neutral = yes
			}
		}
	}

	#Begone!
	option = {
		name = enclave.5550.a
		icon = {
			icon = GFX_option_icon_isolationist
			text = dialog_wary_tt
		}
		hidden_effect = {
			country_event = { id = enclave.5551 }
		}
	}
	#Attack!
	option = {
		name = enclave.5550.b
		icon = {
			icon = GFX_option_icon_hostile
			text = dialog_hostile_tt
		}
		hidden_effect = {
			event_target:shattered_frontier_country = {
				set_faction_hostility = {
					target = root
					set_hostile = yes
				}
			}
		}
	}
}
country_event = {
	id = enclave.5551
	base = enclave.5550
	desc_clear = yes
	option_clear = yes
	desc = enclave.5551.desc

	immediate = { }

	option = {
		name = END_TRANSMISSION
		default_hide_option = yes
		hidden_effect = {
			event_target:shattered_frontier_colony_ship = {
				shattered_frontier_colony_depart = yes
			}
		}
	}
}

#Hidden Event to make sure at least one Visitors event is selected for per Divination
situation_event = {
	id = enclave.5555
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		situation_progress >= 90
		NOT = {
			has_situation_flag = divination_occurring
		}
	}

	immediate = {
		fire_on_action = {
			on_action = on_shroudwalker_divination_visitors_situation
		}
	}
}

#Hidden Event to make sure at least one Locus event is selected for per Divination
situation_event = {
	id = enclave.5556
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		situation_progress >= 90
		NOT = {
			has_situation_flag = divination_occurring
		}
	}

	immediate = {
		fire_on_action = {
			on_action = on_shroudwalker_divination_locus_situation
		}
	}
}

#Fallback Event in case no event is selected for per Divination - Money Back!
situation_event = {
	id = enclave.5557
	title = "enclave.5557.name"
	desc = "enclave.5557.desc"
	diplomatic = yes
	custom_gui = "enclave_artist_window"
	custom_gui_option = "enclave_artist_option"
	picture_event_data = {
		portrait = event_target:shroudwalker_enclave_country
		room = shroudwalkers_room
	}
	location = event_target:shroudwalker_enclave_system

	is_triggered_only = yes

	option = {
		name = enclave.5557.a
		owner = {
			add_resource = { energy = 1000 }
		}
	}
	after = { destroy_situation = this }
}

#Wayward Pilgrims
situation_event = {
	id = enclave.5560
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		NOT = {
			has_situation_flag = divination_occurring
		}
		owner = {
			NOR = {
				has_country_flag = wayward_pilgrims_flag
				has_country_flag = active_divination_event
			}
		}
	}

	immediate = {
		set_situation_flag = divination_occurring
		save_event_target_as = pilgrims_divination_situation
		owner = {
			set_country_flag = active_divination_event
			country_event = {
				id = enclave.5566
			}
		}
	}
}

country_event = {
	id = enclave.5566
	title = "enclave.5566.name"
	desc = "enclave.5566.desc"
	picture = GFX_evt_cargoship_caravan
	show_sound = event_default
	location = ROOT
	situation = from #this will only do anything if from is actually a situation
	is_triggered_only = yes

	immediate = {
		set_country_flag = active_divination_event
		set_country_flag = wayward_pilgrims_flag
	}

	option = {
		name = ACKNOWLEDGED
		hidden_effect = {
			country_event = {
				id = enclave.5565
			}
		}
	}
}

#Incoming transmission
country_event = {
	id = enclave.5565
	title = "enclave.5566.name"
	desc = "enclave.5565.desc"
	trackable = yes

	diplomatic = yes

	situation = from #this will only do anything if from is actually a situation
	is_triggered_only = yes

	immediate = {
		set_country_flag = wayward_pilgrims_flag
	}

	picture_event_data = {
		room = no_video_feed_room
	}

	option = {
		name = enclave.5565.a
		event_target:pilgrims_divination_situation = {
			add_situation_progress = 20
		}
		add_resource = {
			food = -2000
			influence = -50
		}
		hidden_effect = {
			country_event = {
				id = enclave.5570
				days = 180
				random = 20
			}
		}
		if = {
			limit = {
				owner = {
					is_xenophile = yes
				}
			}
			add_modifier = {
				modifier = wayward_pilgrim_00
				days = -1
			}
		}
		else_if = {
			limit = {
				owner = {
					is_xenophobe = yes
				}
			}
			add_modifier = {
				modifier = wayward_pilgrim_01
				days = -1
			}
		}
	}
	option = {
		name = enclave.5565.b
		event_target:pilgrims_divination_situation = {
			add_situation_progress = 15
		}
		hidden_effect = {
			country_event = {
				id = enclave.5575
				days = 120
				random = 20
			}
		}
		if = {
			limit = {
				owner = {
					is_xenophile = yes
				}
			}
			add_modifier = {
				modifier = wayward_pilgrim_02
				days = -1
			}
		}
		else_if = {
			limit = {
				owner = {
					is_xenophobe = yes
				}
			}
			add_modifier = {
				modifier = wayward_pilgrim_03
				days = -1
			}
		}
	}
	option = {
		name = enclave.5565.c
		hidden_effect = {
			country_event = {
				id = enclave.5575
				days = 150
				random = 20
			}
		}
		if = {
			limit = {
				owner = {
					is_xenophile = yes
				}
			}
			add_modifier = {
				modifier = wayward_pilgrim_04
				days = -1
			}
		}
		else_if = {
			limit = {
				owner = {
					is_xenophobe = yes
				}
			}
			add_modifier = {
				modifier = wayward_pilgrim_05
				days = -1
			}
		}
	}
}

#Wayward Pilgrims - Follow Up Event (A Chain)
country_event = {
	id = enclave.5570
	title = "enclave.5570.name"
	desc = "enclave.5570.desc"
	trackable = yes

	diplomatic = yes

	situation = from #this will only do anything if from is actually a situation
	is_triggered_only = yes

	picture_event_data = {
		room = no_video_feed_room
	}

	option = {
		name = enclave.5570.a
		event_target:pilgrims_divination_situation = {
			add_situation_progress = 15
		}
		add_resource = {
			energy = -1000
			influence = -50
		}
		hidden_effect = {
			country_event = {
				id = enclave.5571
				days = 180
				random = 20
			}
		}
	}

	option = {
		name = enclave.5570.b
		owner = {
			remove_modifier = wayward_pilgrim_00
			remove_modifier = wayward_pilgrim_01
		}
		country_event = {
			id = enclave.5575
			days = 200
			random = 20
		}
	}
}

country_event = {
	id = enclave.5571
	title = "enclave.5571.name"
	desc = "enclave.5571.desc"
	trackable = yes

	diplomatic = yes

	situation = from #this will only do anything if from is actually a situation
	is_triggered_only = yes

	picture_event_data = {
		room = no_video_feed_room
	}

	immediate = {
		remove_modifier = wayward_pilgrim_00
		remove_modifier = wayward_pilgrim_01
	}

	option = {
		name = UNDERSTOOD
		add_modifier = {
			modifier = wayward_pilgrim_06
			days = 1801
		}
	}
}

#Wayward Pilgrims - Follow Up Event (B / C Chains)
country_event = {
	id = enclave.5575
	title = "enclave.5575.name"
	desc = "enclave.5575.desc"
	picture = GFX_evt_sabotaged_ship
	show_sound = event_screams
	location = ROOT
	situation = from #this will only do anything if from is actually a situation
	is_triggered_only = yes

	immediate = {
		remove_modifier = wayward_pilgrim_02
		remove_modifier = wayward_pilgrim_03
		remove_modifier = wayward_pilgrim_04
		remove_modifier = wayward_pilgrim_05
		random_system_within_border = {
			save_event_target_as = wayward_pilgrims_system
			create_ambient_object = {
				type = "psi_storm_1"
				location = event_target:wayward_pilgrims_system
			}
			last_created_ambient_object = {
				set_ambient_object_flag = wayward_psi_storm
			}
		}
	}

	option = {
		name = enclave.5575.a
		hidden_effect = {
			country_event = {
				id = enclave.5576
				days = 1801
			}
		}
		add_modifier = {
			modifier = wayward_pilgrim_07
			days = 1801
		}
	}
}

#Wayward Pilgrims - Hidden Event to Remove Psi Storm

country_event = {
	id = enclave.5576
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		event_target:wayward_pilgrims_system = {
			random_system_ambient_object = {
				limit = {
					has_ambient_object_flag = wayward_psi_storm
				}
				destroy_ambient_object = this
			}
		}
	}
}

## Strange Manifestations - Shroud Tunnel Event

fleet_event = {
	id = enclave.6000
	title = "enclave.6000.name"
	desc = {
		trigger = {
			hidden:owner = {
				switch = {
					trigger = has_ethic
					ethic_xenophile = { text = enclave.6000.a.desc }
					ethic_xenophobe = { text = enclave.6000.b.desc }
					ethic_gestalt_consciousness = {
						if = {
							limit = { is_machine_empire = yes }
							text = enclave.6000.d.desc
						}
						else = { text = enclave.6000.e.desc }
					}
					default = { text = enclave.6000.a.desc }
				}
			}
		}
	}
	picture = GFX_evt_shroud_tunnel
	show_sound = event_mystic_reveal
	location = FROM

	is_triggered_only = yes

	trigger = {
		exists = leader
		leader = {
			NOR = {
				has_leader_flag = renowned_leader
				has_leader_flag = legendary_leader
			}
			has_chosen_one_leader_trait = no
		}
		NOR = {
			owner = { has_country_flag = strange_manifestations_cooldown }
			has_fleet_flag = strange_manifestations
		}
	}

	immediate = {
		set_fleet_flag = strange_manifestations
		owner = {
			set_timed_country_flag = {
				flag = strange_manifestations_cooldown
				days = 720
			}
		}
		if = {
			limit = {
				exists = leader
				leader = {
					species = {
						species_portrait = mol12
					}
				}
			}
			leader = {
				change_leader_portrait = mam_rat
			}
		}
		else = {
			leader = {
				change_leader_portrait = mol12
			}
		}
	}

	option = {
		name = INTERESTING
		trigger = {
			owner = {
				is_homicidal = no
			}
		}
		leader = { add_experience = 200 }
		ai_chance = {
			factor = 1
		}
	}

	option = {
		name = enclave.6000b.a
		trigger = {
			owner = {
				has_ethic = ethic_xenophobe
			}
		}
		leader = {
			save_event_target_as = dissected_leader
			exile_leader_as = dissected_leader
		}
		owner = {
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier1researchreward
				min = @tier1researchmin
				max = @tier1researchmax
			}
		}
	}

	option = {
		name = enclave.6000b.b
		trigger = {
			owner = {
				has_ethic = ethic_fanatic_xenophobe
			}
		}
		leader = {
			save_event_target_as = dissected_leader
			exile_leader_as = dissected_leader
		}
		owner = {
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier1researchreward
				min = @tier1researchmin
				max = @tier1researchmax
			}
		}
	}

	option = {
		name = enclave.6000d.a
		trigger = {
			owner = {
				is_machine_empire = yes
			}
		}
		leader = {
			save_event_target_as = terminated_leader
			exile_leader_as = terminated_leader
		}
		owner = {
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier1researchreward
				min = @tier1researchmin
				max = @tier1researchmax
			}
		}
	}

	option = {
		name = enclave.6000e.a
		trigger = {
			owner = {
				has_ethic = ethic_gestalt_consciousness
				NOT = {is_machine_empire = yes }
			}
		}
		leader = {
			save_event_target_as = dissected_leader
			exile_leader_as = dissected_leader
		}
		owner = {
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier1researchreward
				min = @tier1researchmin
				max = @tier1researchmax
			}
		}
	}
}

## Mind Wipe - Shroud Tunnel Event ##

fleet_event = {
	id = enclave.6005
	title = "enclave.6005.name"
	desc = {
		trigger = {
			owner = {
				NOR = {
					is_hive_empire = yes
					is_machine_empire = yes
				}
			}
		}
		text = enclave.6005.a.desc
	}

	desc = {
		trigger = {
			owner = {
				is_hive_empire = yes
			}
		}
		text = enclave.6005.b.desc
	}

	desc = {
		trigger = {
			owner = {
				is_machine_empire = yes
			}
		}
		text = enclave.6005.c.desc
	}

	picture = GFX_evt_genetic_modification
	show_sound = event_mystic_reveal
	location = FROM

	is_triggered_only = yes

	trigger = {
		exists = leader
		NOR = {
			owner = { has_country_flag = mind_wipe_cooldown }
			has_fleet_flag = mind_wipe
		}
	}

	immediate = {
		set_fleet_flag = mind_wipe
		owner = {
			set_timed_country_flag = {
				flag = mind_wipe_cooldown
				days = 720
			}
		}
		if = {
			limit = {
				exists = leader
				leader = {
					NOR = {
						has_trait = leader_trait_admiral_mind_wipe_01
						has_trait = leader_trait_admiral_mind_wipe_02
						has_trait = leader_trait_general_mind_wipe_01
						has_trait = leader_trait_general_mind_wipe_02
						has_trait = leader_trait_scientist_mind_wipe_01
						has_trait = leader_trait_scientist_mind_wipe_02
						has_trait = leader_trait_ruler_mind_wipe_01
						has_trait = leader_trait_ruler_mind_wipe_02
						has_trait = gestalt_trait_commander_mind_wipe_01
						has_trait = gestalt_trait_commander_mind_wipe_02
						has_trait = gestalt_trait_general_mind_wipe_01
						has_trait = gestalt_trait_general_mind_wipe_02
					#	has_trait = gestalt_trait_scientist_mind_wipe_01
						has_trait = gestalt_trait_scientist_mind_wipe_02
						has_trait = gestalt_trait_ruler_mind_wipe_01
						has_trait = gestalt_trait_ruler_mind_wipe_02
					}
				}
			}
			root = {
				fleet_event = {
					id = enclave.6010
					days = 30
				}
			}
		}
	}

	option = {
		name = CURIOUS
	}
}

fleet_event = {
	id = enclave.6010
	title = "enclave.6010.name"
	desc = {
		trigger = {
			owner = {
				NOR = {
					is_hive_empire = yes
					is_machine_empire = yes
				}
			}
		}
		text = enclave.6010.a.desc
	}

	desc = {
		trigger = {
			owner = {
				is_hive_empire = yes
			}
		}
		text = enclave.6010.b.desc
	}

	desc = {
		trigger = {
			owner = {
				is_machine_empire = yes
			}
		}
		text = enclave.6010.c.desc
	}

	picture = GFX_evt_surreal_visions
	show_sound = event_mystic_reveal
	location = FROM

	is_triggered_only = yes

	trigger = {
		exists = leader
		if = {
			limit = {
				owner = {
					is_gestalt = no
				}
			}
			leader = {
				NOR = {
					has_trait = leader_trait_admiral_mind_wipe_01
					has_trait = leader_trait_admiral_mind_wipe_02
					has_trait = leader_trait_general_mind_wipe_01
					has_trait = leader_trait_general_mind_wipe_02
					has_trait = leader_trait_scientist_mind_wipe_01
					has_trait = leader_trait_scientist_mind_wipe_02
					has_trait = leader_trait_ruler_mind_wipe_01
					has_trait = leader_trait_ruler_mind_wipe_02
				}
			}
		}
		if = {
			limit = {
				owner = {
					is_gestalt = yes
				}
			}
			leader = {
				NOR = {
					has_trait = gestalt_trait_commander_mind_wipe_01
					has_trait = gestalt_trait_commander_mind_wipe_02
					has_trait = gestalt_trait_general_mind_wipe_01
					has_trait = gestalt_trait_general_mind_wipe_02
				#	has_trait = gestalt_trait_scientist_mind_wipe_01
					has_trait = gestalt_trait_scientist_mind_wipe_02
					has_trait = gestalt_trait_ruler_mind_wipe_01
					has_trait = gestalt_trait_ruler_mind_wipe_02
				}
			}
		}
	}

	option = {
		name = UNDERSTOOD
		if = {
			limit = {
				owner = {
					is_gestalt = no
				}
			}
			leader = {
				switch = {
					trigger = leader_class
					commander = {
						random_list = {
							2 = {
								add_trait = leader_trait_admiral_mind_wipe_01
							}
							2 = {
								add_trait = leader_trait_admiral_mind_wipe_02
							}
							2 = {
								add_trait = leader_trait_general_mind_wipe_01
							}
							2 = {
								add_trait = leader_trait_general_mind_wipe_02
							}
							1 = {
								add_trait = leader_trait_ruler_mind_wipe_01
							}
							1 = {
								add_trait = leader_trait_ruler_mind_wipe_02
							}
						}
					}
					scientist = {
						random_list = {
							4 = {
								add_trait = leader_trait_scientist_mind_wipe_01
							}
							4 = {
								add_trait = leader_trait_scientist_mind_wipe_02
							}
							1 = {
								add_trait = leader_trait_ruler_mind_wipe_01
							}
							1 = {
								add_trait = leader_trait_ruler_mind_wipe_02
							}
						}
					}
				}
			}
		}
		if = {
			limit = {
				owner = {
					is_gestalt = yes
				}
			}
			leader = {
				switch = {
					trigger = leader_class
					commander = {
						random_list = {
							1 = {
								add_trait = gestalt_trait_commander_mind_wipe_01
							}
							1 = {
								add_trait = gestalt_trait_commander_mind_wipe_02
							}
							1 = {
								add_trait = gestalt_trait_general_mind_wipe_01
							}
							1 = {
								add_trait = gestalt_trait_general_mind_wipe_02
							}
						}
					}
					scientist = {
						add_trait = gestalt_trait_scientist_mind_wipe_02
					}
				}
			}
		}
	}
}

country_event = {
	id = enclave.6015
	title = enclave.6015.name
	desc = enclave.6015.desc
	picture = GFX_evt_physics_research
	location = from

	is_triggered_only = yes

	option = {
		name = UNDERSTOOD
	}
}

#Dreamer's Wake - Shroud Tunnel Event
fleet_event = {
	id = enclave.6020
	title = "enclave.6020.name"
	desc = "enclave.6020.desc"
	picture = GFX_evt_shroud_tunnel
	show_sound = event_mystic_reveal
	location = FROM

	is_triggered_only = yes

	trigger = {
		owner = {
			NOT = {
				has_country_flag = dreamers_wake_cooldown
			}
		}
		is_ship_class = shipclass_science_ship
	}

	immediate = {
		owner = {
			set_timed_country_flag = {
				flag = dreamers_wake_cooldown
				days = 720
			}
		}
	}

	option = {
		name = WORRYING
		hidden_effect = {
			fleet_event = {
				id = enclave.6025
				days = 180
			}
		}
		if = {
			limit = {
				exists = leader
			}
			leader = {
				add_experience = 100
			}
		}
	}
}

fleet_event = {
	id = enclave.6025
	title = "enclave.6025.name"
	desc = "enclave.6025.desc"
	picture = GFX_evt_sapient_AI
	show_sound = event_mystic_reveal
	location = FROM

	is_triggered_only = yes

	option = {
		name = "enclave.6025.a"
		add_modifier = {
			modifier = embrace_dreamer
			days = -1
		}
	}

	option = {
		name = "enclave.6025.b"
		trigger = {
			owner = {
				is_spiritualist = yes
			}
		}
		owner = {
			add_modifier = {
				modifier = eliminate_dreamer
				days = 1080
			}
		}
	}
}

### Introduction Events
country_event = { # Shroudwalkers
	id = enclave.7000
	title = enclave.7000.title
	desc = enclave.7000.desc

	is_triggered_only = yes

	diplomatic = yes
	custom_gui = "enclave_artist_window"
	custom_gui_option = "enclave_artist_option"
	picture_event_data = {
		portrait = event_target:shroudwalker_enclave_country
		room = shroudwalkers_room
	}
	location = event_target:shroudwalker_enclave_system

	trigger = {
		is_ai = no
		NOT = { has_country_flag = shroudwalker_enclave_diplomacy_engaged }
		exists = event_target:shroudwalker_enclave_country
		NOR = {
			is_hostile = event_target:shroudwalker_enclave_country
			is_homicidal = yes
			has_communications = event_target:shroudwalker_enclave_country
		}
	}

	immediate = {
		hidden_effect = {
			set_country_flag = shroudwalker_enclave_diplomacy_engaged
			establish_communications_no_message = event_target:shroudwalker_enclave_country
			every_system = {
				limit = { has_star_flag = shroudwalker_enclave_system }
				prev = { set_visited = prev }
			}
		}
	}

	option = {
		name = enclave.7000.a
	}
}

country_event = { # Salvagers
	id = enclave.7005
	title = enclave.7005.title
	desc = enclave.7005.desc

	is_triggered_only = yes

	diplomatic = yes
	custom_gui = "enclave_salvager_window"
	custom_gui_option = "enclave_salvager_option"
	picture_event_data = {
		portrait = event_target:salvager_enclave_country
		room = salvagers_room
	}
	location = event_target:salvager_enclave_system

	trigger = {
		is_ai = no
		NOR = {
			has_country_flag = salvager_enclave_diplomacy_engaged
			has_country_flag = cosmogenesis_empire_has_won
		}
		exists = event_target:salvager_enclave_country
		NOR = {
			is_hostile = event_target:salvager_enclave_country
			is_homicidal = yes
			has_communications = event_target:salvager_enclave_country
		}
		OR = {
			has_technology = tech_battleships
			has_technology = tech_starbase_5
			has_technology = tech_mega_engineering
			AND = {
				has_technology = tech_habitat_1
				has_void_dweller_origin = no
			}
		}
	}

	immediate = {
		set_country_flag = salvager_enclave_diplomacy_engaged
		establish_communications_no_message = event_target:salvager_enclave_country
	}

	option = {
		name = enclave.7005.a
		trigger = {
			is_xenophobe = no
		}
		add_monthly_resource_mult = {
			resource = alloys
			value = @tier2materialreward
			min = @tier2materialmin
			max = @tier2materialmax
		}
	}

	option = {
		name = enclave.7005.b
		trigger = {
			is_xenophobe = yes
		}
		add_monthly_resource_mult = {
			resource = alloys
			value = @tier2materialreward
			min = @tier2materialmin
			max = @tier2materialmax
		}
	}
}

##################################
# SHROUDWALKER ENCLAVE (APPENDIX)
##################################

# Shroudwalker Insight modifier
country_event = { # Purchasing Insight
	id = enclave.7050
	base = enclave.405
	desc_clear = yes
	option_clear = yes

	desc = enclave.7050.desc

	trigger = {
		any_spynetwork = {
			owner = { is_same_value = root }
			target = { is_country_type = default }
			exists = leader
		}
	}

	immediate = {
		every_spynetwork = {
			limit = {
				owner = { is_same_value = root }
				target = { is_country_type = default }
				exists = leader
			}
			save_spynetwork_country = yes
		}
	}

	#Back to menu
	option = {
		name = enclave.410.a
		hidden_effect = {
			country_event = { id = enclave.405 }
		}
	}
	option = {
		name = enclave.7050.a
		trigger = {
			exists = event_target:spynetwork_country_1
		}
		allow = {
			shroudwalker_insight_purchasing_trigger = {
				TARGET = event_target:spynetwork_country_1
			}
		}
		shroudwalker_insight_purchasing_effect = {
			TARGET = event_target:spynetwork_country_1
		}
	}
	option = {
		name = enclave.7050.b
		trigger = {
			exists = event_target:spynetwork_country_2
		}
		allow = {
			shroudwalker_insight_purchasing_trigger = {
				TARGET = event_target:spynetwork_country_2
			}
		}
		shroudwalker_insight_purchasing_effect = {
			TARGET = event_target:spynetwork_country_2
		}
	}
	option = {
		name = enclave.7050.c
		trigger = {
			exists = event_target:spynetwork_country_3
		}
		allow = {
			shroudwalker_insight_purchasing_trigger = {
				TARGET = event_target:spynetwork_country_3
			}
		}
		shroudwalker_insight_purchasing_effect = {
			TARGET = event_target:spynetwork_country_3
		}
	}
	option = {
		name = enclave.7050.d
		trigger = {
			exists = event_target:spynetwork_country_4
		}
		allow = {
			shroudwalker_insight_purchasing_trigger = {
				TARGET = event_target:spynetwork_country_4
			}
		}
		shroudwalker_insight_purchasing_effect = {
			TARGET = event_target:spynetwork_country_4
		}
	}
	option = {
		name = enclave.7050.e
		trigger = {
			exists = event_target:spynetwork_country_5
		}
		allow = {
			shroudwalker_insight_purchasing_trigger = {
				TARGET = event_target:spynetwork_country_5
			}
		}
		shroudwalker_insight_purchasing_effect = {
			TARGET = event_target:spynetwork_country_5
		}
	}
	option = {
		name = enclave.7050.f
		trigger = {
			exists = event_target:spynetwork_country_6
		}
		allow = {
			shroudwalker_insight_purchasing_trigger = {
				TARGET = event_target:spynetwork_country_6
			}
		}
		shroudwalker_insight_purchasing_effect = {
			TARGET = event_target:spynetwork_country_6
		}
	}
	option = {
		name = GOODBYE
		default_hide_option = yes
	}
}

country_event = { # Purchased Insight
	id = enclave.7055
	base = enclave.405
	desc_clear = yes
	option_clear = yes

	desc = enclave.7055.desc

	option = {
		name = DOTDOTDOT
	}
}

country_event = { # Insight - Asset
	id = enclave.7060
	base = enclave.405
	desc_clear = yes
	option_clear = yes

	desc = enclave.7060.desc

	trigger = {
		any_spynetwork = {
			owner = { is_same_value = root }
			target = { is_same_value = from }
			exists = leader
		}
	}

	option = {
		name = INTERESTING
		if = {
			limit = {
				from = { is_hive_empire = yes }
			}
			random_spynetwork = {
				limit = {
					owner = { is_same_value = root }
					target = { is_same_value = from }
					exists = leader
				}
				espionage_create_asset_hive = yes
			}
		}
		else_if = {
			limit = {
				from = { is_machine_empire = yes }
			}
			random_spynetwork = {
				limit = {
					owner = { is_same_value = root }
					target = { is_same_value = from }
					exists = leader
				}
				espionage_create_asset_machine = yes
			}
		}
		else = {
			random_spynetwork = {
				limit = {
					owner = { is_same_value = root }
					target = { is_same_value = from }
					exists = leader
				}
				espionage_create_asset_regular = yes
			}
		}
	}
}

country_event = { # Insight - Spy Network Level
	id = enclave.7065
	base = enclave.405
	desc_clear = yes
	option_clear = yes

	desc = enclave.7065.desc

	trigger = {
		any_spynetwork = {
			owner = { is_same_value = root }
			target = { is_same_value = from }
			exists = leader
		}
	}

	immediate = {
		custom_tooltip = enclave.7065.tt
		hidden_effect = {
			random_spynetwork = {
				limit = {
					owner = { is_same_value = root }
					target = { is_same_value = from }
					exists = leader
				}
				add_spy_network_level = 15
			}
		}
	}

	option = {
		name = INTERESTING
	}
}

country_event = { # Insight - Intel
	id = enclave.7070
	base = enclave.405
	desc_clear = yes
	option_clear = yes

	desc = enclave.7070.desc

	trigger = {
		any_spynetwork = {
			owner = { is_same_value = root }
			target = { is_same_value = from }
			exists = leader
		}
	}

	immediate = {
		custom_tooltip = enclave.7070.tt
		hidden_effect = {
			add_intel = {
				who = fromfrom
				amount = 20
			}
		}
	}

	option = {
		name = INTERESTING
	}
}

country_event = { # Insight - Nothing
	id = enclave.7075
	base = enclave.405
	desc_clear = yes
	option_clear = yes

	desc = enclave.7075.desc

	option = {
		name = enclave.7075.a
	}
}

# Shroudwalker Teacher
country_event = {
	id = enclave.7100
	base = enclave.405
	desc_clear = yes
	option_clear = yes

	desc = enclave.7100.desc

	#Back to menu
	option = {
		name = enclave.410.a
		hidden_effect = {
			country_event = { id = enclave.405 }
		}
	}
	option = {
		name = enclave.7100.a
		allow = {
			custom_tooltip = {
				fail_text = shroudwalker_teacher_cooldown_tt
				NOT = { has_country_flag = shroudwalker_teacher_cooldown }
			}
			custom_tooltip = {
				fail_text = shroudwalker_teacher_already_bought
				NOT = {
					any_owned_leader = {
						has_leader_flag = shroudwalker_teacher
					}
				}
			}
			resource_stockpile_compare = {
				resource = influence
				value >= 50
			}
			resource_stockpile_compare = {
				resource = energy
				value >= 10
				mult = root.trigger:empire_size
			}
		}
		add_resource = { influence = -50 }
		add_resource = {
			energy = -10
			mult = root.trigger:empire_size
		}
		custom_tooltip = opinion10
		custom_tooltip = shroudwalker_teacher_explanation
		if = {
			limit = {
				has_paragon_dlc = yes
				is_gestalt = no
			}
			custom_tooltip = unlocks_shroudwalker_council_position
		}
		hidden_effect = {
			event_target:shroudwalker_enclave_country = {
				add_trust = {
					who = root
					amount = 10
				}
				species = {
					save_event_target_as = shroudwalker_species
				}
			}
			create_shroudwalker_teacher_effect = yes
			set_timed_country_flag = {
				flag = shroudwalker_teacher_cooldown
				days = 720
			}
			set_saved_date = {
				key = shroudwalker_teacher_timer
				days_from_present = 720
				expires = 720
			}
			country_event = { id = enclave.7105 } # Post-Sale Message
		}
	}
	option = {
		name = GOODBYE
		default_hide_option = yes
	}
}

# Shroudwalker Teacher: Post-Sale Message (back to main menu)
country_event = {
	id = enclave.7105
	base = enclave.405
	desc_clear = yes
	desc = enclave.7105.desc
}

# Ask about the Many-Tentacled Guest (Jaunted Traveler event chain)
country_event = {
	id = enclave.7110
	base = enclave.405
	desc_clear = yes
	option_clear = yes

	desc = enclave.7110.desc

	#Back to menu
	option = {
		name = "enclave.7110.a"
		custom_tooltip = "enclave.7110.a.tooltip"
		set_country_flag = jaunted_traveler_secret_revealed
		add_monthly_resource_mult = {
			resource = physics_research
			value = @tier2researchreward
			min = @tier2researchmin
			max = @tier2researchmax
		}
		hidden_effect = {
			country_event = { id = enclave.405 }
		}
	}
}

# Revoke Shroudwalker Teacher upon attacking the Shroudwalkers
# via on_entering_battle | from = attacked country (Shroudwalkers)
country_event = {
	id = enclave.7200
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		exists = event_target:shroudwalker_enclave_country
		from = { is_same_value = event_target:shroudwalker_enclave_country }
		any_owned_leader = {
			has_leader_flag = shroudwalker_teacher
		}
		NOT = {
			has_country_flag = attacked_shroudwalkers
		}
	}

	immediate = {
		set_country_flag = attacked_shroudwalkers
		random_owned_leader = {
			limit = {
				has_leader_flag = shroudwalker_teacher
			}
			leader_event = {
				id = enclave.8000
				days = 5
				scopes = {
					FROM = event_target:shroudwalker_enclave_country
				}
			}
		}
	}
}

# Shroudwalker Zro harvesting
country_event = {
	id = enclave.7250
	base = enclave.405
	desc_clear = yes
	option_clear = yes

	desc = enclave.7250.desc

	#Back to menu
	option = {
		name = enclave.410.a
		hidden_effect = {
			country_event = { id = enclave.405 }
		}
	}
	option = {
		name = enclave.7250.a
		allow = {
			resource_stockpile_compare = { resource = energy value >= 4000 }
			resource_stockpile_compare = { resource = influence value >= 75 }
		}
		add_resource = {
			energy = -4000
			influence = -75
		}
		custom_tooltip = opinion10
		add_research_option = tech_mine_zro
		add_tech_progress = {
			tech = tech_mine_zro
			progress = 0.6
		}
		add_modifier = {
			modifier = shroudwalker_zro_tithe
			days = -1
		}
		hidden_effect = {
			random_planet_within_border = {
				limit = {
					# Ariphaos Note: Intentionally leaving this out of the astral scar fixes.
					has_deposit = no
					has_anomaly = no
				}
				add_deposit = d_zro_deposit_1
			}
			set_country_flag = purchased_zro_tech
			country_event = { id = enclave.7255 } # Post-Sale Message
		}
	}
	option = {
		name = GOODBYE
		default_hide_option = yes
	}
}

# Shroudwalker Teacher: Post-Sale Message (back to main menu)
country_event = {
	id = enclave.7255
	base = enclave.405
	desc_clear = yes
	desc = enclave.7255.desc
}

leader_event = {
	id = enclave.8000
	title = enclave.8000.name
	picture = {
		picture = GFX_evt_shroudwalker_enclave
		trigger = {
			has_leader_flag = shroudwalker_teacher
		}
	}
	desc = {
		text = enclave.8000.shroudwalker_teacher.desc.councilor
		trigger = {
			has_leader_flag = shroudwalker_teacher
			is_councilor = yes
		}
	}
	desc = {
		text = enclave.8000.shroudwalker_teacher.desc
		trigger = {
			has_leader_flag = shroudwalker_teacher
			is_councilor = no
		}
	}
	picture = {
		picture = GFX_evt_salvager_enclave_disassembly
		trigger = {
			has_leader_flag = master_salvager
		}
	}
	desc = {
		text = enclave.8000.master_salvager.desc.councilor
		trigger = {
			has_leader_flag = master_salvager
			is_councilor = yes
		}
	}
	desc = {
		text = enclave.8000.master_salvager.desc
		trigger = {
			has_leader_flag = master_salvager
			is_councilor = no
		}
	}
	picture = {
		picture = GFX_evt_physics_research
		trigger = {
			has_leader_flag = curator_archivist
		}
	}
	desc = {
		text = enclave.8000.curator_archivist.desc.councilor
		trigger = {
			has_leader_flag = curator_archivist
			is_councilor = yes
		}
	}
	desc = {
		text = enclave.8000.curator_archivist.desc
		trigger = {
			has_leader_flag = curator_archivist
			is_councilor = no
		}
	}
	picture = {
		picture = GFX_evt_cargoship_caravan
		trigger = {
			has_leader_flag = trader_leader
		}
	}
	desc = {
		text = enclave.8000.trader_leader.desc.councilor
		trigger = {
			has_leader_flag = trader_leader
			is_councilor = yes
		}
	}
	desc = {
		text = enclave.8000.trader_leader.desc
		trigger = {
			has_leader_flag = trader_leader
			is_councilor = no
		}
	}
	show_sound = event_default
	is_triggered_only = yes

	event_window_type = leader_story

	event_picture_background = "GFX_leader_recruitment_bg_renowned"

	picture_event_data = {
		portrait = root
	}

	immediate = {
		switch = {
			trigger = has_trait
			leader_trait_shroudwalker = {
				owner = {
					remove_country_flag = attacked_shroudwalkers
				}
			}
			leader_trait_master_salvager = {
				owner = {
					remove_country_flag = attacked_salvagers
				}
			}
			leader_trait_curator = {
				owner = {
					remove_country_flag = remove_curator_archivist
				}
			}
			leader_trait_xuracorp_liaison = {
				owner = {
					remove_country_flag = attacked_trader_enclave_country_1
				}
			}
			leader_trait_riggan_liaison = {
				owner = {
					remove_country_flag = attacked_trader_enclave_country_2
				}
			}
			leader_trait_muutagan_liaison = {
				owner = {
					remove_country_flag = attacked_trader_enclave_country_3
				}
			}
		}
	}

	option = {
		name = DISAPPOINTING
		if = {
			limit = {
				is_councilor = yes
			}
			owner = {
				add_council_agenda_progress_percent = -0.20
			}
		}
		if = {
			limit = {
				is_councilor = yes
				is_enclave_councilor_type = yes
			}
			owner = {
				unlock_council_selection = yes
			}
		}
		custom_tooltip = leader_leaves_tt
		hidden_effect = {
			exile_leader_as = exiled_enclave_leader@root.@this
		}
	}
}
