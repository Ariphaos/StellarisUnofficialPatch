namespace = ariphaos_patch

# Event for version handling.
event = {
	id = ariphaos_patch.1
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		set_global_flag = ariphaos_unofficial_patch_installed
		set_global_flag = ariphaos_unofficial_patch_310
	}
}

# Game start and on_decade_pulse to catch multiplayer.
event = {
	id = ariphaos_patch.10001
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		ariphaos_patch_evaluate_start = yes
		ariphaos_patch_evaluate_galaxy = yes
	}
}

# Progress.2, but for remnants.
ship_event = {
	id = ariphaos_patch.2
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		owner = {
			is_ai = no
			NOT = {
				has_country_flag = Story5
			}
		}
		FROM = {
			has_owner = no
			OR = {
				is_planet_class = pc_relic
				is_planet_class = pc_city
				is_planet_class = pc_nuked
				is_planet_class = pc_habitat
				is_planet_class = pc_ringworld_habitable
				is_planet_class = pc_ringworld_habitable_damaged
			}
		}
	}

	immediate = {
	   owner = { country_event = { id = story.5 days = 30 } }
	}
}

# Grant living metal tech option if a deposit is in our territory, or if we have a fabricator.
country_event = {
	id = ariphaos_patch.3
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_country_type = default
		NOR = {
			has_technology = tech_mine_living_metal
			has_tech_option = tech_mine_living_metal
		}
		any_planet_within_border = { has_deposit = d_living_metal_deposit }
	}

	immediate = {
		add_research_option = tech_mine_living_metal
	}

}

# Pacify Amoebas and Crystals for Caravaneers
country_event = {
	id = ariphaos_patch.7
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		NOT = { has_country_flag = crystal_nonhostile_approach }
		OR = {
			AND = {
				is_fallen_empire = yes
				is_xenophile = yes
			}
			is_country_type = caravaneer_fleet
			is_country_type = caravaneer_home
		}
	}

	immediate = {
		set_country_flag = crystal_nonhostile_approach
		
		every_country = {
			limit = {
				is_amoeba_country_type = yes
			}
			set_faction_hostility = {
				set_hostile = no
				set_neutral = yes
				target = root
			}
		}
		
		every_country = {
			limit = {
				is_crystal_country_type = yes
			}
			set_faction_hostility = {
				set_hostile = no
				set_neutral = yes
				target = root
			}
		}
	}

}

# Automagically close borders.
# ROOT = country closing the borders
# FROM = previous war participant.
country_event = {
	id = ariphaos_patch.44
	hide_window = yes
	is_triggered_only = yes

	# The AI will do this on their own. Make sure the message is generated.
	trigger = {
		is_ai = no
	}

	immediate = {
	   set_closed_borders = {
			who = from
			status = yes
		}
	}
}

# Sets a short timed flag if pox/armageddon bombardment is going on, so the planet can be appropriately nuked.
# Ariphaos todo: Should we just turn the planet into a tomb world once devastation is over 100? Give players the option to fully nuke the planet if they kill the last pop before it reaches 100?
planet_event = {
	id = ariphaos_patch.81
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		planet_devastation >= 100
		OR = {
			has_orbital_bombardment_stance = armageddon
			has_orbital_bombardment_stance = pox
		}
	}

	immediate = {
		set_timed_planet_flag = {
			flag = ariphaos_patch_flag_tomb_bombardment
			days = 7
		}
	}
}

# Make sure bombarded infested worlds revert to barren.
event = {
	id = ariphaos_patch.92
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		every_galaxy_planet = {
			limit = {
				has_owner = no
				is_planet_class = pc_infested
				is_under_colonization = no
			}
			
			change_pc = pc_barren
			add_modifier = {
				modifier = "terraforming_candidate"
				days = -1
			}
		}
	}
}

# De-increment variable for counting Azizian armies
country_event = {
	id = ariphaos_patch.450
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		from = { army_type = titanic_azizian_assault_army }
	}

	immediate = {
		change_variable = {
			which = titanic_azizian_soldier_count
			value = -1
		}
	}
}

# De-increment variable for counting Titanic armies
country_event = {
	id = ariphaos_patch.451
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		from = { army_type = titanic_assault_army }
	}

	immediate = {
		change_variable = {
			which = titanic_life_soldier_count
			value = -1
		}
	}
}

# triggered by on_fleet_disbanded
# ROOT = owner
# FROM = fleet
country_event = {
	id = ariphaos_patch.456
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		exists = FROM
		FROM = { is_ship_class = shipclass_transport }
	}
	immediate = {
		every_owned_army = {
			limit = {
				OR = {
					army_type = titanic_assault_army
					army_type = titanic_azizian_assault_army
					army_type = imperial_legion
				}
			}
			if = {
				limit = {
					exists = fleet
					fleet = { is_same_value = FROM }
				}
				save_event_target_as = removed_army
				switch = {
					trigger = army_type
					titanic_assault_army = { PREV = {
						change_variable = {
							which = titanic_life_soldier_count
							value = -1
						}
					} }
					titanic_azizian_assault_army = { PREV = {
						change_variable = {
							which = titanic_azizian_soldier_count
							value = -1
						}
					} }
					imperial_legion = { PREV = {
						change_variable = {
							which = imperial_legion_soldier_count
							value = -1
						}
					} }
				}
			}
		}
	}
}

# triggered by on_single_player_save_game_load and on_yearly_pulse - multiplayer can manually fire this event if needed
# ensure accurate army counters because we can't detect disbanded armies or lost worlds that had the relevant flag
event = {
	id = ariphaos_patch.459
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		every_playable_country = {
			set_variable = {
				which = titanic_life_soldier_count
				value = 0
			}
			set_variable = {
				which = titanic_azizian_soldier_count
				value = 0
			}
			set_variable = {
				which = imperial_legion_soldier_count
				value = 0
			}
			every_owned_army = {
				limit = {
					OR = {
						army_type = titanic_assault_army
						army_type = titanic_azizian_assault_army
						army_type = imperial_legion
					}
				}
				switch = {
					trigger = army_type
					titanic_assault_army = { PREV = {
						change_variable = {
							which = titanic_life_soldier_count
							value = 1
						}
					} }
					titanic_azizian_assault_army = { PREV = {
						change_variable = {
							which = titanic_azizian_soldier_count
							value = 1
						}
					} }
					imperial_legion = { PREV = {
						change_variable = {
							which = imperial_legion_soldier_count
							value = 1
						}
					} }
				}
			}
#			set_variable = {
#				which = titanic_life_soldier_maximum
#				value = 0
#			}
#			every_owned_planet = {
#				limit = { has_planet_flag = titanic_life_can_build }
#				PREV = {
#					change_variable = {
#						which = titanic_life_soldier_maximum
#						value = @titanic_life_soldier_per_planet_maximum
#					}
#				}
#			}
		}
	}
}

# Catch-all trait adding event.
country_event = {
	id = ariphaos_patch.2560
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		from = { 
			add_leader_traits_after_modification = yes
			remove_leader_traits_after_modification = yes
		}
	}

}
event = {
	id = ariphaos_patch.3101
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		every_country = {
			limit = {
				has_origin = origin_remnants
			}
			country_event = { id = ariphaos_patch.31010 days = 1 }
		}
	}
}

country_event = {
	id = ariphaos_patch.31010
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		every_galaxy_planet = {
            limit = {
                has_planet_flag = prescripted_ideal
				is_ideal_planet_class = {
					who = root
					status = yes
				}
                distance = {
                    source = root.capital_scope.solar_system
                    use_bypasses = no
                    min_jumps = 1
                    max_jumps = 6
                }
            }
            set_planet_flag = ariphaos_patch_remnants
        }
	}
}

# Some
event = {
	id = ariphaos_patch.7200
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		any_galaxy_planet = {
			has_planet_flag = star_seddom
			solar_system = {
				any_system_planet = {
					has_planet_flag = planet_Ariph
					is_planet_class = pc_molten
				}
				any_system_planet = {
					has_planet_flag = planet_Frince
					is_planet_class = pc_shrouded
				}
			}
		}
	}
	
	immediate = {
		random_galaxy_planet = {
			limit = { has_planet_flag = star_seddom }
			solar_system = {
				every_system_planet = {
					switch = {
						trigger = has_planet_flag
						planet_Glavi = {
							change_pc = pc_gas_giant
							clear_deposits = yes
							add_deposit = d_exotic_gases_1
						}
						planet_Salvold = {
							change_pc = pc_barren_cold
							clear_deposits = yes
							add_deposit = d_minerals_2
						}
						planet_Frince = {
							change_pc = pc_frozen
							clear_deposits = yes
							add_deposit = d_minerals_2
						}
						planet_Echo = {
							change_pc = pc_barren
							clear_deposits = yes
							add_deposit = d_energy_2
						}
					}
				}
			}
		}
		every_playable_country = {
			limit = { is_ai = no }
			country_event = { id = ariphaos_patch.7201 days = 2 }
		}
	}
}

country_event = {
	id = ariphaos_patch.7201
	title = ariphaos_patch.7201.name
	desc = ariphaos_patch.7201.desc
	picture = GFX_evt_shrouded_planet
	show_sound = event_mystic_reveal
	location = this
	
	is_triggered_only = yes
	
	trigger = {
		is_ai = no
	}
	
	option = {
		name = "ariphaos_patch.7201.option"
	}
}

country_event = {
	id = ariphaos_patch.9998
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_regular_empire = yes
		is_country_type = default
	}

	immediate = {
		add_modifier = {
			modifier = ariphaos_patch_political_restructuring
			days = 720
		}
		every_owned_pop = {
			limit = {
				is_same_species = ROOT
			}
			random_list = {
				25 = {
					modifier = {
						factor = 0
						ROOT = { is_homicidal = yes }
					}
				}
				25 = {
					modifier = {
						factor = 0
						ROOT = { is_xenophobe = no }
					}
					modifier = {
						factor = 2
						ROOT = { has_ethic = ethic_fanatic_xenophobe }
					}
					pop_change_ethic = ethic_xenophobe
				}
				25 = {
					modifier = {
						factor = 0
						ROOT = { is_xenophile = no }
					}
					modifier = {
						factor = 2
						ROOT = { has_ethic = ethic_fanatic_xenophile }
					}
					pop_change_ethic = ethic_xenophile
				}
				25 = {
					modifier = {
						factor = 0
						ROOT = { is_militarist = no }
					}
					modifier = {
						factor = 2
						ROOT = { has_ethic = ethic_fanatic_militarist }
					}
					pop_change_ethic = ethic_militarist
				}
				25 = {
					modifier = {
						factor = 0
						ROOT = { is_pacifist = no }
					}
					modifier = {
						factor = 2
						ROOT = { has_ethic = ethic_fanatic_pacifist }
					}
					pop_change_ethic = ethic_pacifist
				}
				25 = {
					modifier = {
						factor = 0
						ROOT = { is_materialist = no }
					}
					modifier = {
						factor = 2
						ROOT = { has_ethic = ethic_fanatic_materialist }
					}
					pop_change_ethic = ethic_materialist
				}
				25 = {
					modifier = {
						factor = 0
						ROOT = { is_spiritualist = no }
					}
					modifier = {
						factor = 2
						ROOT = { has_ethic = ethic_fanatic_spiritualist }
					}
					pop_change_ethic = ethic_spiritualist
				}
				25 = {
					modifier = {
						factor = 0
						ROOT = { is_egalitarian = no }
					}
					modifier = {
						factor = 2
						ROOT = { has_ethic = ethic_fanatic_egalitarian }
					}
					pop_change_ethic = ethic_egalitarian
				}
				25 = {
					modifier = {
						factor = 0
						ROOT = { is_authoritarian = no }
					}
					modifier = {
						factor = 2
						ROOT = { has_ethic = ethic_fanatic_authoritarian }
					}
					pop_change_ethic = ethic_authoritarian
				}
			}
		}
	}
}
