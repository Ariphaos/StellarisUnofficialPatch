################################
#
# Origin Events
#
###############################
namespace = origin

#Tree of Life

#Add ToL to new colonies
planet_event = {
	id = origin.3001
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		owner = {
			has_origin = origin_tree_of_life
		}
	}

	immediate = {
		add_deposit = d_tree_of_life_colony
		remove_modifier = no_lifetree #as the planet transfer events fire before this
	}
}

#Tree destroyed (oh no!)
#silently kill tree
planet_event = {
	id = origin.3002
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		OR = {
			has_deposit = d_tree_of_life_colony
			has_deposit = d_tree_of_life_home
		}
	}

	immediate = {
		remove_deposit = d_tree_of_life_colony
		remove_deposit = d_tree_of_life_home
	}
}

#informatively kill tree
planet_event = {
	id = origin.3003
	title = "origin.3003.name"
	desc = "origin.3003.desc"
	picture = GFX_evt_burning_city
	show_sound = event_alien_nature

	is_triggered_only = yes

	trigger = {
		planet_devastation >= 50
		OR = {
			has_deposit = d_tree_of_life_colony
			has_deposit = d_tree_of_life_home
		}
	}

	immediate = {
		remove_deposit = d_tree_of_life_colony
		remove_deposit = d_tree_of_life_home
	}

	option = {
		name = UNFORTUNATE
		tooltip = {
			remove_deposit = d_tree_of_life_colony
			remove_deposit = d_tree_of_life_home
		}
		add_modifier = { modifier = no_lifetree }
	}
}

#modify the modifier for lacking Tree
planet_event = {
	id = origin.3004
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		NOT = { days_passed < 1 }
		OR = {
			AND = {
				owner = { has_origin = origin_tree_of_life }
				NOR = {
					has_deposit = d_tree_of_life_colony
					has_deposit = d_tree_of_life_home
					has_modifier = no_lifetree
				}
			}
			AND = {
				owner = { NOT = { has_origin = origin_tree_of_life } }
				has_modifier = no_lifetree
			}
		}
	}

	immediate = {
		if = {
			limit = {
				owner = { has_origin = origin_tree_of_life }
				NOT = {
					has_deposit = d_tree_of_life_colony
					has_deposit = d_tree_of_life_home
				}
			}
			add_modifier = { modifier = no_lifetree }
		}
		if = {
			limit = {
				owner = { NOT = { has_origin = origin_tree_of_life } }
			}
			remove_modifier = no_lifetree
		}
	}
}

#Lithoid origin
planet_event = {
	id = origin.3010
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		exists = FROM
		FROM = { is_ship_size = lithoid_colonizer}
		NOT = { has_modifier = lithoid_crater }
	}

	immediate = {
		add_deposit = d_buried_lithoids
		add_deposit = d_buried_lithoids
		add_modifier = { modifier = lithoid_crater }
	}
}

#Remnants
country_event = {
	id = origin.3100
	title = "origin.3100.name"
	desc = "origin.3100.desc"
	picture = GFX_evt_relic_world
	show_sound = event_alien_nature

	is_triggered_only = yes

	immediate = {
	}

	option = {
		name = EXCELLENT
		locked_random_list = {
			10 = {
				add_random_research_option = {
					add_progress = 0.95
					area = engineering
					tier = 1
					ignore_prereqs = yes
					fail_effects = {
						add_monthly_resource_mult = {
							resource = engineering_research
							value = @tier5researchreward
							min = @tier5researchmin
							max = @tier5researchmax
						}
					}
				}
			}
			10 = {
				add_random_research_option = {
					add_progress = 0.95
					area = physics
					tier = 1
					ignore_prereqs = yes
					fail_effects = {
						add_monthly_resource_mult = {
							resource = physics_research
							value = @tier5researchreward
							min = @tier5researchmin
							max = @tier5researchmax
						}
					}
				}
			}
			10 = {
				add_random_research_option = {
					add_progress = 0.95
					area = society
					tier = 1
					ignore_prereqs = yes
					fail_effects = {
						add_monthly_resource_mult = {
							resource = society_research
							value = @tier5researchreward
							min = @tier5researchmin
							max = @tier5researchmax
						}
					}
				}
			}
		}
	}
}
planet_event = {
	id = origin.3101
	title = "origin.3101.name"
	desc = "origin.3101.desc"
	picture = GFX_evt_overgrown_city
	show_sound = event_alien_nature

	is_triggered_only = yes

	trigger = {
		owner = {
			has_origin = origin_remnants
		}
		has_planet_flag = prescripted_ideal
		has_planet_flag = ariphaos_patch_remnants
		NOT = { has_modifier = colonial_remains }
		closest_system = {
			limit = {
				any_system_colony = {
					exists = owner
					owner = {
						is_same_value = root.owner
					}
					is_homeworld = yes
				}
			}
			max_steps = 6
		}
	}

	option = {
		name = EXCELLENT
		add_modifier = { modifier = colonial_remains }
		add_deposit = d_ruined_arcology
		hidden_effect = { #maybe add a random blocker to hint at why the colony was lost
			random_list = {
				50 = {}
				5 = { add_deposit = d_radioactive_wasteland }
				5 = { add_deposit = d_city_ruins }
				5 = { add_deposit = d_crater }
				5 = { add_deposit = d_mutant_landfill }
				5 = { add_deposit = d_ancient_bombardment_craters }
				5 = { add_deposit = d_ancient_battlefield }
				5 = { add_deposit = d_impact_crater }
				5 = { add_deposit = d_ancient_particle_accelerator }
				5 = { add_deposit = d_harvester_fields }
				5 = { add_deposit = d_organic_landfill }
				1 = { add_deposit = d_organic_slurry }
			}
		}
	}
}

# Shattered Ring
country_event = {
	id = origin.3150
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		has_origin = origin_shattered_ring
	}

	immediate = {
		if = {
			limit = { num_guaranteed_colonies >= 2 }
			capital_scope = {
				solar_system = {
					every_megastructure = {
						limit = {
							exists = owner
							owner = { has_origin = origin_shattered_ring }
							is_megastructure_type = ring_world_ruined
						}
						remove_megastructure = this
					}
					spawn_shattered_ring_guaranteed_1_effect = yes
					spawn_shattered_ring_guaranteed_2_effect = yes
				}
			}
		}
		else_if = {
			limit = { num_guaranteed_colonies >= 1 }
			capital_scope = {
				solar_system = {
					random_megastructure = {
						limit = {
							exists = owner
							owner = { has_origin = origin_shattered_ring }
							is_megastructure_type = ring_world_ruined
							has_megastructure_flag = guaranteed_1
						}
						remove_megastructure = this
					}
					spawn_shattered_ring_guaranteed_1_effect = yes
				}
			}
		}
	}
}

##################
# PROGENITOR HIVE
##################

country_event = {
	id = origin.3200
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_origin = origin_progenitor_hive
	}

	immediate = {
		every_owned_leader = {
			limit = { is_idle = no }
			#This approximates a function to level up every 1.5(n+1) years so that you can expect to get a level 10 leader after 80 years.
			export_trigger_value_to_variable = {
				trigger = has_skill
				variable = experience_bonus
			}
			multiply_variable = {
				which = experience_bonus
				value = 2.5
			}
			floor_variable = experience_bonus

			change_variable = {
				which = experience_bonus
				value = 4
			}
			random_list = { #We want some randomness
				1 = {
					set_variable = {
						which = random_factor
						value = -3
					}
				}
				1 = {
					set_variable = {
						which = random_factor
						value = -2
					}
				}
				1 = {
					set_variable = {
						which = random_factor
						value = -1
					}
				}
				1 = {
					set_variable = {
						which = random_factor
						value = 0
					}
				}
				1 = {
					set_variable = {
						which = random_factor
						value = 1
					}
				}
				1 = {
					set_variable = {
						which = random_factor
						value = 2
					}
				}
				1 = {
					set_variable = {
						which = random_factor
						value = 3
					}
				}
			}
			change_variable = {
				which = experience_bonus
				value = random_factor
			}
			add_experience = experience_bonus

			clear_variable = experience_bonus
			clear_variable = random_factor
		}
	}
}

#Capital Transfer
planet_event = {
	id = origin.3205
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		owner = { has_origin = origin_progenitor_hive }
		exists = from
		from = {
			OR = {
				has_deposit = d_progenitor
				has_deposit = d_progenitor_empty
			}
		}
	}

	immediate = {
		if = {
			limit = {
				from = { has_deposit = d_progenitor }
			}
			from = { remove_deposit = d_progenitor }
			add_deposit = d_progenitor
		}
		else_if = {
			limit = {
				from = { has_deposit = d_progenitor_empty }
			}
			from = { remove_deposit = d_progenitor_empty }
			add_deposit = d_progenitor_empty
		}
	}
}
# Triggers country_event for the defender upon defeat
# This = country, planet owner
# From = country, attack leader
# FromFrom = planet
country_event = {#Capital world lost
 	id = origin.3210
 	title = origin.3210.name
 	desc = origin.3210.desc
 	picture = GFX_evt_progenitor_throne
 	show_sound = event_bad_omen

 	is_triggered_only = yes

 	trigger = {
 		has_origin = origin_progenitor_hive
 		fromfrom = { has_deposit = d_progenitor }
 	}

 	immediate = {
 		fromfrom = {
 			remove_deposit = d_progenitor
 			add_deposit = d_progenitor_empty
 		}
 	}

 	option = {
 		name = origin.3215.a
 		 if = {
 		 	limit = { NOT = { has_modifier = missing_progenitor_modifier } }
			add_modifier = {
				modifier = missing_progenitor_modifier
				days = -1
			}
		}
 	}
}

# Progenitor Deposit cleanup after War Loss
# A war has ended
# Root = Loser
# From = Main Winner
#country_event = {
#	id = origin.3215
#	title = origin.3215.name
#	desc = origin.3215.desc
# 	picture = GFX_evt_progenitor_throne
# 	show_sound = event_bad_omen
#
# 	is_triggered_only = yes
#
# 	trigger = {
# 		has_origin = origin_progenitor_hive
#		capital_scope = {
#			NOR = {
# 				has_deposit = d_progenitor
# 				has_deposit = d_progenitor_empty
# 			}
# 		}
# 	}
#
# 	immediate = {
# 		capital_scope = {
# 			add_deposit = d_progenitor_empty
# 		}
# 		hidden_effect = {
# 			From = {
# 				random_owned_planet = {
# 					limit = {
# 						OR = {
# 							has_deposit = d_progenitor
# 							has_deposit = d_progenitor_empty
# 						}
# 						NOT = {
# 							planet = { is_same_value = capital_scope }
# 						}
# 					}
# 					remove_deposit = d_progenitor
# 					remove_deposit = d_progenitor_empty
# 				}
# 			}
# 		}
# 	}
#
# 	option = {
# 		name = origin.3215.a
# 		if = {
# 			limit = { NOT = { has_modifier = missing_progenitor_modifier } }
#			add_modifier = {
#				modifier = missing_progenitor_modifier
#				days = -1
#			}
#		}
# 	}
#}

#On Colonize and transfer missing offspring modifier
planet_event = {
	id = origin.3225
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		owner = { has_origin = origin_progenitor_hive }
		NOR = {
			is_planet_class = pc_cosmogenesis_world
			num_assigned_jobs = {
				job = offspring_drone
				value >= 1
			}
		}
	}

	immediate = {
		if = {
			limit = {
				NOT = { has_modifier = missing_offspring_modifier }
			}
			add_modifier = {
				modifier = missing_offspring_modifier
				days = -1
			}
		}
	}
}

#Monthly check to add and remove missing offspring modifier
country_event = {
	id = origin.3230
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		owner = { has_origin = origin_progenitor_hive }
	}

	immediate = {
		every_owned_planet = {
			limit = {
				NOR = {
					has_modifier = missing_offspring_modifier
					is_planet_class = pc_cosmogenesis_world
					num_assigned_jobs = {
						job = offspring_drone
						value >= 1
					}
				}
			}
			add_modifier = {
				modifier = missing_offspring_modifier
				days = -1
			}
		}
		every_owned_planet = {
			limit = {
				has_modifier = missing_offspring_modifier
				OR = {
					num_assigned_jobs = {
						job = offspring_drone
						value >= 1
					}
					has_deposit = d_progenitor
				}

			}
			remove_modifier = "missing_offspring_modifier"
		}
	}
}

#Warning every 2 year if you don't have an offspring working
country_event = {
	id = origin.3235
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		owner = { has_origin = origin_progenitor_hive }
		any_owned_planet = {
			has_modifier = missing_offspring_modifier
			NOT = { has_planet_flag = offspring_missing_warned }
			num_pops >= 3
			is_capital = no
		}
	}

	immediate = {
		every_owned_planet = {
			limit = {
				has_modifier = missing_offspring_modifier
				num_pops >= 3
				NOT = { has_planet_flag = offspring_missing_warned }
			}
			set_timed_planet_flag = {
				flag = offspring_missing_warned
				days = 720
			}
			create_message = {
				type = MESSAGE_NO_OFFSPRING
				localization = MESSAGE_NO_OFFSPRING_DESC
				days = 30
				target = this
				variable = {
					type = name
					localization = PLANET
					scope = this
				}
			}
		}
	}
}

planet_event = {
	id = origin.3240 #removes the modifier if you aren't a progenitor hive
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		NOT = { From = { has_origin = origin_progenitor_hive } }
		has_modifier = missing_offspring_modifier
	}

	immediate = {
		remove_modifier = missing_offspring_modifier
	}
}

planet_event = { #Glassing the Progenitor
	id = origin.3245
 	title = origin.3245.name
 	desc = origin.3245.desc
 	picture = GFX_evt_progenitor_throne
 	show_sound = evn_ove_progenitor_throne
 	is_triggered_only = yes

 	pre_triggers = {
 		is_capital = yes
 		has_owner = yes
 	}

 	trigger = {
 		exists = owner
 		owner = { has_origin = origin_progenitor_hive }
 		has_deposit = d_progenitor
 	}

 	immediate = {
 		remove_deposit = d_progenitor
 		add_deposit = d_progenitor_empty
 	}
 	option = {
 		name = origin.3245.a
 	}
 	option = {
 		name = origin.3245.b
 	}
 	option = {
 		name = origin.3245.c
 	}
 	option = {
 		name = origin.3245.d
 	}
 	after = {
 	 	owner = {
 			if = {
 				limit = {
 					NOT = { has_modifier = missing_progenitor_modifier }
 				}
				add_modifier = {
					modifier = missing_progenitor_modifier
					days = -1
				}
			}
		}
 	}
}

country_event = {
	id = origin.3250 #removes the deposit even if you kill the country
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		has_origin = origin_progenitor_hive
		capital_scope = {
			OR = {
				has_deposit = d_progenitor
				has_deposit = d_progenitor_empty
			}
		}
	}

	immediate = {
		capital_scope = {
			if = {
				limit = { has_deposit = d_progenitor }
				remove_deposit = d_progenitor
			}
			if = {
				limit = { has_deposit = d_progenitor_empty }
				remove_deposit = d_progenitor_empty
			}
		}
	}
}

planet_event = {
	id = origin.3255 #removes Missing Offspring when abandoning colonies
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		has_modifier = missing_offspring_modifier
	}
	immediate = {
		remove_modifier = missing_offspring_modifier
	}

}

# This = owner of ship 1 (destroyed)
# From = owner of ship 2 (combatant)
# FromFrom = ship 1
# FromFromFrom = ship 2
country_event = {
	id = origin.3260
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		has_origin = origin_progenitor_hive
		fromfrom = {
			has_component = SHIP_AURA_OFFSPRING
			solar_system = {
				NOT = {
					any_ship_in_system = {
						NOT = {
							is_same_value = fromfrom
						}
						is_owned_by = root
						has_component = SHIP_AURA_OFFSPRING
					}
				}
			}
		}
	}

	immediate = {
		create_message = {
			type = MESSAGE_FINAL_OFFSPRING_SHIP
			localization = MESSAGE_FINAL_OFFSPRING_SHIP_DESC
			days = 30
			target = fromfrom.solar_system
			variable = {
				type = name
				localization = SYSTEM
				scope = fromfrom.solar_system
			}
		}
	}
}

country_event = { #Bombarding Capital
	id = origin.3265
 	title = origin.3265.name
 	desc = origin.3265.desc
 	picture = GFX_evt_progenitor_throne
 	show_sound = evn_ove_progenitor_throne
 	is_triggered_only = yes

 	option = {
 		name = origin.3215.a
 	}
 	after = {
 	 	owner = {
 			if = {
 				limit = {
 					NOT = { has_modifier = missing_progenitor_modifier }
 				}
				add_modifier = {
					modifier = missing_progenitor_modifier
					days = -1
				}
			}
		}
		 capital_scope = {
 			add_deposit = d_progenitor_empty
 		}
 	}
}

country_event = {
	id = origin.3270
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		from = { has_origin = origin_progenitor_hive }
	}

	immediate = {
		set_origin = origin_progenitor_hive
		capital_scope = {
			add_deposit = d_progenitor
		}
	}
}

#########################
# SLINGSHOT TO THE STARS
#########################

# Start Game event
country_event = {
	id = origin.3500
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		# Find Quantum Catapult Star
		capital_scope.solar_system = {
			closest_system = {
				limit = {
					NOR = {
						has_star_flag = empire_home_system
						has_star_flag = hostile_system
						is_binary_star = yes
						is_trinary_star = yes
					}
				}
				save_event_target_as = quantum_catapult_system
			}
		}
		set_country_flag = slingshot_origin_arcsite_owner
		set_visited = event_target:quantum_catapult_system
		event_target:quantum_catapult_system = {
			set_star_class = sc_pulsar
			set_star_flag = quantum_catapult_system_flag@root

			spawn_megastructure = {
				type = "quantum_catapult_ruined_slingshot"
				planet = event_target:quantum_catapult_system.star

				init_effect = {
					create_ambient_object = {
						type = "large_debris_object"
						location = this
					}
					last_created_ambient_object = {
						set_location = {
							target = prev
							distance = 20
							angle = 20
						}
					}
					create_ambient_object = {
						type = "large_debris_object"
						location = this
					}
					last_created_ambient_object = {
						set_location = {
							target = prev
							distance = 20
							angle = 150
						}
					}
					create_ambient_object = {
						type = "medium_debris_01_object"
						location = this
					}
					last_created_ambient_object = {
						set_location = {
							target = prev
							distance = 35
							angle = 90
						}
					}
					create_ambient_object = {
						type = "medium_debris_02_object"
						location = this
					}
					last_created_ambient_object = {
						set_location = {
							target = prev
							distance = 3
							angle = 270
						}
					}
				}
			}

			star = { create_archaeological_site = slingshot_digsite }
		}
	}
}

# On Occupy the System with Quantum Catapult (Ship Event)
ship_event = {
	id = origin.3505
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		owner = { has_origin = origin_star_slingshot }
		solar_system = {
			has_star_flag = quantum_catapult_system_flag@root.owner
			NOT = { has_star_flag = quantum_catapult_occupied }
		}
	}

	immediate = {
		solar_system = {
			set_star_flag = quantum_catapult_occupied
		}
		owner = {
			country_event = {
				id = origin.3510
			}
		}
	}
}

# On Occupying the System with Quantum Catapult (Country Event)
country_event = {
	id = origin.3510
	title = origin.3510.title
	desc = origin.3510.desc
	picture = GFX_evt_slingshot_stars
	show_sound = evn_ove_slingshot_stars

	is_triggered_only = yes

	trigger = {
		has_origin = origin_star_slingshot
	}

	option = {
		name = origin.3510.a
		add_resource = { influence = 150 }
	}
}

# Digsite Events
fleet_event = {
	id = origin.3515
	title = "origin.3515.name"
	desc = "origin.3515.desc"
	picture = GFX_evt_baol_datacrystals
	show_sound = event_dig_site

	archaeology = yes

	is_triggered_only = yes

	immediate = {
		from = { set_site_progress_locked = yes }
	}

	after = {
		from = { set_site_progress_locked = no }
	}

	option = {
		name = origin.3515.a
		owner = {
			add_monthly_resource_mult = {
				resource = engineering_research
				value = @tier1researchreward
				min = @tier1researchmin
				max = @tier1researchmax
			}
		}
	}
}

fleet_event = {
	id = origin.3520
	title = "origin.3520.name"
	desc = "origin.3520.desc"
	picture = GFX_evt_baol_datacrystals
	show_sound = event_dig_site

	archaeology = yes

	is_triggered_only = yes

	immediate = {
		from = { set_site_progress_locked = yes }
	}

	after = {
		from = { set_site_progress_locked = no }
	}

	option = {
		name = INTRIGUING
		owner = {
			add_monthly_resource_mult = {
				resource = engineering_research
				value = @tier1researchreward
				min = @tier1researchmin
				max = @tier1researchmax
			}
		}
	}
}

fleet_event = {
	id = origin.3525
	title = "origin.3525.name"
	desc = "origin.3525.desc"
	picture = GFX_evt_baol_datacrystals
	show_sound = event_dig_site

	archaeology = yes

	is_triggered_only = yes

	immediate = {
		from = { set_site_progress_locked = yes }
	}

	after = {
		from = { set_site_progress_locked = no }
	}

	option = {
		name = origin.3515.a
	}
}

fleet_event = {
	id = origin.3530
	title = "origin.3530.name"
	desc = "origin.3530.desc"
	picture = GFX_evt_baol_datacrystals
	show_sound = event_dig_site

	archaeology = yes

	is_triggered_only = yes

	immediate = {
		from = { set_site_progress_locked = yes }
	}

	after = {
		from = { set_site_progress_locked = no }
	}

	option = {
		name = FASCINATING
		owner = {
			add_monthly_resource_mult = {
				resource = engineering_research
				value = @tier1researchreward
				min = @tier1researchmin
				max = @tier1researchmax
			}
		}
	}
}

fleet_event = {
	id = origin.3535
	title = "origin.3535.name"
	desc = "origin.3535.desc"
	picture = GFX_evt_baol_datacrystals
	show_sound = event_dig_site

	archaeology = yes

	is_triggered_only = yes

	immediate = {
		from = { set_site_progress_locked = yes }
	}

	after = {
		from = { set_site_progress_locked = no }
	}

	option = {
		name = origin.3515.a
	}
}

fleet_event = {
	id = origin.3540
	title = "origin.3540.name"
	desc = "origin.3540.desc"
	picture = GFX_evt_slingshot_stars
	show_sound = evn_ove_slingshot_stars

	archaeology = yes

	is_triggered_only = yes

	immediate = {
		from = { set_site_progress_locked = yes }
	}

	after = {
		from = { set_site_progress_locked = no }
	}

	option = {
		name = origin.3540.a
		owner = {
			add_monthly_resource_mult = {
				resource = engineering_research
				value = @tier4researchreward
				min = @tier4researchmin
				max = @tier4researchmax
			}
		}
		owner = {
			if = {
				limit = {
					years_passed < 30
				}
				add_modifier = {
					modifier = infinity_beckons
					days = 3600
				}
			}
		}
	}
}

#########################
# TEACHERS OF THE SHROUD
#########################

# Start / Setup event
country_event = {
	id = origin.5600

	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_origin = origin_shroudwalker_apprentice
		exists = event_target:shroudwalker_enclave_country #set up in initializers
	}

	immediate = {
		# Have met aliens (the Shroudwalkers)
		set_country_flag = first_contact_event
		set_country_flag = Story2 # Already encountered spacefarers

		# Get to know the Shroudwalkers from the start
		establish_communications_no_message = event_target:shroudwalker_enclave_country

		# Set up all necessary country flags
		set_country_flag = shroudwalker_enclave_diplomacy_engaged
		set_country_flag = shroudwalker_enclave_bought_shroud_beacon

		every_system = {
			limit = {
				has_star_flag = shroudwalker_enclave_system
			}
			root = { set_visited = prev }
		}

		# Shroudify some planets
		while = {
			count = 7
			closest_system = {
				limit = {
					any_system_planet = {
						uninhabitable_regular_planet = yes
						NOR = {
							has_modifier = terraforming_candidate
							has_anomaly = yes
						}
					}
					NOT = {
						count_system_planet = {
							count = 2
							limit = {
								is_planet_class = pc_shrouded
							}
						}
					}
				}
				min_steps = 1
				max_steps = 3
				random_system_planet = {
					limit = {
						uninhabitable_regular_planet = yes
						NOR = {
							has_modifier = terraforming_candidate
							has_anomaly = yes
						}
					}
					weights = {
						base = 1
						modifier = {
							add = trigger:planet_size
						}
					}
					change_pc = pc_shrouded
					clear_planet_modifiers = yes
					clear_deposits = yes
				}
			}
		}
		if = {
			limit = {
				capital_star.solar_system = {
					any_system_planet = {
						uninhabitable_regular_planet = yes
					}
				}
			}
			capital_star.solar_system = {
				while = {
					count = 2
					random_system_planet = {
						limit = {
							uninhabitable_regular_planet = yes
							NOT = { has_modifier = terraforming_candidate }
						}
						weights = {
							base = 1
							modifier = {
								add = trigger:planet_size
							}
						}
						change_pc = pc_shrouded
						clear_planet_modifiers = yes
						clear_deposits = yes
					}
				}
			}
		}

		# Let them start researching Psionic Theory from the get-go
		add_research_option = tech_psionic_theory
	}
}

# Shroudwalker Enclave: Initial Diplomatic Greeting for Teachers of the Shroud Origin
# This = player country; event_target:shroudwalker_enclave_country = enclave country
country_event = {
	id = origin.5605
	title = origin.5605.name
	trigger = {
		has_origin = origin_shroudwalker_apprentice
		exists = event_target:shroudwalker_enclave_country
		has_country_flag = first_contact_event
		has_country_flag = Story2
		has_country_flag = shroudwalker_enclave_diplomacy_engaged
	}
	desc = {
		trigger = {
			hidden:owner = {
				switch = {
					trigger = has_authority
					auth_corporate = { text = origin.5605.corporate.desc }
					default = { text = origin.5605.generic.desc }
				}
			}
		}
	}

	is_triggered_only = yes

	diplomatic = yes
	custom_gui = "enclave_artist_window"
	custom_gui_option = "enclave_artist_option"
	picture_event_data = {
		portrait = event_target:shroudwalker_enclave_country
		room = shroudwalkers_room
	}

	immediate = {
		country_event = {
			id = tutorial.2100 # Tutorial: Enclave Diplomacy
			scopes = { from = event_target:shroudwalker_enclave_country }
		}
	}

	#Respond with awe and reverence - offers a callback flavour for future events.
	option = {
		name = origin.5605.a
		custom_tooltip = shroud_beacon_info
		custom_tooltip = origin.5605.tt #"We also receive:"
		add_resource = { rare_crystals = 25 }
		set_country_flag = shroudwalker_enclave_bought_shroud_beacon
		hidden_effect = {
			event_target:shroudwalker_enclave_country = {
				add_trust = {
					who = root
					amount = 10
				}
			}
			set_country_flag = shroud_beacon
		}
	}
	#Respond with arrogance - offers a callback flavour for future events.
	option = {
		name = origin.5605.b
		custom_tooltip = shroud_beacon_info
		custom_tooltip = origin.5605.tt #"We also receive:"
		add_resource = { rare_crystals = 25 }
		set_country_flag = shroudwalker_enclave_bought_shroud_beacon
		hidden_effect = {
			set_country_flag = shroud_beacon
		}
	}
}

## Teachers of the Shroud - Determine how player enters Shroudwalker System (not player-facing)
fleet_event = {
	id = origin.5610
	is_triggered_only = yes
	hide_window = yes
	immediate = {
		set_timed_fleet_flag = { flag = used_shroud_tunnel days = 5 }
	}
}

ship_event = {
	id = origin.5615
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		fleet = {
			fleet_event = {
				id = origin.5620 days = 1
			}
		}
	}
}

## Teachers of the Shroud - Origin Event - Player Empire Enters the Shroudwalker Enclave system via hyperlane
fleet_event = {
	id = origin.5620
	title = "origin.5615.name"
	desc = {
		trigger = {
			has_fleet_flag = used_shroud_tunnel
		}
		text = origin.5620.b.desc
	}
	desc = {
		trigger = {
			NOT = {
				has_fleet_flag = used_shroud_tunnel
			}
		}
		text = origin.5615.a.desc
	}
	location = event_target:shroudwalker_enclave_system

	diplomatic = yes
	custom_gui = "enclave_artist_window"
	custom_gui_option = "enclave_artist_option"
	picture_event_data = {
		portrait = event_target:shroudwalker_enclave_country
		room = shroudwalkers_room
	}

	is_triggered_only = yes

	trigger = {
		owner = {
			has_origin = origin_shroudwalker_apprentice
		}
		fromfrom = {
			has_star_flag = shroudwalker_enclave_system
		}
		NOT = {
			owner = {
				has_country_flag = teachers_origin_meet_enclave
			}
		}
	}

	immediate = {
		owner = {
			set_country_flag = teachers_origin_meet_enclave
		}
	}

	option = {
		name = EXCELLENT
	}
}

## Teachers of the Shroud - Origin Event - Player Empire builds Shroud Beacon
country_event = {
	id = origin.5625
	title = "origin.5625.name"
	desc = {
		trigger = {
			NOT = { exists = event_target:shroudwalker_system_owner_closed }
		}
		text = "origin.5625.a.desc"
	}
	desc = {
		trigger = {
			exists = event_target:shroudwalker_system_owner_closed
		}
		text = "origin.5625.b.desc"
	}
	picture = GFX_evt_shroud_tunnel
	show_sound = event_mystic_reveal
	location = FROM

	is_triggered_only = yes

	trigger = {
		has_origin = origin_shroudwalker_apprentice
		NOT = { has_country_flag = built_first_shroud_tunnel }
		any_owned_starbase = {
			has_starbase_building = shroud_beacon
		}
	}

	immediate = {
		event_target:shroudwalker_enclave_country = {
			set_country_flag = shroud_beacon@root
		}
		if = {
			limit = {
				exists = event_target:shroudwalker_enclave_system
				event_target:shroudwalker_enclave_system = {
					exists = owner
					owner = { has_closed_borders = root }
				}
			}
			event_target:shroudwalker_enclave_system = {
				owner = {
					save_event_target_as = shroudwalker_system_owner_closed
				}
			}
		}
		owner = {
			set_country_flag = built_first_shroud_tunnel
			add_seen_bypass_type = shroud_tunnel
		}
	}

	option = {
		trigger = {
			NOT = { exists = event_target:shroudwalker_system_owner_closed }
		}
		name = "origin.5625.a.option"
	}

	option = {
		trigger = {
			exists = event_target:shroudwalker_system_owner_closed
		}
		name = UNDERSTOOD
	}
}

##################
# IMPERIAL VASSAL
##################

# Start / Setup Event
country_event = {
	id = origin.5700

	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_origin = origin_imperial_vassal
	}

	immediate = {
		if = {
			limit = {
				NOT = {
					closest_system = {
						limit = { has_star_flag = overlord_empire_flag }
						max_steps = 5
					}
				}
			}
			capital_scope.solar_system = {
				spawn_system = {
					min_distance = 30
					max_distance = 80
					min_jumps = 2
					max_jumps = 3
					hyperlane = yes
					initializer = overlord_system_8_init
				}
			}
		}
		# Have met aliens (their liege)
		set_country_flag = first_contact_event
		set_country_flag = Story2 # Already encountered spacefarers

		event_target:origin_imperial_homeland_country = {
			every_subject = {
				establish_communications_no_message = root
				every_system_within_border = {
					set_surveyed = {
						surveyed = yes
						surveyor = root
					}
				}
			}
			establish_communications_no_message = root
			every_system_within_border = {
				set_surveyed = {
					surveyed = yes
					surveyor = root
				}
			}
		}
		set_subject_of = {
			who = event_target:origin_imperial_homeland_country
		}
		overlord = {
			add_opinion_modifier = {
				modifier = opinion_imperial_vassal_ai_opinion
				who = root
			}
		}
		random_agreement = {
			limit = {
				owner = { is_same_value = root.overlord }
				target = { is_same_value = root }
			}
			set_agreement_terms = {
				subject_diplomacy = subject_can_do_diplomacy
				subject_integration = subject_can_not_be_integrated
				subject_expand = subject_can_expand_with_tithe
				subject_holdings_limit = subject_holdings_limit_1
				joins_subject_wars = joins_subject_wars_defensive
				joins_overlord_wars = joins_overlord_wars_none
			}
		}
	}
}

# Choose Vassal Specialization & Intro Event Chain
country_event = {
	id = origin.5703
	title = TRANSMISSION
	desc = origin.5703.desc

	diplomatic = yes

	is_triggered_only = yes

	picture_event_data = {
		portrait = event_target:overlord_empire
		planet_background = event_target:overlord_empire
		graphical_culture = event_target:overlord_empire
		city_level = event_target:overlord_empire
		room = event_target:overlord_empire.ruler
	}

	trigger = {
		has_origin = origin_imperial_vassal
		is_ai = no
	}

	immediate = {
		overlord = { save_event_target_as = overlord_empire }
	}

	option = {
		name = origin.5703.a
		icon = {
			icon = GFX_option_icon_hostile
			text = dialog_hostile_overlord
		}
		set_country_flag = imperial_fiefdom_harsh_response
		event_target:overlord_empire = {
			add_opinion_modifier = {
				who = root
				modifier = opinion_imperial_vassal_harsh_response_overlord_opinion
			}
		}
	}
	option = {
		name = origin.5703.b
		default_hide_option = yes
		icon = {
			icon = GFX_option_icon_isolationist
			text = dialog_wary_overlord
		}
	}
	option = {
		name = origin.5703.c
		icon = {
			icon = GFX_option_icon_friendly
			text = dialog_friendly_overlord
		}
		set_country_flag = imperial_fiefdom_grateful_response
		event_target:overlord_empire = {
			add_opinion_modifier = {
				who = root
				modifier = opinion_imperial_vassal_grateful_response_overlord_opinion
			}
		}
	}

	after = {
		hidden_effect = {
			country_event = { id = origin.5705 }
		}
	}
}

country_event = {
	id = origin.5705
	title = TRANSMISSION
	desc = {
		trigger = {
			has_country_flag = imperial_fiefdom_harsh_response
		}
		text = origin.5705.desc.harsh
	}
	desc = {
		trigger = {
			has_country_flag = imperial_fiefdom_grateful_response
		}
		text = origin.5705.desc.grateful
	}
	desc = {
		trigger = {
			has_country_flag = imperial_fiefdom_reconsider_response
		}
		text = origin.5705.desc.reconsider
	}
	desc = {
		trigger = {
			NOR = {
				has_country_flag = imperial_fiefdom_harsh_response
				has_country_flag = imperial_fiefdom_grateful_response
				has_country_flag = imperial_fiefdom_reconsider_response
			}
		}
		text = origin.5705.desc
	}

	diplomatic = yes

	is_triggered_only = yes

	picture_event_data = {
		portrait = event_target:overlord_empire
		planet_background = event_target:overlord_empire
		graphical_culture = event_target:overlord_empire
		city_level = event_target:overlord_empire
		room = event_target:overlord_empire.ruler
	}

	trigger = {
		has_origin = origin_imperial_vassal
		is_ai = no
	}

	option = {
		name = origin.5705.a
		origin_imperial_fiefdom_bulwark_specialization_effect = yes
	}
	option = {
		name = origin.5705.b
		hidden_effect = {
			country_event = { id = origin.5706 }
		}
	}
	option = {
		name = origin.5705.c
		default_hide_option = yes
		origin_imperial_fiefdom_scholarium_specialization_effect = yes
	}
	option = {
		name = origin.5705.d
		hidden_effect = {
			country_event = { id = origin.5707 }
		}
	}
	option = {
		name = origin.5705.e
		origin_imperial_fiefdom_prospectorium_specialization_effect = yes
	}
	option = {
		name = origin.5705.f
		hidden_effect = {
			country_event = { id = origin.5708 }
		}
	}

	after = {
		remove_country_flag = imperial_fiefdom_harsh_response
		remove_country_flag = imperial_fiefdom_grateful_response
	}
}

country_event = { # Learn more about Bulwarks
	id = origin.5706
	title = TRANSMISSION
	desc = origin.5706.desc

	diplomatic = yes

	is_triggered_only = yes

	picture_event_data = {
		portrait = event_target:overlord_empire
		planet_background = event_target:overlord_empire
		graphical_culture = event_target:overlord_empire
		city_level = event_target:overlord_empire
		room = event_target:overlord_empire.ruler
	}

	option = {
		name = origin.5706.a
		default_hide_option = yes
		origin_imperial_fiefdom_bulwark_specialization_effect = yes
	}
	option = {
		name = origin.5706.b
		hidden_effect = {
			country_event = { id = origin.5705 }
			set_country_flag = imperial_fiefdom_reconsider_response
		}
	}
}

country_event = { # Learn more about Scholaria
	id = origin.5707
	title = TRANSMISSION
	desc = origin.5707.desc

	diplomatic = yes

	is_triggered_only = yes

	picture_event_data = {
		portrait = event_target:overlord_empire
		planet_background = event_target:overlord_empire
		graphical_culture = event_target:overlord_empire
		city_level = event_target:overlord_empire
		room = event_target:overlord_empire.ruler
	}

	option = {
		name = origin.5707.a
		default_hide_option = yes
		origin_imperial_fiefdom_scholarium_specialization_effect = yes
	}
	option = {
		name = origin.5707.b
		hidden_effect = {
			country_event = { id = origin.5705 }
			set_country_flag = imperial_fiefdom_reconsider_response
		}
	}
}

country_event = { # Learn more about Prospectoria
	id = origin.5708
	title = TRANSMISSION
	desc = origin.5708.desc

	diplomatic = yes

	is_triggered_only = yes

	picture_event_data = {
		portrait = event_target:overlord_empire
		planet_background = event_target:overlord_empire
		graphical_culture = event_target:overlord_empire
		city_level = event_target:overlord_empire
		room = event_target:overlord_empire.ruler
	}

	option = {
		name = origin.5708.a
		default_hide_option = yes
		origin_imperial_fiefdom_prospectorium_specialization_effect = yes
	}
	option = {
		name = origin.5708.b
		hidden_effect = {
			country_event = { id = origin.5705 }
			set_country_flag = imperial_fiefdom_reconsider_response
		}
	}
}

# AI Setup
country_event = {
	id = origin.5710

	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_origin = origin_imperial_vassal
		is_ai = yes
	}

	immediate = {
		overlord = { save_event_target_as = overlord_empire }

		if = { # Influence reduction modifier
			limit = {
				NOT = { has_country_flag = origin_imperial_vassal_rival_country }
			}
			add_modifier = {
				modifier = imperial_vassal_ai_modifier
				days = -1
			}
		}

		# Opinion Modifiers
		add_opinion_modifier = {
			modifier = opinion_imperial_overlord_ai_opinion
			who = event_target:overlord_empire
		}
		event_target:overlord_empire = {
			every_subject = {
				limit = {
					is_ai = no
				}
				root = {
					add_opinion_modifier = {
						modifier = opinion_imperial_vassal_ai_opinion
						who = prev
					}
				}
			}
		}

		random_agreement = { # Agreement Terms with Overlord
			limit = {
				owner = { is_same_value = root.overlord }
				target = { is_same_value = root }
			}
			set_agreement_terms = { # Generic values everyone gets
				subject_integration = subject_can_not_be_integrated
				subject_holdings_limit = subject_holdings_limit_1
				joins_subject_wars = joins_subject_wars_all
				joins_overlord_wars = joins_overlord_wars_none
			}
			if = { # Rival Country specific
				limit = {
					root = { has_country_flag = origin_imperial_vassal_rival_country }
				}
				set_agreement_terms = {
					subject_diplomacy = subject_can_do_diplomacy
				}
			}
			else = { # Rest
				set_agreement_terms = {
					subject_diplomacy = subject_can_not_do_diplomacy
				}
				random_list = {
					1 = {
						set_agreement_terms = {
							subject_expand = subject_cannot_expand
						}
					}
					1 = {
						set_agreement_terms = {
							subject_expand = subject_can_expand_with_tithe
						}
					}
				}
			}
		}

		if = { # Rival Country bonuses
			limit = {
				has_country_flag = origin_imperial_vassal_rival_country
			}
			create_fleet = {
				effect = {
					set_owner = root
					create_ship = {
						name = random
						random_existing_design = science
					}
					set_location = root.capital_star
				}
			}
			create_fleet = {
				effect = {
					set_owner = root
					create_ship = {
						name = random
						random_existing_design = constructor
					}
					set_location = root.capital_star
				}
			}
			create_fleet = {
				effect = {
					set_owner = root
					while = {
						count = 3
						create_ship = {
							name = random
							design = NAME_Dagger
						}
					}
					set_location = root.capital_star
				}
			}
			add_resource = {
				energy = 2000
				food = 1000
				minerals = 1000
				influence = 300
			}
		}

		# Holding Building
		capital_scope = {
			add_holding = {
				holding = holding_garrison
				owner = event_target:overlord_empire
			}
		}
	}
}

## Overlord Dissolution Events
# Pre-Event
country_event = { # Overlord
	id = origin.5715
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_origin = origin_imperial_vassal_overlord
		years_passed >= 35
	}

	immediate = {
		country_event = {
			id = origin.5720
			days = 1800
			random = 9125
		}
	}
}

# Previous Leader dies, succession crisis
country_event = { # Overlord version
	id = origin.5720
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_origin = origin_imperial_vassal_overlord
	}

	immediate = {
		heir = {
			save_event_target_as = overlord_heir
		}
		ruler = {
			save_event_target_as = overlord_ruler
			kill_leader = { show_notification = no }
		}
		country_event = {
			id = origin.5730
			days = 360
			random = 1800
		}
		every_subject = {
			country_event = {
				id = origin.5725
			}
		}
	}
}

country_event = { # Vassal version
	id = origin.5725
	title = origin.5725.title
	desc = origin.5725.desc
	picture = GFX_evt_arguing_senate

	is_triggered_only = yes

	trigger = {
		has_origin = origin_imperial_vassal
	}

	option = {
		name = origin.5725.a
	}
}

# Dissolution of the Empire
country_event = { # Overlord Version
	id = origin.5730
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_origin = origin_imperial_vassal_overlord
	}

	immediate = {
		save_event_target_as = previous_overlord
		set_country_flag = origin_imperial_vassal_ex_overlord
		set_origin = origin_default
		every_megastructure = {
			limit = {
				is_megastructure_type = gateway_derelict
			}
			solar_system = {
				spawn_megastructure = {
					type = "gateway_ruined"
					coords_from = prev
				}
				set_star_flag = abandoned_gateway
			}
			remove_megastructure = this
		}
		change_government = {
			authority = auth_dictatorial
			civics = random
		}
		every_subject = { # Release and notify current subjects
			if = {
				limit = {
					is_ai = yes
				}
				set_subject_of = { who = none }
			}
			country_event = { id = origin.5735 }
		}
		while = { # iterate through all splintering worlds
			limit = {
				any_owned_planet = { is_capital = no }
			}
			random_system_within_border = { # we want a country per colonized system
				limit = { is_capital_system = no }
				random_system_planet = {
					limit = { is_colony = yes }
					create_country = {
						name = random
						type = default
						authority = random
						civics = random
						species = root.species
						ethos = random
						origin = origin_default
						day_zero_contact = no
						effect = {
							set_country_flag = origin_imperial_vassal_ex_overlord
							set_country_flag = origin_imperial_vassal_ex_overlord@event_target:previous_overlord # also unique in case of MP (while the overlord survives...)
							set_timed_country_flag = { flag = day_0 days = 7 } # suppresses the contact events, but not notifications
							save_event_target_as = current_splinter
							# Establish Contact with previous vassals
							every_playable_country = {
								limit = {
									has_communications = root
									NOT = { has_communications = event_target:current_splinter }
								}
								establish_communications_no_message = event_target:current_splinter
							}
							every_playable_country = {
								limit = {
									NOT = { has_communications = root }
									has_active_first_contact_with = root
								}
								establish_contact = {
									who = event_target:current_splinter
									location = event_target:current_splinter.capital_star
								}
							}
							# Give them one of the previous Overlord's fleets
							root = {
								random_owned_fleet = {
									set_owner = event_target:current_splinter
								}
							}
							# Give them tech from previous Overlord
							copy_techs_from = {
								target = event_target:previous_overlord
							}
							# Give them a fleet of their own
							create_fleet = {
								effect = {
									set_owner = event_target:current_splinter
									while = {
										count = 10
										create_ship = {
											name = random
											design = NAME_Ravager
										}
									}
									set_location = event_target:current_splinter.capital_star
								}
							}
							# Give them some starting resources
							add_basic_resources_effect = { VALUE = 3000 }
							add_manufactured_resources_effect = { VALUE = 1500 }
							add_advanced_resources_effect = { VALUE = 1000 }
							# Start a war with the previous Overlord
							declare_war = {
								target = root
								name = {
									key = "NAME_Imperial_War"
								}
								attacker_war_goal = wg_subjugation
							}
						}
					}
					set_owner = event_target:current_splinter
				}
				every_system_planet = {
					limit = { is_colony = yes }
					set_owner = event_target:current_splinter
				}
				starbase = { set_owner = event_target:current_splinter }
			}
		}
	}
}

country_event = { # Vassal Version
	id = origin.5735
	title = origin.5735.title
	desc = origin.5735.desc
	picture = GFX_evt_burning_settlement
	show_sound = event_collapsing_ruins
	is_triggered_only = yes

	trigger = {
		has_origin = origin_imperial_vassal
	}

	# "Free once more"
	option = {
		name = origin.5735.a
		trigger = {
			OR = {
				is_ai = no
				is_militarist = no
				is_xenophobe = no
			}
		}
		custom_tooltip = SET_SUBJECT_OF_EFFECT_NONE_WE_VERBOSE
		hidden_effect = {
			set_subject_of = { who = none }
		}
	}
	# Take leadership
	option = {
		name = origin.5735.b
		trigger = {
			OR = {
				is_ai = no
				is_militarist = yes
				is_xenophobe = yes
			}
		}
		add_resource = { influence = -100 }
		custom_tooltip = SET_SUBJECT_OF_EFFECT_NONE_WE_VERBOSE
		custom_tooltip = origin.5735.b.tt
		hidden_effect = {
			set_subject_of = { who = none }
			every_playable_country = {
				limit = {
					OR = {
						has_country_flag = origin_imperial_vassal_ex_overlord@event_target:previous_overlord
						has_origin = origin_imperial_vassal
					}
					NOT = { is_same_value = root }
				}
				root = {
					if = {
						limit = {
							NOT = {
								has_casus_belli = {
									target = prev
									type = cb_subjugation
								}
							}
						}
						add_casus_belli = {
							type = cb_subjugation
							who = prev
							days = 10800
						}
					}
				}
			}
		}
	}
	# "We remain loyal"
	option = {
		name = origin.5735.c
		trigger = {
			is_ai = no
			NOT = {
				is_at_war_with = event_target:previous_overlord
			}
		}
		custom_tooltip = origin.5735.c.tt
		add_resource = { influence = 100 }
	}

	after = {
		if = {
			limit = {
				is_ai = yes
				NOT = { has_country_flag = origin_imperial_vassal_rival_country }
			}
			country_event = {
				id = origin.5740
				days = 15
				random = 45
			}
		}
	}
}

## AI Vassals looking for new Overlord
country_event = {
	id = origin.5740

	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_ai = yes
		has_origin = origin_imperial_vassal
		NOT = { has_country_flag = origin_imperial_vassal_rival_country }
	}

	immediate = {
		save_event_target_as = new_subject_target

		if = {
			limit = {
				any_country = {
					has_origin = origin_imperial_vassal
					is_subject = no
					relative_power = {
						who = root
						category = fleet
						value >= superior
					}
				}
			}
			random_country = {
				limit = {
					has_origin = origin_imperial_vassal
					is_subject = no
					relative_power = {
						who = root
						category = fleet
						value >= superior
					}
				}
				save_event_target_as = new_overlord_target
			}
			switch = {
				trigger = has_country_flag
				origin_imperial_vassal_technocrat_country = {
					event_target:new_overlord_target = {
						country_event = { id = origin.5745 }
					}
				}
				origin_imperial_vassal_prince_electorate_country = {
					event_target:new_overlord_target = {
						country_event = { id = origin.5750 }
					}
				}
				origin_imperial_vassal_palatinate_country = {
					event_target:new_overlord_target = {
						country_event = { id = origin.5755 }
					}
				}
				origin_imperial_vassal_league_country = {
					event_target:new_overlord_target = {
						country_event = { id = origin.5760 }
					}
				}
			}
		}
	}
}

# Technocrats
country_event = {
	id = origin.5745
	title = origin.5745.title
	desc = origin.5745.desc
	picture = GFX_evt_society_research

	is_triggered_only = yes

	trigger = {
		has_origin = origin_imperial_vassal
	}

	option = {
		name = origin.5745.a
		origin_imperial_vassal_new_overlord_eventchain_1 = yes
		add_monthly_resource_mult = {
			resource = engineering_research
			value = @tier1researchreward
			min = @tier1researchmin
			max = @tier1researchmax
		}
	}
	option = {
		name = origin.5745.b
		trigger = {
			is_ai = no
		}
		origin_imperial_vassal_new_overlord_eventchain_2 = yes
	}
}

# Prince-Electorate
country_event = {
	id = origin.5750
	title = origin.5750.title
	desc = origin.5750.desc
	picture = GFX_evt_two_sided_deal
	show_sound = evn_ove_two_sided_deal

	is_triggered_only = yes

	trigger = {
		has_origin = origin_imperial_vassal
	}

	option = {
		name = origin.5750.a
		origin_imperial_vassal_new_overlord_eventchain_1 = yes
		add_monthly_resource_mult = {
			resource = influence
			value = @tier1influencereward
			min = @tier1influencemin
			max = @tier1influencemax
		}
	}
	option = {
		name = origin.5750.b
		trigger = {
			is_ai = no
		}
		origin_imperial_vassal_new_overlord_eventchain_2 = yes
	}
}

# Palatinate
country_event = {
	id = origin.5755
	title = origin.5755.title
	desc = origin.5755.desc
	picture = GFX_evt_star_chart

	is_triggered_only = yes

	trigger = {
		has_origin = origin_imperial_vassal
	}

	option = {
		name = origin.5755.a
		origin_imperial_vassal_new_overlord_eventchain_1 = yes
		add_monthly_resource_mult = {
			resource = unity
			value = @tier1unityreward
			min = @tier1unitymin
			max = @tier1unitymax
		}
	}
	option = {
		name = origin.5755.b
		trigger = {
			is_ai = no
		}
		origin_imperial_vassal_new_overlord_eventchain_2 = yes
	}
}

# League
country_event = {
	id = origin.5760
	title = origin.5760.title
	desc = origin.5760.desc
	picture = GFX_evt_smugglers_in_bar

	is_triggered_only = yes

	trigger = {
		has_origin = origin_imperial_vassal
	}

	option = {
		name = origin.5760.a
		origin_imperial_vassal_new_overlord_eventchain_1 = yes
		add_monthly_resource_mult = {
			resource = energy
			value = @tier1materialreward
			min = @tier1materialmin
			max = @tier1materialmax
		}
	}
	option = {
		name = origin.5760.b
		trigger = {
			is_ai = no
		}
		origin_imperial_vassal_new_overlord_eventchain_2 = yes
	}
}

##################
# Fear of the Dark
##################

country_event = { # Tombola, fired every year
	id = origin.6000
	hide_window = yes

	is_triggered_only = yes
	trigger = {
		has_origin = origin_fear_of_the_dark
		event_target:fotd_seperatist_planet@root = {
			exists = owner
			owner = {
				has_country_flag = fotd_seperatist_country@root
			}
		}
		NOT = { has_country_flag = angered_seperatists }
	}

	immediate = {
		event_target:fotd_seperatist_planet@root = {
			owner = {
				save_event_target_as = fotd_habitants
			}
		}
		random_list = {
			1 = {
				modifier = {
					factor = 0
					has_country_flag = fotd_leader_cooldown
				}
				country_event = { id = origin.6005 days = 5 random = 350 } #Gain Scientist
			}
			1 = {
				modifier = {
					factor = 0
					has_country_flag = fotd_leader_cooldown
				}
				country_event = { id = origin.6006 days = 5 random = 350 } #Gain Admiral
			}
			2 = { country_event = { id = origin.6015 days = 5 random = 350 } } #Gain Technology
			2 = {
				modifier = {
					factor = 0
					has_country_flag = fotd_requested_aid_recently
				}
				country_event = { id = origin.6020 days = 5 random = 350 } #Seperatist Deficit
			}
			20 = {
				modifier = {
					factor = 0
					NOR = {
						has_deficit_situation_stage_2 = yes
						has_deficit_situation_stage_3 = yes
						has_deficit_situation_stage_4 = yes
					}
				}
				modifier = {
					factor = 0
					NOR = {
						has_country_flag = fotd_exploited_seperatists
						has_country_flag = fotd_aided_seperatists
					}
				}
				country_event = { id = origin.6025 } #Seperatists Help Player
			}
			20 = {}
		}
	}
}

country_event = { # Get Scientist
	id = origin.6005
	title = origin.6005.name
	desc = {
		trigger = {
			success_text = {
				text = origin.6005.desc.base1
				has_country_flag = base1
			}
			success_text = {
				text = origin.6005.desc.base2
				has_country_flag = base2
			}
			success_text = {
				text = origin.6005.desc.base3
				has_country_flag = base3
			}
			success_text = {
				text = origin.6005.desc.base4
				has_country_flag = base4
			}
			text = newline
			success_text = {
				text = origin.6005.desc.end1
				has_country_flag = end1
			}
			success_text = {
				text = origin.6005.desc.end2
				has_country_flag = end2
			}
			success_text = {
				text = origin.6005.desc.end3
				has_country_flag = end3
			}
			success_text = {
				text = origin.6005.desc.end4
				has_country_flag = end4
			}
		}
	}

	picture = GFX_evt_fear_of_the_dark

	trigger = {
		NOT = {
			has_country_flag = fotd_leader_cooldown
		}
	}
	is_triggered_only = yes
	immediate = {
		random_list = {
			1 = { set_country_flag = base1 }
			1 = { set_country_flag = base2 }
			1 = { set_country_flag = base3 }
			1 = { set_country_flag = base4 }
		}
		random_list = {
			1 = { set_country_flag = end1 }
			1 = { set_country_flag = end2 }
			1 = { set_country_flag = end3 }
			1 = { set_country_flag = end4 }
		}
		create_leader = {
			class = scientist
			species = event_target:fotd_habitants.species
			skill = 5
			traits = {
				0 = leader_trait_fotd_scientist
			}
		}
		last_created_leader = {
			add_trait_no_notify = leader_trait_fotd_scientist
			save_event_target_as = fotd_Leader
			exile_leader_as = fotd_Leader_exile
		}
		set_timed_country_flag = {
			flag = fotd_leader_cooldown
			days = 3600
		}
		event_target:fotd_seperatist_planet@root = {
			save_event_target_as = fotd_seperatist_planet
		}
	}

	option = {
		name = origin.6005.a
		clone_leader = {
			target = event_target:fotd_Leader
			class = scientist
		}
		last_created_leader = {
			save_event_target_as = fotd_Leader_accepted
		}
		custom_tooltip = origin.6005.a.tt
		hidden_effect = {
			country_event = { id = origin.6010 days = 1800 random = 200 }
		}
	}
	option = {
		name = origin.6005.b
		hidden_effect = {
			event_target:fotd_Leader = {
				kill_leader = { show_notification = no }
			}
		}
	}
	after = {
		remove_country_flag = base1
		remove_country_flag = base2
		remove_country_flag = base3
		remove_country_flag = base4
		remove_country_flag = end1
		remove_country_flag = end2
		remove_country_flag = end3
		remove_country_flag = end4
	}
}

country_event = { # Get Admiral
	id = origin.6006
	title = origin.6005.name
	desc = {
		trigger = {
			success_text = {
				text = origin.6006.desc.base1
				has_country_flag = base1
			}
			success_text = {
				text = origin.6006.desc.base2
				has_country_flag = base2
			}
			success_text = {
				text = origin.6006.desc.base3
				has_country_flag = base3
			}
			success_text = {
				text = origin.6006.desc.base4
				has_country_flag = base4
			}
		}
	}

	picture = GFX_evt_fear_of_the_dark
	show_sound = evn_fc_disunity_origin

	is_triggered_only = yes
	immediate = {
		random_list = {
			1 = { set_country_flag = base1 }
			1 = { set_country_flag = base2 }
			1 = { set_country_flag = base3 }
			1 = { set_country_flag = base4 }
		}
		create_leader = {
			class = commander
			species = event_target:fotd_habitants.species
			skill = 5
			traits = {
				0 = leader_trait_fotd_commander
			}
		}
		last_created_leader = {
			add_trait_no_notify = leader_trait_fotd_commander
			save_event_target_as = fotd_Leader
			exile_leader_as = fotd_Leader_exile
		}
		set_timed_country_flag = {
			flag = fotd_leader_cooldown
			days = 3600
		}
		event_target:fotd_seperatist_planet@root = {
			save_event_target_as = fotd_seperatist_planet
		}
	}

	option = {
		name = origin.6006.a
		clone_leader = {
			target = event_target:fotd_Leader
			class = commander
		}
		last_created_leader = {
			save_event_target_as = fotd_Leader_accepted
		}
		custom_tooltip = origin.6006.a.tt
		hidden_effect = {
			country_event = { id = origin.6010 days = 1800 random = 200 }
		}
	}
	option = {
		name = origin.6006.b
		hidden_effect = {
			event_target:fotd_Leader = {
				kill_leader = { show_notification = no }
			}
		}
	}
	after = {
		remove_country_flag = base1
		remove_country_flag = base2
		remove_country_flag = base3
		remove_country_flag = base4
	}
}

country_event = { # Return the Leader
	id = origin.6010
	title = origin.6010.name
	desc = origin.6010.desc

	picture = GFX_evt_fear_of_the_dark
	show_sound = evn_fc_disunity_origin

	is_triggered_only = yes

	trigger = {
		exists = event_target:fotd_Leader_accepted
		event_target:fotd_seperatist_planet@root = {
			owner = {
				NOT = {
					is_same_value = root
				}
			}
		}
	}

	immediate = {
		event_target:fotd_seperatist_planet@root = {
			save_event_target_as = fotd_seperatist_planet
		}
	}
	option = { # Yes
		name = origin.6010.a
		custom_tooltip = origin.6010.a.tt
		hidden_effect = {
			event_target:fotd_Leader_accepted = { kill_leader = { show_notification = no } }
		}
	}
	option = { # No
		name = origin.6010.b
		allow = {
			resource_stockpile_compare = {
				resource = unity
				value >= 500
			}
		}
		event_target:fotd_Leader_accepted = {
			add_trait = leader_trait_stubborn
		}
		owner = {
			add_resource = { unity = -500 }
		}
		hidden_effect = {
			country_event = { id = origin.6011 days = 1800 random = 60 }
		}
	}
}

country_event = { # Return the Leader Escalated
	id = origin.6011
	title = origin.6010.name
	desc = origin.6011.desc

	picture = GFX_evt_fear_of_the_dark
	show_sound = evn_fc_disunity_origin

	is_triggered_only = yes

	trigger = {
		exists = event_target:fotd_Leader_accepted
	}
	immediate = {
		event_target:fotd_seperatist_planet@root = {
			save_event_target_as = fotd_seperatist_planet
		}
	}

	option = { # Yes
		name = origin.6010.a
		custom_tooltip = origin.6010.a.tt
		hidden_effect = {
			event_target:fotd_Leader_accepted = { kill_leader = { show_notification = no } }
		}
	}
	option = { # No
		name = origin.6010.b
		allow = {
			resource_stockpile_compare = {
				resource = unity
				value >= 1000
			}
		}
		event_target:fotd_Leader_accepted = {
			if = {
				limit = {
					NOT = { has_trait_tier1or2 = { TRAIT = leader_trait_substance_abuser } }
				}
				add_trait = leader_trait_substance_abuser
				owner = {
					add_resource = { unity = -1000 }
					hidden_effect = {
						random_list = {
							30 = {}
							70 = {
								country_event = { id = origin.6011 days = 960 random = 60 }
							}
						}
					}
				}
			}
			else_if = {
				limit = {
					NOT = { has_trait = leader_trait_arrested_development }
				}
				add_trait = leader_trait_arrested_development
				owner = {
					add_resource = { unity = -1000 }
					hidden_effect = {
						country_event = { id = origin.6011 days = 960 random = 60 }
					}
				}
			}
			else_if = {
				limit = {
					has_trait = leader_trait_arrested_development
					has_trait_tier1or2 = { TRAIT = leader_trait_substance_abuser }
				}
				owner = {
					add_resource = { unity = -1000 }
					hidden_effect = {
						country_event = { id = origin.6012 days = 960 random = 60 }
					}
				}
			}
		}
	}
}

country_event = { # Leader Gone
	id = origin.6012
	title = origin.6012.name
	desc = origin.6012.desc

	picture = GFX_evt_fear_of_the_dark

	is_triggered_only = yes

	trigger = {
		exists = event_target:fotd_Leader
	}

	option = { # Yes
		name = UNFORTUNATE
		custom_tooltip = origin.6012.a.tt
		hidden_effect = {
			event_target:fotd_Leader_accepted = { kill_leader = { show_notification = no } }
		}
		owner = {
			add_resource = { unity = -2000 }
		}
	}
}

country_event = { # Tech
	id = origin.6015
	title = origin.6015.name
	desc = origin.6015.desc

	picture = GFX_evt_fear_of_the_dark
	show_sound = evn_fc_disunity_origin

	is_triggered_only = yes

	immediate = {
		event_target:fotd_seperatist_planet@root = {
			owner = {
				save_event_target_as = seperatist_country
			}
		}
		random_list = {
			2 = { set_country_flag = terraforming_tech }
			1 = { set_country_flag = unity_tech }
			2 = { set_country_flag = cloaking_tech }
			1 = { set_country_flag = laser_tech }
			2 = { set_country_flag = mining_tech }
			1 = { set_country_flag = building_tech }
		}
		random_list = {
			5 = {
				modifier = {
					factor = 0
					NOT = {
						any_system = { #If there is no system within 20 jumps of your capital which you have not surveyed this will not fire.
							is_surveyed = {
								who = root
								status = no
							}
							distance = {
								source = root.capital_scope
								use_bypasses = no
								max_jumps = 20
							}
						}
					}
				}
				set_country_flag = slowed_science_ships
			}
			5 = {
				modifier = {
					factor = 0
					NOT = {
						any_active_first_contact = {
							exists = this
						}
					}
				}
				set_country_flag = slowed_first_contact
			}
			2 = {
				modifier = {
					factor = 0
					num_defensive_pacts < 1
				}
				set_country_flag = break_defensive_pact
			}

			2 = {
				modifier = {
					factor = 0
					num_migration_pacts < 1
				}
				set_country_flag = break_migration_pact
			}
			2 = {
				set_country_flag = support_speratists
			}
			5 = {
				modifier = {
					factor = 0
					NOT = { has_country_flag = breached_shroud }
				}
				set_country_flag = stop_communing_with_shroud
			}
			2 = {
				modifier = {
					factor = 0
					NOT = { exists = federation }
				}
				set_country_flag = leave_federation
			}
			2 = {
				modifier = {
					factor = 0
					is_galactic_community_member = no
				}
				set_country_flag = have_no_voice
			}
		}
	}

	option = {
		name = origin.6015.a
		add_fotd_tech = yes
		if = {
			limit = {
				NOT = {
					has_country_flag = stop_communing_with_shroud
				}
			}
			fotd_tech_cost = yes
		}
		else = {
			hidden_effect = {
				fotd_tech_cost = yes
			}
			custom_tooltip = origin.6015.a.tt
		}
	}
	option = {
		name = origin.6015.b
		allow = {
			resource_stockpile_compare = {
				resource = influence
				value >= 50
				mult = value:decades_since_game_start|MINIMUM|1|MAXIMUM|5|
			}
		}
		add_resource = {
			influence = -50
			mult = value:decades_since_game_start|MINIMUM|1|MAXIMUM|5|
		}
		add_fotd_tech_progress = yes
	}
	option = {
		name = origin.6015.c
	}
	after = {
		remove_country_flag = terraforming_tech
		remove_country_flag = unity_tech
		remove_country_flag = cloaking_tech
		remove_country_flag = laser_tech
		remove_country_flag = mining_tech
		remove_country_flag = building_tech
		remove_country_flag = slowed_science_ships
		remove_country_flag = slowed_first_contact
		remove_country_flag = break_defensive_pact
		remove_country_flag = break_migration_pact
		remove_country_flag = support_speratists
		remove_country_flag = stop_communing_with_shroud
		remove_country_flag = leave_federation
		remove_country_flag = have_no_voice
		remove_country_flag = end_violence
	}
}

country_event = { # Requests aid
	id = origin.6020
	title = origin.6020.name
	desc = origin.6020.desc
	picture = GFX_evt_deficit
	show_sound = event_bad_omen
	location = event_target:fotd_seperatist_planet

	is_triggered_only = yes
	immediate = {
		event_target:fotd_seperatist_planet@root = {
			save_event_target_as = fotd_seperatist_planet
		}
		random_list = {
			1 = {
				modifier = {
					factor = 2
					is_lithoid_empire = yes
				}
				set_country_flag = mineral_seperatist_deficit
			}
			1 = {
				modifier = {
					factor = 0
					is_lithoid_empire = yes
				}
				modifier = {
					factor = 2
					is_catalytic_empire = yes
				}
				set_country_flag = food_seperatist_deficit
			}
			1 = {
				modifier = {
					factor = 2
					is_megacorp = yes
				}
				set_country_flag = energy_seperatist_deficit
			}
			1 = {
				modifier = {
					factor = 2
					is_at_war = no
				}
				set_country_flag = alloy_seperatist_deficit
			}
			1 = {
				modifier = {
					factor = 2
					is_at_war = yes
				}
				set_country_flag = consumer_goods_seperatist_deficit
			}
		}
		set_timed_country_flag = {
			flag = fotd_requested_aid_recently
			days = 3600
		}
	}

	option = { #Help
		allow = {
			support_seperatist_deficit_trigger = yes
		}
		name = origin.6020.a
		support_seperatist_deficit_effect = yes
		custom_tooltip = origin.6020.a.tt
		remove_country_flag = fotd_exploited_seperatists
		set_country_flag = fotd_aided_seperatists
	}

	option = { #Extort
		name = origin.6020.b
		allow = {
			support_seperatist_deficit_trigger = yes
		}
		add_modifier = {
			modifier = fotd_extorted_seperatists
			days = 3600
		}
		support_seperatist_deficit_effect = yes
		custom_tooltip = origin.6020.a.tt

		set_timed_country_flag = {
			flag = angered_seperatists
			days = 3600
		}
		set_country_flag = fotd_exploited_seperatists
		remove_country_flag = fotd_aided_seperatists
	}
	option = { #Ignore
		name = origin.6020.c
		event_target:fotd_seperatist_planet = {
			while = {
				count = 1
				random_owned_pop = {
					kill_pop = yes
				}
			}
		}
		add_modifier = {
			modifier = fotd_rationed_living
			days = 3600
		}
	}
	after = {
		remove_country_flag = mineral_seperatist_deficit
		remove_country_flag = food_seperatist_deficit
		remove_country_flag = energy_seperatist_deficit
		remove_country_flag = alloy_seperatist_deficit
		remove_country_flag = consumer_goods_seperatist_deficit
	}
}

country_event = { # Seperatists come to your aid
	id = origin.6025
	title = origin.6025.name
	desc = {
		trigger = {
			has_country_flag = fotd_aided_seperatists
		}
		text = origin.6025.desc.helped
	}
	desc = {
		trigger = {
			has_country_flag = fotd_exploited_seperatists
		}
		text = origin.6025.desc.didnthelp
	}

	picture = GFX_evt_fear_of_the_dark

	is_triggered_only = yes

	immediate = {
		event_target:fotd_seperatist_planet@root = {
			save_event_target_as = fotd_seperatist_planet
		}
		if = {
			limit = {
				has_country_flag = fotd_exploited_seperatists
			}
			random_list = {
				5 = {
					modifier = {
						factor = 0
						NOT = {
							any_system = { #If there is no system within 20 jumps of your capital which you have not surveyed this will not fire.
								is_surveyed = {
									who = root
									status = no
								}
								distance = {
									source = root.capital_scope
									use_bypasses = no
									max_jumps = 20
								}
							}
						}
					}
					set_country_flag = slowed_science_ships
				}
				5 = {
					modifier = {
						factor = 0
						NOT = {
							any_active_first_contact = {
								exists = this
							}
						}
					}
					set_country_flag = slowed_first_contact
				}
				2 = {
					modifier = {
						factor = 0
						num_defensive_pacts < 1
					}
					set_country_flag = break_defensive_pact
				}
				2 = {
					modifier = {
						factor = 0
						num_migration_pacts < 1
					}
					set_country_flag = break_migration_pact
				}
				2 = {
					set_country_flag = support_speratists
				}
				5 = {
					modifier = {
						factor = 0
						NOT = { has_country_flag = breached_shroud }
					}
					set_country_flag = stop_communing_with_shroud
				}
				2 = {
					modifier = {
						factor = 0
						NOT = { exists = federation }
					}
					set_country_flag = leave_federation
				}
				2 = {
					modifier = {
						factor = 0
						is_galactic_community_member = no
					}
					set_country_flag = have_no_voice
				}
			}
		}
	}

	option = {
		name = origin.6025.a
		trigger = {
			has_country_flag = fotd_aided_seperatists
		}
		seperatist_help_player_deficit_effect = yes
	}
	option = {
		trigger = {
			has_country_flag = fotd_exploited_seperatists
		}
		name = origin.6025.b
		seperatist_help_player_deficit_effect = yes
		if = {
			limit = {
				NOT = {
					has_country_flag = stop_communing_with_shroud
				}
			}
			fotd_tech_cost = yes
		}
		else = {
			hidden_effect = {
				fotd_tech_cost = yes
			}
			custom_tooltip = origin.6015.a.tt
		}
	}
	option = {
		name = origin.6025.c
	}

	after = {
		remove_country_flag = slowed_science_ships
		remove_country_flag = slowed_first_contact
		remove_country_flag = break_defensive_pact
		remove_country_flag = break_migration_pact
		remove_country_flag = support_speratists
		remove_country_flag = stop_communing_with_shroud
		remove_country_flag = leave_federation
		remove_country_flag = have_no_voice
		remove_country_flag = end_violence
		remove_country_flag = fotd_exploited_seperatists
		remove_country_flag = fotd_aided_seperatists
	}
}

country_event = { # Encounter Alien Life
	id = origin.6030
	title = origin.6030.name
	desc = origin.6030.desc

	picture = GFX_evt_fear_of_the_dark
	show_sound = evn_fc_disunity_origin

	is_triggered_only = yes
	trigger = {
		NOT = {
			has_country_flag = encountered_alien_life
		}
		any_planet_within_border = {
			has_planet_flag = fotd_seperatist_planet@root
			owner = {
				has_country_flag = fotd_seperatist_country@root
			}
		}
	}
	immediate = {
		set_country_flag = encountered_alien_life
		event_target:fotd_seperatist_planet@root = {
			save_event_target_as = fotd_seperatist_planet
		}
	}

	option = {
		name = origin.6030.a
		if = {
			limit = {
				NOT = {
					has_modifier = fotd_alien_shock
				}
			}
			add_modifier = {
				modifier = fotd_alien_shock
				days = 1800
			}
		}
	}
	option = {
		name = origin.6030.b
		set_timed_country_flag = {
			flag = angered_seperatists
			days = 3600
		}
	}
}

country_event = { # Encounter Sapient Alien Life
	id = origin.6040
	title = origin.6040.name
	desc = origin.6040.desc

	picture = GFX_evt_fear_of_the_dark
	show_sound = evn_fc_disunity_origin

	is_triggered_only = yes
	trigger = {
		NOT = {
			has_country_flag = encountered_sapient_alien_life
		}
		any_planet_within_border = {
			has_planet_flag = fotd_seperatist_planet@root
			owner = {
				has_country_flag = fotd_seperatist_country@root
			}
		}
	}

	immediate = {
		set_country_flag = encountered_alien_life
		set_country_flag = encountered_sapient_alien_life
		event_target:fotd_seperatist_planet@root = {
			save_event_target_as = fotd_seperatist_planet
		}
	}
	option = {
		name = origin.6040.a
		add_modifier = {
			modifier = fotd_secure_contact
			years = 5
		}
		set_country_flag = fotd_secured_contact
	}

	option = {
		name = origin.6040.b
		if = {
			limit = {
				NOT = {
					has_modifier = fotd_alien_shock
				}
			}
			add_modifier = {
				modifier = fotd_alien_shock
				days = 1800
			}
		}
	}
}

first_contact_event = {
	id = origin.6044
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			owner = {
				has_origin = origin_fear_of_the_dark
				NOT = { has_country_flag = finished_sapient_first_contact }
			}
			from = {
				has_origin = origin_fear_of_the_dark
				NOT = { has_country_flag = finished_sapient_first_contact }
			}
		}
		from = { is_country_type = default }
		owner = { is_country_type = default }
	}

	immediate = {
		if = {
			limit = {
				owner = {
					has_origin = origin_fear_of_the_dark
					NOT = { has_country_flag = finished_sapient_first_contact }
				}
			}
			owner = {
				country_event = {
					id = origin.6045
					days = 14
					scopes = { from = from }
				}
			}
		}
	}
}

country_event = { # Finishing First Contact
	id = origin.6045
	title = origin.6045.name
	desc = {
		trigger = { has_country_flag = fotd_secured_contact }
		text = origin.6045.desc.secured
	}
	desc = {
		trigger = { NOT = { has_country_flag = fotd_secured_contact } }
		text = origin.6045.desc.notsecured
	}

	location = event_target:target_system

	picture = GFX_evt_machine_space_battle
	show_sound = event_ship_explosion

	is_triggered_only = yes

	trigger = {
		NOT = {
			has_country_flag = finished_sapient_first_contact
		}
		any_planet_within_border = {
			has_planet_flag = fotd_seperatist_planet@root
			owner = {
				has_country_flag = fotd_seperatist_country@root
			}
		}
		From = { is_country_type = default }
		capital_scope = {
			closest_system = {
				limit = {
					exists = space_owner
					space_owner = {
						is_same_value = from
					}
					any_system_planet = {
						NOT = { is_capital = yes }
					}
				}
				max_steps = 20
			}
		}
	}

	immediate = {
		set_country_flag = encountered_alien_life
		set_country_flag = finished_sapient_first_contact
		capital_scope = {
			closest_system = {
				limit = {
					exists = space_owner
					space_owner = {
						is_same_value = from
					}
					any_system_planet = {
						NOT = { is_capital = yes }
					}
				}
				max_steps = 20
				save_event_target_as = target_system
			}
		}
		event_target:fotd_seperatist_planet@root = {
			save_event_target_as = fotd_seperatist_planet
		}
	}

	option = { #Stop them and Apologize
		trigger = {
			has_country_flag = fotd_secured_contact
		}
		name = origin.6045.a
		from = {
			add_opinion_modifier = {
				who = root
				modifier = fotd_apoligized
			}
		}
	}
	option = { #Explosion happens, reprimand Seperatists
		name = {
			text = origin.6045.b.secured
			trigger = {
				has_country_flag = fotd_secured_contact
			}
		}
		name = {
			text = origin.6045.b.notsecured
			trigger = {
				NOT = { has_country_flag = fotd_secured_contact }
			}
		}
		custom_tooltip = origin.6045.starbase_destroyed.tt
		from = {
			add_opinion_modifier = {
				who = root
				modifier = fotd_destroyed_starbase
			}
		}
		hidden_effect = {
			event_target:target_system = {
				starbase.fleet = { destroy_fleet = this }
			}
			from = {
				country_event = { id = origin.6046 } #They blew up our starbase!
			}
		}
	}
	option = { #Use this chance
		allow = {
			is_pacifist = no
		}
		name = origin.6045.c
		custom_tooltip = origin.6045.c.tt
		hidden_effect = {
			event_target:target_system = {
				starbase.fleet = { destroy_fleet = this }
			}
			set_visited = event_target:target_system
			declare_war = {
				target = from
				attacker_war_goal = wg_fotd_really_bad_contact
			}
			create_fleet = {
				effect = {
					set_owner = root
					while = {
						count = 5
						create_ship = {
							name = random
							design = NAME_fotd_corvette_1
						}
					}
					set_location = event_target:target_system
					set_cloaking_active = yes
				}
			}
			from = {
				add_opinion_modifier = {
					who = root
					modifier = fotd_destroyed_starbase
				}
			}
			from = {
				country_event = { id = origin.6047 } #They blew up our starbase and declared war!
			}
		}
	}
}

country_event = { #They blew up our starbase
	id = origin.6046
	title = origin.6046.name
	desc = origin.6046.desc
	picture = GFX_evt_fear_of_the_dark
	show_sound = event_ship_explosion

	is_triggered_only = yes

	show_sound = event_ship_explosion
	location = event_target.target_system

	option = {
		name = origin.6046.a
		ai_chance = {
			weight = 100
		}
	}
	option = {
		allow = {
			is_pacifist = no
		}
		name = origin.6046.b
		declare_war = {
			target = from
			attacker_war_goal = wg_fotd_really_bad_contact
		}
	}
}

country_event = { #They blew up our starbase and are coming for us.
	id = origin.6047
	title = origin.6047.name
	desc = origin.6047.desc
	picture = GFX_evt_fear_of_the_dark

	is_triggered_only = yes

	show_sound = event_red_alert

	option = {
		name = BATTLESTATIONS
	}
}

country_event = { # Joining a Federation
	id = origin.6050
	hide_window = yes

	is_triggered_only = yes
	trigger = {
		From = {
			has_origin = origin_fear_of_the_dark
			NOT = {
				has_country_flag = joined_federation
			}
			any_planet_within_border = {
				has_planet_flag = fotd_seperatist_planet@from
				owner = {
					has_country_flag = fotd_seperatist_country@from
				}
			}
			is_country_type = default
		}
	}

	immediate = {
		from = { country_event = { id = origin.6055 days = 5 } }
	}
}

country_event = {
	id = origin.6055
	title = origin.6055.name
	desc = {
		trigger = {
			has_modifier = fotd_refusal_to_work
		}
		text = origin.6055.desc.protests
	}
	desc = {
		trigger = {
			NOT = { has_modifier = fotd_refusal_to_work }
		}
		text = origin.6055.desc.noprotests
	}

	picture = GFX_evt_fear_of_the_dark
	show_sound = evn_fc_disunity_origin

	is_triggered_only = yes

	immediate = {
		set_country_flag = joined_federation
		hidden_effect = {
			if = {
				limit = {
					has_modifier = fotd_refusal_to_work
				}
				remove_modifier = fotd_refusal_to_work
				add_modifier = {
					modifier = fotd_refusal_to_work
					days = 3600
				}
				federation = {
					every_member = {
						limit = {
							NOT = {
								is_same_value = root
							}
						}
						add_opinion_modifier = {
							who = root
							modifier = fotd_antagonized
						}
					}

				}
				set_country_flag = fotd_insulted_federation
			}
		}
		event_target:fotd_seperatist_planet@root = {
			save_event_target_as = fotd_seperatist_planet
		}
	}

	option = {
		trigger = {
			NOT = {
				has_modifier = fotd_refusal_to_work
			}
		}
		name = origin.6055.a
		add_modifier = {
			modifier = fotd_refusal_to_work
			days = 3600
		}
	}

	option = {
		trigger = {
			has_country_flag = fotd_insulted_federation
		}
		name = origin.6055.b
		tooltip = {
			if = {
				limit = {
					has_modifier = fotd_refusal_to_work
				}
				federation = {
					every_member = {
						limit = {
							NOT = {
								is_same_value = root
							}
						}
						add_opinion_modifier = {
							who = root
							modifier = fotd_antagonized
						}
					}
				}
			}
		}
	}
}

country_event = { # Encounter Leviathan
	id = origin.6060
	title = origin.6060.name
	desc = origin.6060.desc

	picture = GFX_evt_fear_of_the_dark
	show_sound = evn_fc_disunity_origin

	is_triggered_only = yes
	trigger = {
		NOT = {
			has_country_flag = encountered_leviathan_life
		}
		any_planet_within_border = {
			has_planet_flag = fotd_seperatist_planet@root
			owner = {
				has_country_flag = fotd_seperatist_country@root
			}
		}
	}

	immediate = {
		set_country_flag = encountered_alien_life
		set_country_flag = encountered_leviathan_life
		event_target:fotd_seperatist_planet@root = {
			save_event_target_as = fotd_seperatist_planet
		}
	}

	option = {
		name = origin.6060.a
		custom_tooltip = origin.6060.a.tt
		if = {
			limit = {
				NOT = {
					has_modifier = fotd_alien_terrified
				}
			}
			add_modifier = {
				modifier = fotd_alien_terrified
				days = 1800
			}
		}
		hidden_effect = {
			home_planet = {
				random_owned_pop = {
					limit = {
						species = {
							is_same_value = root.species
						}
					}
					kill_pop = yes
				}
				random_owned_pop = {
					limit = {
						species = {
							is_same_value = root.species
						}
					}
					kill_pop = yes
				}
			}
			event_target:fotd_seperatist_planet@root = {
				while = {
					count = 2
					create_pop = {
						species = root.species
					}
				}
			}
		}
	}
	option = {
		name = origin.6060.b
		if = {
			limit = {
				NOT = {
					has_modifier = fotd_alien_terrified
				}
			}
			add_modifier = {
				modifier = fotd_alien_terrified
				days = 1800
			}
		}
		home_planet = {
			add_modifier = {
				modifier = fotd_forced_to_stay
				days = 1800
			}
		}
	}
}

country_event = {
	id = origin.6064
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_origin = origin_fear_of_the_dark
		NOT = {
			has_country_flag = became_subject
		}
	}

	immediate = {
		country_event = { id = origin.6065 days = 5 }
	}
}

country_event = { # Becoming a subject
	id = origin.6065
	title = origin.6065.name
	desc = origin.6065.desc

	picture = GFX_evt_fear_of_the_dark
	show_sound = evn_fc_disunity_origin

	is_triggered_only = yes
	trigger = {
		NOT = {
			has_country_flag = became_subject
		}
		any_planet_within_border = {
			has_planet_flag = fotd_seperatist_planet@root
			owner = {
				has_country_flag = fotd_seperatist_country@root
			}
		}
	}

	immediate = {
		set_country_flag = became_subject
		event_target:fotd_seperatist_planet@root = {
			save_event_target_as = fotd_seperatist_planet
		}
	}

	option = {
		name = origin.6065.a
		add_modifier = {
			modifier = fotd_disunity
			days = 1800
		}
	}
}

country_event = { # Got a subject
	id = origin.6070

	hide_window = yes

	is_triggered_only = yes
	trigger = {
		From = {
			NOR = {
				has_country_flag = got_a_subject
				is_same_species = root
			}
			any_planet_within_border = {
				has_planet_flag = fotd_seperatist_planet@prev
				owner = {
					has_country_flag = fotd_seperatist_country@prevprev
				}
			}
		}
	}

	immediate = {
		from = { country_event = { id = origin.6075 days = 5 } }
	}
}

country_event = {
	id = origin.6075
	title = origin.6075.name
	desc = origin.6075.desc

	picture = GFX_evt_fear_of_the_dark
	show_sound = evn_fc_disunity_origin

	is_triggered_only = yes

	immediate = {
		set_country_flag = got_a_subject
		event_target:fotd_seperatist_planet@root = {
			save_event_target_as = fotd_seperatist_planet
		}
	}

	option = {
		name = origin.6075.a
		if = {
			limit = {
				NOT = {
					has_modifier = fotd_refusal_to_work
				}
			}
			add_modifier = {
				modifier = fotd_refusal_to_work
				days = 3600
			}
		}
	}
}

country_event = { # Entered a War
	id = origin.6080

	hide_window = yes

	is_triggered_only = yes
	trigger = {
		NOR = {
			has_country_flag = had_war_declared_on
			from = {
				OR = {
					using_war_goal = {
						type = wg_fotd_really_bad_contact
						owner = attacker
					}
					using_war_goal = {
						type = wg_fotd_really_bad_contact
						owner = defender
					}
				}
			}
		}
		any_planet_within_border = {
			has_planet_flag = fotd_seperatist_planet@root
			owner = {
				has_country_flag = fotd_seperatist_country@root
			}
		}
	}
	immediate = {
		if = {
			limit = {
				from = { is_war_participant = { who = root side = attackers } }
				NOT = { has_country_flag = declared_war }
			}
			country_event = { id = origin.6085 }
		}
		else_if = {
			limit = {
				from = {
					is_war_participant = { who = root side = defenders }
					is_total_war = no
				}
				NOT = {
					has_country_flag = had_war_declared_on
				}
			}
			country_event = { id = origin.6090 }
		}
		else_if = {
			limit = {
				from = {
					is_war_participant = { who = root side = defenders }
					is_total_war = yes
				}
				NOT = {
					has_country_flag = had_total_war_declared_on
				}
			}
			country_event = { id = origin.6220 }
		}
	}
}

country_event = {
	id = origin.6085
	title = origin.6085.name
	desc = origin.6085.desc

	picture = GFX_evt_fear_of_the_dark
	show_sound = evn_fc_disunity_origin

	is_triggered_only = yes

	immediate = {
		set_country_flag = declared_war
		event_target:fotd_seperatist_planet@root = {
			save_event_target_as = fotd_seperatist_planet
		}
	}

	option = {
		name = origin.6085.a
		if = {
			limit = {
				NOT = {
					has_modifier = fotd_assited_shipyards
				}
			}
			add_modifier = {
				modifier = fotd_assited_shipyards
				days = 1800
			}
		}
	}
	option = {
		name = origin.6085.b
		add_modifier = {
			modifier = fotd_assisted_fleet
			days = 1800
		}
	}
	option = {
		name = origin.6085.c
		fromfrom = {
			random_defender = {
				limit = {
					is_war_leader = yes
				}
				save_event_target_as = defending_country
			}
		}
		add_intel = {
			who = event_target:defending_country
			amount = 30
		}
	}
	option = {
		name = origin.6085.d
		add_monthly_resource_mult = {
			resource = unity
			value = @tier2unityreward
			min = @tier2unitymin
			max = @tier2unitymax
		}
	}
}

country_event = {
	id = origin.6090
	title = origin.6090.name
	desc = origin.6090.desc

	picture = GFX_evt_fear_of_the_dark
	show_sound = evn_fc_disunity_origin

	is_triggered_only = yes

	immediate = {
		set_country_flag = had_war_declared_on
		event_target:fotd_seperatist_planet@root = {
			save_event_target_as = fotd_seperatist_planet
		}
	}

	option = {
		name = BATTLESTATIONS
		custom_tooltip = five_percent_xenophobe_tt
		hidden_effect = {
			while = {
				count = value:five_percent_species
				random_owned_pop = {
					limit = {
						NOT = {
							has_ethic = ethic_xenophobe
						}
					}
					pop_change_ethic = ethic_xenophobe
				}
			}
		}
	}
}

country_event = { # Cybernetic Tradition Pick
	id = origin.6095
	title = origin.6095.name
	desc = origin.6095.desc

	picture = GFX_evt_fear_of_the_dark
	show_sound = evn_fc_disunity_origin

	is_triggered_only = yes

	immediate = {
		event_target:fotd_seperatist_planet@root = {
			save_event_target_as = fotd_seperatist_planet
		}
	}

	option = {
		name = origin.6095.a
	}
}

country_event = { # Modular Cyberetics
	id = origin.6096
	title = origin.6096.name
	desc = origin.6096.desc

	picture = GFX_evt_fear_of_the_dark
	show_sound = evn_fc_disunity_origin

	is_triggered_only = yes

	trigger = {
		NOT = {
			has_country_flag = had_modular_cybernetics
		}
	}

	immediate = {
		event_target:fotd_seperatist_planet@root = {
			save_event_target_as = fotd_seperatist_planet
		}
		set_country_flag = had_modular_cybernetics
	}

	option = {
		name = origin.6096.a
		add_modifier = {
			modifier = fotd_terrified_outraged
			days = 3600
		}
	}
}

country_event = { # Syntheic Ascenion: Starts Tree
	id = origin.6099
	title = origin.6099.name
	desc = origin.6099.desc

	picture = GFX_evt_fear_of_the_dark
	show_sound = evn_fc_disunity_origin

	is_triggered_only = yes

	immediate = {
		event_target:fotd_seperatist_planet@root = {
			save_event_target_as = fotd_seperatist_planet
		}
	}

	option = {
		name = origin.6099.a
	}
}

country_event = { # Syntheic Ascenion: Turns into robot
	id = origin.6100
	title = origin.6100.name
	desc = origin.6100.desc

	picture = GFX_evt_fear_of_the_dark
	show_sound = evn_fc_disunity_origin

	is_triggered_only = yes

	immediate = {
		event_target:fotd_seperatist_planet@root = {
			save_event_target_as = fotd_seperatist_planet
		}
	}

	option = {
		name = origin.6100.a
		add_modifier = {
			modifier = fotd_terrified_outraged
			days = 3600
		}
	}
}

country_event = { # Psionic Ascenion: Start Tree
	id = origin.6105
	title = origin.6105.name
	desc = origin.6105.desc

	picture = GFX_evt_fear_of_the_dark
	show_sound = evn_fc_disunity_origin

	is_triggered_only = yes

	immediate = {
		event_target:fotd_seperatist_planet@root = {
			save_event_target_as = fotd_seperatist_planet
		}
	}

	option = {
		name = origin.6105.a
	}
}

country_event = { # Psionic Ascenion: Finish Tree
	id = origin.6110
	title = origin.6110.name
	desc = origin.6110.desc

	picture = GFX_evt_fear_of_the_dark
	show_sound = evn_fc_disunity_origin

	is_triggered_only = yes

	immediate = {
		event_target:fotd_seperatist_planet@root = {
			save_event_target_as = fotd_seperatist_planet
		}
	}

	option = {
		name = origin.6110.a
		add_modifier = {
			modifier = fotd_terrified_outraged
			days = 3600
		}
	}
}

country_event = { # Genetic Ascenion: Start Tree
	id = origin.6115
	title = origin.6115.name
	desc = origin.6115.desc

	picture = GFX_evt_fear_of_the_dark
	show_sound = evn_fc_disunity_origin

	is_triggered_only = yes

	immediate = {
		event_target:fotd_seperatist_planet@root = {
			save_event_target_as = fotd_seperatist_planet
		}
	}

	option = {
		name = origin.6115.a
	}
}

country_event = { # Genetic Ascenion: Finish
	id = origin.6120
	title = origin.6120.name
	desc = origin.6120.desc

	picture = GFX_evt_fear_of_the_dark
	show_sound = evn_fc_disunity_origin

	is_triggered_only = yes

	immediate = {
		event_target:fotd_seperatist_planet@root = {
			save_event_target_as = fotd_seperatist_planet
		}
	}

	option = {
		name = origin.6120.a
		add_modifier = {
			modifier = fotd_terrified_outraged
			days = 3600
		}
	}
}

country_event = { # Prethoryn Arrival
	id = origin.6125
	title = origin.6125.name
	desc = origin.6125.desc

	picture = GFX_evt_fear_of_the_dark
	show_sound = event_red_alert

	is_triggered_only = yes

	immediate = {
		event_target:fotd_seperatist_planet@root = {
			save_event_target_as = fotd_seperatist_planet
		}
	}

	option = {
		name = origin.6125.a
		if = {
			limit = {
				NOT = {
					has_modifier = fotd_unified_purpose
				}
			}
			add_modifier = {
				modifier = fotd_unified_purpose
				days = 1800
			}
		}
		if = {
			limit = {
				event_target:fotd_seperatist_planet.owner = {
					any_owned_fleet = {
						is_ship_class = shipclass_military
					}
				}
			}
			event_target:fotd_seperatist_planet.owner = {
				random_owned_fleet = {
					limit = {
						is_ship_class = shipclass_military
					}
					give_fleet = { controller = root days = 99999 }
				}
			}
		}
	}
}

country_event = { # Unbidden Arrival
	id = origin.6130
	title = origin.6125.name
	desc = origin.6125.desc

	picture = GFX_evt_fear_of_the_dark
	show_sound = event_red_alert

	is_triggered_only = yes

	immediate = {
		event_target:fotd_seperatist_planet@root = {
			save_event_target_as = fotd_seperatist_planet
		}
	}

	option = {
		name = origin.6125.a
		if = {
			limit = {
				NOT = {
					has_modifier = fotd_unified_purpose
				}
			}
			add_modifier = {
				modifier = fotd_unified_purpose
				days = 1800
			}
		}
		if = {
			limit = {
				event_target:fotd_seperatist_planet.owner = {
					any_owned_fleet = {
						is_ship_class = shipclass_military
					}
				}
			}
			event_target:fotd_seperatist_planet.owner = {
				random_owned_fleet = {
					limit = {
						is_ship_class = shipclass_military
					}
					give_fleet = { controller = root days = 99999 }
				}
			}
		}
	}
}

country_event = { # Contigency is here
	id = origin.6135
	title = origin.6125.name
	desc = origin.6125.desc

	picture = GFX_evt_fear_of_the_dark
	show_sound = event_red_alert

	is_triggered_only = yes

	immediate = {
		event_target:fotd_seperatist_planet@root = {
			save_event_target_as = fotd_seperatist_planet
		}
	}

	option = {
		name = origin.6125.a
		if = {
			limit = {
				NOT = {
					has_modifier = fotd_unified_purpose
				}
			}
			add_modifier = {
				modifier = fotd_unified_purpose
				days = 1800
			}
		}
		if = {
			limit = {
				event_target:fotd_seperatist_planet.owner = {
					any_owned_fleet = {
						is_ship_class = shipclass_military
					}
				}
			}
			event_target:fotd_seperatist_planet.owner = {
				random_owned_fleet = {
					limit = {
						is_ship_class = shipclass_military
					}
					give_fleet = { controller = root days = 99999 }
				}
			}
		}
	}
}

country_event = {
	id = origin.6136
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		event_target:fotd_seperatist_planet@root = {
			owner = {
				random_owned_fleet = {
					limit = {
						is_leased = yes
					}
					end_fleet_contract = {
						initiator = root
						reason = cancelled
					}
				}
			}
		}
	}
}
event = { #fotd Midgame
	id = origin.6140

	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_playable_country = {
			any_planet_within_border = {
				has_planet_flag = fotd_seperatist_planet@prev
				owner = {
					has_country_flag = fotd_seperatist_country@prevprev
				}
			}
		}
	}

	immediate = {
		every_playable_country = {
			limit = {
				any_planet_within_border = {
					has_planet_flag = fotd_seperatist_planet@prev
					owner = {
						has_country_flag = fotd_seperatist_country@prevprev
					}
				}
			}
			country_event = { id = origin.6145 days = 25 }
		}
	}
}

country_event = { # Mid game special project
	id = origin.6145
	title = origin.6145.name
	desc = origin.6145.desc

	picture = GFX_evt_egg_cracked
	show_sound = evn_fc_disunity_origin

	is_triggered_only = yes

	immediate = {
		random_planet_within_border = {
			limit = {
				has_planet_flag = fotd_seperatist_planet@root
			}
			solar_system = {
				random_system_planet = {
					limit = {
						has_planet_flag = divider_flag
					}
					save_event_target_as = fotd_divider
				}
			}
		}
	}

	option = {
		name = origin.6145.a
		enable_special_project = {
			name = "FOTD_CONFIRM_FINDINGS"
			location = event_target:fotd_divider
		}
	}
}

country_event = { # We have found them
	id = origin.6150
	title = origin.6150.name
	desc = origin.6150.desc

	picture = GFX_evt_fear_of_the_dark
	show_sound = evn_fc_disunity_origin

	is_triggered_only = yes
	location = event_target:hunter_system
	event_chain = fotd_chain

	immediate = {
		event_target:fotd_seperatist_planet@root = {
			save_event_target_as = fotd_seperatist_planet
		}
		hidden_effect = {
			owner = {
				random_system_within_border = {
					spawn_system = {
						min_distance = 5
						max_distance = 20
						max_jumps = 1
						initializer = "hunter_of_the_dark_system"
					}
					add_extra_hyperlane_to_spawned_system_effect = yes
				}
				last_created_system = {
					set_star_flag = hunter_system@root
					random_system_planet = {
						limit = {
							has_planet_flag = fotd_hunter
						}
						set_planet_flag = fotd_hunter@root
						create_species = {
							name = "NAME_fotd_Hunter_species"
							plural = "NAME_fotd_Hunter_plural"
							class = random_non_machine
							traits = random
							homeworld = this
						}
						create_country = {
							name = "NAME_fotd_Hunters"
							authority = random
							civics = {
								civic = civic_atmospheric_pollution
								civic = civic_increasing_urbanization
							}
							species = last_created_species
							ethos = {
								ethic = ethic_militarist
								ethic = ethic_fanatic_xenophobe
							}

							flag = random
							origin = origin_default_pre_ftl
							type = primitive
							effect = {
								set_country_flag = early_space_age
								set_pre_ftl_age = early_space_age
								set_country_flag = fotd_hunter@root
								set_country_flag = tech_frozen
								set_country_flag = fotd_hunter
							}
						}
						set_owner = last_created_country
						set_capital = yes

						remove_building = building_colony_shelter
						add_building = building_primitive_farm
						add_building = building_primitive_factory
						add_building = building_primitive_farm
						add_building = building_primitive_power_plant
						add_building = building_primitive_capital
						add_building = building_urban_dwellings
						remove_building = building_colony_shelter
						while = {
							count = 16
							create_pop = {
								species = last_created_species
							}
						}
					}
					save_event_target_as = hunter_system
				}
			}
		}
		begin_event_chain = {
			event_chain = "fotd_chain"
			target = this
		}
	}

	option = {
		name = origin.6150.a
		tooltip = {
			begin_event_chain = {
				event_chain = "fotd_chain"
				target = this
			}
		}
		create_point_of_interest = {
			id = fotd_hunter_poi
			name = "fotd_hunter_poi"
			desc = fotd_hunter_desc
			event_chain = fotd_chain
			location = event_target:hunter_system
		}
	}
}

ship_event = { # Entering hunter system
	id = origin.6155
	title = origin.6155.name
	desc = origin.6155.desc

	picture = GFX_evt_ruined_system
	show_sound = event_ghost_town

	is_triggered_only = yes

	location = solar_system
	event_chain = fotd_chain

	trigger = {
		solar_system = {
			any_system_planet = {
				has_planet_flag = fotd_hunter@root.owner
			}
		}
	}

	option = {
		name = origin.6155.a
		hidden_effect = {
			owner = { remove_point_of_interest = fotd_hunter_poi }
		}
	}
}

ship_event = { # Scanning hunter planet
	id = origin.6160
	title = origin.6160.name
	desc = origin.6160.desc

	picture = GFX_evt_fleet_from_surface
	show_sound = event_yellow_alert

	location = from
	event_chain = fotd_chain

	trigger = {
		from = {
			has_planet_flag = fotd_hunter@root.owner
		}
	}

	is_triggered_only = yes

	immediate = {
		solar_system = {
		 	random_system_planet = {
		 		limit = {
		 			is_moon = yes
		 		}
		 		set_planet_flag = fotd_moon@root.owner
		 	}
		}
	}
	option = {# Everything needs to die
		name = origin.6160.a
		custom_tooltip = origin.6160.a.tooltip
		owner = {
			add_modifier = { modifier = fotd_settled_differences }
			give_specimen = { key = last_fragment_fevor }
		}
		hidden_effect = {
			from = {
				every_owned_pop = {
					kill_pop = yes
				}
				change_pc = pc_nuked
				destroy_colony = yes
			}
			owner = {
				country_event = { id = origin.6165 days = 3 }
				country_event = { id = origin.6170 days = 13 }
			}
		}
		ai_chance = {
			weight = 10
			modifier = {
				add = 5
				owner = {
					num_rivals >= 3
				}
			}
			modifier = {
				factor = 2
				owner = {
					is_xenophobe = yes
				}
			}
			modifier = {
				factor = 0.01
				owner = {
					OR = {
						is_galactic_custodian = yes
						is_galactic_emperor = yes
					}
				}
			}
		}
	}
	option = {
		name = origin.6160.b
		custom_tooltip = origin.6160.c.tooltip
		hidden_effect = {
			owner = {
				country_event = { id = origin.6170 days = 13 }
			}
			from.owner = {
				set_country_flag = fevorian_enlighten@root
				country_event = { id = origin.6270 days = 360 }
			}
		}
		ai_chance = {
			weight = 10
			modifier = {
				add = 5
				owner = {
					OR = {
						has_federation = yes
						is_overlord = yes
					}
				}
			}
			modifier = {
				factor = 2
				owner = {
					is_part_of_galactic_council = yes
				}
			}
			modifier = {
				factor  = 2
				owner = {
					is_xenophile = yes
				}
			}
		}
	}
}

#Turns you into a purifier
country_event = {
	id = origin.6165
	title = origin.6165.name
	desc = origin.6165.desc

	show_sound = event_screams
	picture = GFX_evt_fear_of_the_dark
	show_sound = evn_fc_disunity_origin

	is_triggered_only = yes

	location = fromfrom
	event_chain = fotd_chain

	option = {
		allow = {
			is_galactic_custodian = no
			is_galactic_emperor = no
		}
		name = origin.6165.a
		icon = {
			icon = GFX_fanatic_purifier
			text = WILL_TURN_TO_PURIFIER
		}

		if = {
			limit = {
				is_megacorp = yes
			}
			hidden_effect = {
				if = {
					limit = {
						has_civic = civic_corporate_anglers
					}
					force_remove_civic = civic_corporate_anglers
					force_add_civic = civic_anglers
				}
				if = {
					limit = {
						has_civic = civic_corporate_machine_anglers
					}
					force_remove_civic = civic_corporate_machine_anglers
					force_add_civic = civic_machine_anglers
				}
			}
			change_government = {
				cooldown = no
				authority = auth_oligarchic
				remove_invalid_civics = yes
			}
		}
		clear_ethos = yes
		country_add_ethic = ethic_fanatic_xenophobe
		country_add_ethic = ethic_militarist
		force_add_civic = civic_fanatic_purifiers
		set_country_flag = dark_forest_achievement

		add_resource = { unity = 5000 }
		event_target:fotd_seperatist_planet@root = {
			owner = {
				every_owned_fleet = {
					set_owner = root
				}
			}
			set_owner = root
		}
		hidden_effect = {
			if = {
				limit = {
					has_civic = civic_barbaric_despoilers
				}
				force_remove_civic = civic_barbaric_despoilers
			}
			remove_xuracorp_trades = yes
			remove_riggan_trades = yes
			remove_muutagan_trades = yes
			if = {
				limit = {
					has_modifier = enclave_artist_patron
				}
				remove_modifier = enclave_artist_patron
			}
			if = {
				limit = {
					has_modifier = curator_insight
				}
				remove_modifier = curator_insight
			}
			if = {
				limit = {
					has_modifier = salvager_insight
				}
				remove_modifier = salvager_insight
			}
			every_playable_country = {
				limit = {
					exists = overlord
					overlord = {
						is_same_value = root
					}
					NOT = {
						species = {
							is_same_species = root.species
						}
					}
				}
				release_subject = yes
			}
			every_playable_country = {
				limit = {
					has_secret_fealty_with = root
					NOT = {
						species = {
							is_same_species = root.species
						}
					}
				}
				remove_secret_fealty = root
			}
			if = {
				limit = {
					exists = overlord
					NOT = {
						is_same_species = root.species
					}
				}
				release_subject = yes
			}
			every_envoy = {
				limit = {
					has_envoy_task = {
						task = improve_relations
					}
				}
				unassign_leader = this
			}
			every_playable_country = {
				limit = {
					NOT = {
						species = {
							is_same_species = root.species
						}
					}
				}
				end_all_treaties_with = root
			}
			remove_from_galactic_community = yes
		}
		ai_chance = {
			weight = 10
			modifier = {
				add = 5
				owner = {
					num_rivals >= 3
				}
			}
			modifier = {
				factor = 2
				owner = {
					is_xenophobe = yes
				}
			}
		}
	}

	option = {
		name = origin.6165.b
		add_resource = { unity = 5000 }
		ai_chance = {
			weight = 10
			modifier = {
				add = 5
				owner = {
					OR = {
						has_federation = yes
						is_overlord = yes
					}
				}
			}
			modifier = {
				factor = 2
				owner = {
					is_part_of_galactic_council = yes
				}
			}
			modifier = {
				factor = 2
				owner = {
					is_xenophile = yes
				}
			}
		}
	}
}

country_event = {
	id = origin.6170
	title = origin.6170.name
	desc = origin.6170.desc

	show_sound = event_red_alert
	picture = GFX_evt_crisis_declared

	location = fromfrom
	event_chain = fotd_chain

	is_triggered_only = yes
	trigger = {
		home_planet.owner = {
			is_same_value = root
		}
	}

	option = {
		name = origin.6170.a
		start_situation = {
			type = situation_last_gift
			target = root.home_planet
			effect = {
				set_situation_approach = approach_stop_the_bullet
			}
		}
	}
}

situation_event = {
	id = origin.6175
	title = origin.6175.name
	desc = origin.6175.desc

	show_sound = event_screams
	picture = GFX_evt_exploding_planet

	is_triggered_only = yes
	situation = this

	immediate = {
		target = {
			every_owned_pop = { kill_pop = yes }
			destroy_colony = yes
			change_pc = pc_shattered
			clear_deposits = yes
			add_deposit = d_alloys_10
		}
		owner = {
			random_planet_within_border = {
				limit = {
					has_planet_flag = fotd_seperatist_planet@root.owner
					owner = {
						has_country_flag = fotd_seperatist_country@root.owner
					}
				}
				set_owner = root
				set_capital = yes
			}
			end_event_chain = fotd_chain
		}
		event_target:fotd_seperatist_planet@owner = {
			save_event_target_as = fotd_seperatist_planet
		}
	}
	option = {
		name = DEVASTATING
	}
}

situation_event = {
	id = origin.6180
	title = origin.6180.name
	desc = origin.6180.desc

	show_sound = event_celebration
	picture = GFX_evt_crisis_defeated
	location = event_target:fevorian_moon
	is_triggered_only = yes
	situation = this
	trigger = {
		owner.home_planet.owner = {
			is_same_value = root.owner
		}
		has_situation_flag = deflecting_fields
		has_situation_flag = reversed_thrusters
		has_situation_flag = counter_shot
		has_situation_flag = controlled_shattering
	}

	option = {
		name = origin.6180.a
		owner = {
			end_event_chain = fotd_chain
		}
		random_system = {
			limit = {
				has_star_flag = hunter_system@root.owner
			}
			random_system_planet = {
				limit = {
					has_planet_flag = fotd_moon@root.owner
				}
				add_modifier = { modifier = ruined_mass_driver }
				add_deposit = d_engineering_10
				save_event_target_as = fevorian_moon
			}
		}
	}

	after = {
		destroy_situation = this
	}
}

situation_event = {
	id = origin.6185
	title = origin.6185.name
	desc = origin.6185.desc

	show_sound = event_red_alert
	picture = GFX_evt_ongoing_disaster

	is_triggered_only = yes
	situation = this

	immediate = {
		target = {
			solar_system = {
				random_system_planet = {
					limit = {
						has_planet_flag = divider_flag
					}
					save_event_target_as = fotd_divider
				}
				random_system_planet = {
					limit = {
						is_asteroid = yes
					}
					save_event_target_as = fotd_asteroid
				}
			}
		}
	}

	option = {
		name = origin.6185.a
		enable_special_project = {
			name = "FOTD_DEFLECTING_FIELDS"
			location = owner.home_planet
		}
		enable_special_project = {
			name = "FOTD_REVERSED_THRUSTERS"
			location = event_target:fotd_divider
		}
		enable_special_project = {
			name = "FOTD_COUNTER_SHOT"
			location = event_target:fotd_asteroid
		}
		enable_special_project = {
			name = "FOTD_CONTROLLED_SHATTERING"
			location = owner.home_planet
		}
	}
}

country_event = {
	id = origin.6186

	hide_window = yes
	is_triggered_only = yes

	immediate = {
		create_message = {
			type = MESSAGE_SLOWED_LAST_GIFT
			localization = MESSAGE_DEFLECTING_FIELDS
			days = 30
		}
		random_situation = {
			limit = {
				is_situation_type = situation_last_gift
			}
			set_situation_flag = deflecting_fields
		}
	}
}

country_event = {
	id = origin.6187

	hide_window = yes
	is_triggered_only = yes

	immediate = {
		create_message = {
			type = MESSAGE_SLOWED_LAST_GIFT
			localization = MESSAGE_REVERSED_THRUSTERS
			days = 30
		}
		random_situation = {
			limit = {
				is_situation_type = situation_last_gift
			}
			set_situation_flag = reversed_thrusters
		}
	}
}

country_event = {
	id = origin.6188

	hide_window = yes
	is_triggered_only = yes

	immediate = {
		create_message = {
			type = MESSAGE_SLOWED_LAST_GIFT
			localization = MESSAGE_COUNTER_SHOT
			days = 30
		}
		random_situation = {
			limit = {
				is_situation_type = situation_last_gift
			}
			set_situation_flag = counter_shot
		}
		event_target:fotd_asteroid = {
			remove_planet = yes
		}
	}
}

country_event = {
	id = origin.6189

	hide_window = yes
	is_triggered_only = yes

	immediate = {
		create_message = {
			type = MESSAGE_SLOWED_LAST_GIFT
			localization = MESSAGE_CONTROLLED_SHATTERING
			days = 30
		}
		random_situation = {
			limit = {
				is_situation_type = situation_last_gift
			}
			set_situation_flag = controlled_shattering
		}
	}
}

country_event = { # Signed Migration Pact
	id = origin.6200

	hide_window = yes

	is_triggered_only = yes
	trigger = {
		OR = {
			AND = {
				NOT = { has_country_flag = signed_migration_pact }
				any_planet_within_border = {
					has_planet_flag = fotd_seperatist_planet@root
					owner = {
						has_country_flag = fotd_seperatist_country@root
					}
				}
			}
			AND = {
				from = {
					NOT = { has_country_flag = signed_migration_pact }
					any_planet_within_border = {
						has_planet_flag = fotd_seperatist_planet@root.from
						owner = {
							has_country_flag = fotd_seperatist_country@root.from
						}
					}
				}
			}
		}
	}
	immediate = {
		from = {
			if = {
				limit = {
					NOT = {
						has_country_flag = signed_migration_pact
					}
					any_planet_within_border = {
						has_planet_flag = fotd_seperatist_planet@root.from
						owner = {
							has_country_flag = fotd_seperatist_country@root.from
						}
					}
				}
				country_event = {
					id = origin.6205
					days = 3
					scopes = { from = root }
				}
			}
		}
		if = {
			limit = {
				NOT = {
					has_country_flag = signed_migration_pact
				}
				any_planet_within_border = {
					has_planet_flag = fotd_seperatist_planet@root
					owner = {
						has_country_flag = fotd_seperatist_country@root
					}
				}
			}
			country_event = {
				id = origin.6205
				days = 3
				scopes = { from = from }
			}
		}
	}
}

country_event = {
	id = origin.6205
	title = origin.6205.name
	desc = origin.6205.desc

	picture = GFX_evt_fear_of_the_dark
	show_sound = evn_fc_disunity_origin

	is_triggered_only = yes

	immediate = {
		set_country_flag = signed_migration_pact
		event_target:fotd_seperatist_planet@root = {
			save_event_target_as = fotd_seperatist_planet
		}
	}

	option = {
		name = origin.6205.a
		if = {
			limit = {
				NOT = {
					has_modifier = fotd_refusal_to_work
				}
			}
			add_modifier = {
				modifier = fotd_refusal_to_work
				days = 3600
			}
		}
		from = {
			add_opinion_modifier = {
				who = root
				modifier = fotd_insulted_migration
			}
		}
	}
	option = {
		name = origin.6205.b
		from = {
			add_opinion_modifier = {
				who = root
				modifier = fotd_insulted_migration_no_apology
			}
		}
	}
}

#country_event = { # Gray Tempest
#	id = origin.6210
#	title = origin.6210.name
#	desc = origin.6210.desc
#
#	picture = GFX_evt_fear_of_the_dark
#
#	is_triggered_only = yes
#
#	option = {
#		name = origin.6210.a
#		if = {
#			limit = {
#				NOT = {
#					has_modifier = fotd_unified_stance
#				}
#			}
#			add_modifier = {
#				modifier = fotd_unified_stance
#				days = 1800
#			}
#		}
#	}
#}
#
#country_event = { # Khan
#	id = origin.6215
#	title = origin.6215.name
#	desc = origin.6215.desc
#
#	picture = GFX_evt_fear_of_the_dark
#
#	is_triggered_only = yes
#
#	option = {
#		name = origin.6215.a
#		if = {
#			limit = {
#				NOT = {
#					has_modifier = fotd_unified_stance
#				}
#			}
#			add_modifier = {
#				modifier = fotd_unified_stance
#				days = 1800
#			}
#		}
#	}
#}

country_event = { # Total War
	id = origin.6220
	title = origin.6220.name
	desc = origin.6220.desc

	picture = GFX_evt_fear_of_the_dark
	show_sound = event_red_alert

	is_triggered_only = yes

	immediate = {
		set_country_flag = had_total_war_declared_on
		event_target:fotd_seperatist_planet@root = {
			save_event_target_as = fotd_seperatist_planet
		}
	}

	option = {
		name = origin.6220.a
		if = {
			limit = {
				NOT = {
					has_modifier = fotd_unified_stance
				}
			}
			add_modifier = {
				modifier = fotd_unified_stance
				days = 1800
			}
		}
	}
	option = {
		name = origin.6220.b
		add_modifier = {
			modifier = fotd_unified_fleet
			days = 1800
		}
	}
	option = {
		name = origin.6220.c
		fromfrom = {
			random_attacker = {
				limit = {
					is_war_leader = yes
				}
				save_event_target_as = attacking_country
			}
		}
		add_intel = {
			who = event_target:attacking_country
			amount = 40
		}
	}
	option = {
		name = origin.6220.d
		add_monthly_resource_mult = {
			resource = unity
			value = @tier3unityreward
			min = @tier3unitymin
			max = @tier3unitymax
		}
	}
}

#Terraforming Situation Gatekeeper
situation_event = {
	id = origin.6225
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		target.space_owner = {
			has_origin = origin_fear_of_the_dark
			home_planet = {
				is_same_value = root.owner.home_planet
			}
		}
	}

	immediate = {
		switch = {
			trigger = current_stage
			stage_2 = {
				target.space_owner = {
					country_event = {
						id = origin.6230
					}
				}
			}
			stage_3 = {
				target.space_owner = {
					country_event = {
						id = origin.6235
					}
				}
			}
			stage_4 = {
				hidden_effect = { destroy_situation = this }
				target.space_owner = {
					country_event = {
						id = origin.6240
						scopes = { from = root.target }
					}
				}
			}
		}
	}
}
#Terraforming into prefered type but not perfect
country_event = {
	id = origin.6230
	title = origin.6230.name
	desc = origin.6230.desc

	picture = GFX_evt_fear_of_the_dark
	show_sound = evn_fc_disunity_origin

	is_triggered_only = yes

	immediate = {
		event_target:fotd_seperatist_planet@root = {
			save_event_target_as = fotd_seperatist_planet
		}
	}

	option = {
		name = origin.6230.a
		from.target = {
			switch = {
				trigger = is_planet_class
				pc_ocean = {
					if = {
						limit = {
							owner.species = {
								has_trait = trait_pc_desert_preference
							}
						}
						change_pc = pc_arid
					}
					else = {
						change_pc = pc_desert
					}
				}
				pc_tropical = {
					if = {
						limit = {
							owner.species = {
								has_trait = trait_pc_arctic_preference
							}
						}
						change_pc = pc_alpine
					}
					else = {
						change_pc = pc_arctic
					}
				}
				pc_desert = {
					if = {
						limit = {
							owner.species = {
								has_trait = trait_pc_ocean_preference
							}
						}
						change_pc = pc_tropical
					}
					else = {
						change_pc = pc_ocean
					}
				}
			}
		}
	}
}
#Terraforming into same as homeworld
country_event = {
	id = origin.6235
	title = origin.6235.name
	desc = origin.6235.desc

	picture = GFX_evt_fear_of_the_dark
	show_sound = event_mystic_reveal

	is_triggered_only = yes
	immediate = {
		event_target:fotd_seperatist_planet@root = {
			save_event_target_as = fotd_seperatist_planet
		}
	}
	option = {
		name = origin.6235.a
		from.target = {
			change_pc = from.owner.species
		}
	}
}
#Reaching Gaia
# from = root.target in the call from origin.6225, so from is the seperatist planet
country_event = {
	id = origin.6240
	title = origin.6240.name
	desc = {
		trigger = {
			home_planet = {
				is_starting_planet_type = no
			}
		}
		text = origin.6240.desc.changedhome
	}
	desc = {
		trigger = {
			home_planet = {
				is_starting_planet_type = yes
			}
		}
		text = origin.6240.desc.notchangedhome
	}


	picture = GFX_evt_fear_of_the_dark
	show_sound = evn_fc_disunity_origin

	is_triggered_only = yes

	trigger = {
		from.owner = {#Aquatic pops prefer Ocean worlds to Gaia
			NOR = {
				has_trait = trait_aquatic
				has_trait = trait_robot_aquatic
			}
		}
	}

	immediate = {
		event_target:fotd_seperatist_planet@root = {
			save_event_target_as = fotd_seperatist_planet
		}
	}

	option = {
		name = {
			trigger = {
				home_planet = {
					is_starting_planet_type = no
				}
			}
			text = origin.6240.a.changedhome
		}
		name = {
			trigger = {
				home_planet = {
					is_starting_planet_type = yes
				}
			}
			text = origin.6240.a.notchangedhome
		}
		from = {
			change_pc = pc_gaia
		}
	}
}
# Seperatist Yearly Update
event = {
	id = origin.6245
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_playable_country = {
			has_origin = origin_fear_of_the_dark
		}
		years_passed > 10
	}

	immediate = {
		every_playable_country = {
			limit = {
				has_origin = origin_fear_of_the_dark
				any_pre_ftl_within_border = {
					has_country_flag = fotd_seperatist_country@prev
				}
			}
			random_pre_ftl_within_border = {
				limit = {
					has_country_flag = fotd_seperatist_country@prev
				}
				country_event = { id = origin.6250 random = 200 scopes = { from = prev } }
				country_event = { id = origin.6253 scopes = { from = prev } }
			}
		}
	}
}

country_event = {
	id = origin.6250
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		from = {
			is_at_war = no
		}
		capital_scope.solar_system = {
			NOT = {
				any_fleet_in_system = {
					owner = {
						is_hostile_to = from
					}
				}
			}
		}
		NOT = {
			any_owned_fleet = {
				is_leased = yes
			}
		}
	}

	immediate = {
		if = {
			limit = {
				any_owned_fleet = {
					is_ship_class = shipclass_military
				}
			}
			random_owned_fleet = {
				limit = {
					is_ship_class = shipclass_military
				}
				delete_fleet = this
			}
		}
		if = {
			limit = {
				from = { NOT = { has_technology = tech_cloaking_2 } }
			}
			from = {
				create_fleet = {
					name = {
						key = NAME_fotd_seperatists_fleet
						variable_string = "[root.capital_scope.GetName]"
					}
					effect = {
						set_owner = root
						while = {
							count = value:fotd_seperatists_fleet_corvette_1
							create_ship = {
								name = ""
								design = NAME_fotd_corvette_1
							}
						}
						while = {
							count = value:fotd_seperatists_fleet_frigate_1
							create_ship = {
								name = ""
								design = NAME_fotd_frigate_1
							}
						}
						set_location = {
							target = root.capital_scope
							distance = 15
							angle = 300
						}
					}
				}
			}
		}
		else_if = {
			limit = {
				from = { NOT = { has_technology = tech_cloaking_3 } }
			}
			create_fleet = {
				name = {
					key = NAME_fotd_seperatists_fleet
					variable_string = "[root.capital_scope.GetName]"
				}
				effect = {
					set_owner = root
					while = {
						count = value:fotd_seperatists_fleet_corvette_2
						create_ship = {
							name = ""
							design = NAME_fotd_corvette_2
						}
					}
					while = {
						count = value:fotd_seperatists_fleet_frigate_2
						create_ship = {
							name = ""
							design = NAME_fotd_frigate_2
						}
					}
					while = {
						count = value:fotd_seperatists_fleet_destroyer_2
						create_ship = {
							name = ""
							design = NAME_fotd_destroyer_2
						}
					}
					set_location = {
						target = root.capital_scope
						distance = 15
						angle = 300
					}
				}
			}
		}
		else_if = {
			limit = {
				from = {
					NOR = {
						has_technology = tech_cloaking_psi
						has_technology = tech_cloaking_dark_matter
					}
				}
			}
			create_fleet = {
				name = {
					key = NAME_fotd_seperatists_fleet
					variable_string = "[root.capital_scope.GetName]"
				}
				effect = {
					set_owner = root
					while = {
						count = value:fotd_seperatists_fleet_corvette_3
						create_ship = {
							name = ""
							design = NAME_fotd_corvette_3
						}
					}
					while = {
						count = value:fotd_seperatists_fleet_frigate_3
						create_ship = {
							name = ""
							design = NAME_fotd_frigate_3
						}
					}
					while = {
						count = value:fotd_seperatists_fleet_destroyer_3
						create_ship = {
							name = ""
							design = NAME_fotd_destroyer_3
						}
					}
					while = {
						count = value:fotd_seperatists_fleet_cruiser_3
						create_ship = {
							name = ""
							design = NAME_fotd_cruiser_3
						}
					}
					set_location = {
						target = root.capital_scope
						distance = 15
						angle = 300
					}
				}
			}
		}
		else = {
			create_fleet = {
				name = {
					key = NAME_fotd_seperatists_fleet
					variable_string = "[root.capital_scope.GetName]"
				}
				effect = {
					set_owner = root
					while = {
						count = value:fotd_seperatists_fleet_corvette_3
						create_ship = {
							name = ""
							design = NAME_fotd_corvette_4
						}
					}
					while = {
						count = value:fotd_seperatists_fleet_frigate_3
						create_ship = {
							name = ""
							design = NAME_fotd_frigate_4
						}
					}
					while = {
						count = value:fotd_seperatists_fleet_destroyer_3
						create_ship = {
							name = ""
							design = NAME_fotd_destroyer_4
						}
					}
					while = {
						count = value:fotd_seperatists_fleet_cruiser_3
						create_ship = {
							name = ""
							design = NAME_fotd_cruiser_4
						}
					}
					set_location = {
						target = root.capital_scope
						distance = 15
						angle = 300
					}
				}
			}
		}
		if = {
			limit = {
				any_owned_leader = {
					has_leader_flag = fotd_patrol_admiral
				}
			}
			random_owned_leader = {
				limit = {
					has_leader_flag = fotd_patrol_admiral
				}
				save_event_target_as = fotd_patrol_admiral_target
			}
		}
		else = {
			create_leader = {
				class = commander
				species = root.species
				skill = 5
			}
			last_created_leader = {
				add_trait_no_notify = leader_trait_fotd_commander
				save_event_target_as = fotd_patrol_admiral_target
				set_leader_flag = fotd_patrol_admiral
			}
		}
		last_created_fleet = {
			set_owner = root
			set_aggro_range = 1000
			set_leader = event_target:fotd_patrol_admiral_target
			fleet_event = {
				id = origin.6251
				days = 100
			}
			queue_actions = {
				find_closest_planet = {
					trigger = {
						id = fotd.patrol.1@root
						has_planet_flag = divider_flag
					}
					found_planet = {
						move_to = this
						orbit_planet = this
						wait = {
							duration = 100
						}
					}
				}
				find_closest_planet  = {
					trigger = {
						id = fotd.patrol.2@root
						is_star = yes
					}
					found_planet = {
						move_to = this
						orbit_planet = this
						wait = {
							duration = 80
						}
					}
				}
				find_closest_planet  = {
					trigger = {
						id = fotd.patrol.3@root
						has_planet_flag = haven_flag
					}
					found_planet = {
						move_to = this
						orbit_planet = this
						wait = {
							duration = 10000
						}
					}
				}
			}
		}
		if = {
			limit = {
				from = {
					NOT = { has_country_flag = had_seperatist_fleet_toast }
				}
			}
			from = {
				country_event = { id = origin.6260 days = 5 }
			}
		}
	}
}

fleet_event = {
	id = origin.6251
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		set_cloaking_active = yes
		fleet_event = {
			id = origin.6252
			days = 100
		}
	}
}

fleet_event = {
	id = origin.6252
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		set_cloaking_active = no
		fleet_event = {
			id = origin.6251
			days = 100
		}
	}
}
country_event = {
	id = origin.6253
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		capital_scope = {
			export_trigger_value_to_variable = {
				trigger = num_pops
				variable = seperatist_pops
			}
			change_variable = { #Makes it so that they are at least always 5 pops behind the player
				which = seperatist_pops
				value = 5
			}
		}
		home_planet = {
			export_trigger_value_to_variable = {
				trigger = num_pops
				variable = fotd_pops
			}
		}
		if = {
			limit = {
				check_variable_arithmetic = {
					which = capital_scope.seperatist_pops
					value < home_planet.fotd_pops
				}
			}
			capital_scope = {
				create_pop = {
					species = root.species
				}
				if = {
					limit = {
						NOT = { is_variable_set = added_pops }
					}
					set_variable = {
						which = added_pops
						value = 1
					}
				}
				else = {
					change_variable = {
						which = added_pops
						value = 1
					}
				}
				if = { #every 3 pops we try to add a building or district
					limit = {
						check_variable = {
							which = added_pops
							value >= 3
						}
					}
					if = {
						limit = {
							free_building_slots > 0
						}
						random_list = {
							1 = {
								modifier = {
									factor = 0
									has_building = building_foundry_1
								}
								add_building = building_foundry_1
							}
							1 = {
								modifier = {
									factor = 0
									has_building = building_factory_1
								}
								add_building = building_factory_1
							}
							1 = {
								modifier = {
									factor = 0
									has_building = building_clinic
								}
								add_building = building_foundry_1
							}
							5 = {
								modifier = {
									factor = 0
									has_building = building_refinery
								}
								add_building = building_refinery
							}
							1 = {
								add_building = building_research_lab_1
							}
						}
					}
					else_if = {
						limit = {
							free_district_slots > 0
						}
						random_list = {
							2 = {
								add_district = district_city
							}
							1 = {
								add_district = district_industrial
							}
							1 = {
								modifier = {
									factor = 0
									num_free_districts = {
										type = district_farming
										value = 0
									}
								}
								modifier = {
									factor = 0
									owner = {
										is_lithoid_empire = yes
									}
								}
								add_district = district_farming
							}
							1 = {
								modifier = {
									factor = 0
									num_free_districts = {
										type = district_mining
										value = 0
									}
								}
								modifier = {
									factor = 0
									from = {
										is_catalytic_empire = yes
									}
								}
								add_district = district_mining
							}
							1 = {
								modifier = {
									factor = 0
									num_free_districts = {
										type = district_generator
										value = 0
									}
								}
								add_district = district_generator
							}
						}
					}
					else_if = {
						limit = {
							count_deposits = {
								category = deposit_cat_blockers_natural
								count > 0
							}
						}
						clear_blockers = yes
					}
					set_variable = { #reset the counter to 0
						which = added_pops
						value = 0
					}
				}
			}
		}
		capital_scope = { clear_variable = seperatist_pops }
		from.home_planet = { clear_variable = fotd_pops }
	}
}

fleet_event = {
	id = origin.6255
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		from = {
			has_star_flag = fotd_system
			exists = owner
			owner = {
				is_hostile = root.owner
				has_origin = origin_fear_of_the_dark
			}
			any_fleet_in_system = {
				owner = { is_country_type = primitive }
			}
		}
	}

	immediate = {
		from = {
			random_fleet_in_system = {
				limit = {
					owner = { is_country_type = primitive }
				}
				owner = {
					set_hostile = root.owner
					establish_communications_no_message = root.owner
				}
			}
		}
	}
}

country_event = {
	id = origin.6256
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			has_origin = origin_fear_of_the_dark
			AND = {
				exists = from
				from = {
					has_origin = origin_fear_of_the_dark
				}
			}
		}
	}

	immediate = {
		if = {
			limit = {
				has_origin = origin_fear_of_the_dark
				event_target:fotd_seperatist_planet@root = {
					exists = owner
				}
			}
			event_target:fotd_seperatist_planet@root = {
				owner = {
					set_faction_hostility = {
						target = from
						set_hostile = no
						set_neutral = yes
						set_friendly = no
					}
				}
			}
		}
		else = {
			event_target:fotd_seperatist_planet@from = {
				owner = {
					set_faction_hostility = {
						target = root
						set_hostile = no
						set_neutral = yes
						set_friendly = no
					}
				}
			}
		}
	}
}

country_event = {
	id = origin.6260
	title = origin.6260.name
	desc = origin.6260.desc
	picture = GFX_evt_fear_of_the_dark
	show_sound = evn_fc_disunity_origin
	is_triggered_only = yes

	location = event_target:fotd_seperatist_planet

	immediate = {
		set_country_flag = had_seperatist_fleet_toast
		event_target:fotd_seperatist_planet@root = {
			save_event_target_as = fotd_seperatist_planet
		}
	}

	option = {
		name = ACKNOWLEDGED
	}
}

country_event = {
	id = origin.6265
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		has_modifier = fotd_settled_differences
		from = {
			species = { is_same_species = root.species }
		}
	}

	immediate = {
		random_list = { #70% of the time leader doesn't get trait
			70 = {}
			30 = {
				from = {
					switch = {
						trigger = leader_class
						commander = { add_trait = leader_trait_fotd_commander }
						scientist = { add_trait = leader_trait_fotd_scientist }
					}
				}
			}
		}
	}
}

country_event = {
	id = origin.6270
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				capital_scope = {
					has_observation_outpost = yes
					observation_outpost_owner = {
						has_origin = origin_fear_of_the_dark
					}
				}
				has_country_flag = fotd_hunter@capital_scope.observation_outpost_owner
				is_xenophobe = no
			}
			capital_scope.observation_outpost_owner = {
				country_event = { id = origin.6275 }
			}
		}
		else = {
			country_event = { id = origin.6270 days = 360 }
		}
	}
}

country_event = {
	id = origin.6275
	title = origin.6275.name
	desc = origin.6275.desc

	is_triggered_only = yes

	diplomatic = yes
	picture_event_data = {
		portrait = from
		planet_background = from
		graphical_culture = from
		city_level = from
		room = from.ruler
	}

	immediate = {
		from = {
			set_awareness = 100
		}
	}

	option = { #We can work something out
		name = origin.6275.a
		add_modifier = {
			modifier = fotd_triumviri
		}
		give_specimen = { key = fevorian_blueprints }
		from.capital_scope = {
			set_owner = root
			hidden_effect = {
				observation_outpost = {
					dismantle = yes
				}
			}
		}
	}
	option = { #You are free to do so on your own
		name = origin.6275.b
		custom_tooltip = origin.6275.b.tt
		from = {
			add_opinion_modifier = {
				modifier = opinion_fotd_allowed_exploration
				who = root
			}
		}
		hidden_effect = {
			from = {
				set_country_flag = primitives_can_into_space
				set_country_type = default
				change_country_flag = random
				set_species_graphical_culture = yes
				change_government = {
					authority = random
					civics = random
				}
				copy_techs_from = {
					target = root
					except = {
						# Horizon Signal
						tech_akx_worm_1
						tech_akx_worm_2
						tech_akx_worm_3
					}
				}
				add_resource = { minerals = 10000 }
				add_resource = { energy = 10000 }
				add_resource = { food = 3000 }
				add_resource = { consumer_goods = 3000 }
				add_resource = { alloys = 7000 }
				add_resource = { influence = 1000 }
				add_resource = { unity = 27000 }
				if = {
					limit = {
						has_technology = tech_destroyers
					}
					create_fleet = {
						effect = {
							set_owner = prev
							while = {
								count = 8
								create_ship = {
									name = random
									random_existing_design = destroyer
									graphical_culture = prev
								}
							}
							set_location = {
								target = prev.capital_scope
								distance = 10
								angle = random
							}
						}
					}
				}
				if = {
					limit = {
						has_technology = tech_cruisers
					}
					create_fleet = {
						effect = {
							set_owner = prev
							while = {
								count = 6
								create_ship = {
									name = random
									random_existing_design = cruiser
									graphical_culture = prev
								}
							}
							set_location = {
								target = prev.capital_scope
								distance = 10
								angle = random
							}
						}
					}
				}
				if = {
					limit = {
						has_technology = tech_battleships
					}
					create_fleet = {
						effect = {
							set_owner = prev
							while = {
								count = 2
								create_ship = {
									name = random
									random_existing_design = battleship
									graphical_culture = prev
								}
							}
							set_location = {
								target = prev.capital_scope
								distance = 10
								angle = random
							}
						}
					}
				}
				create_fleet = {
					effect = {
						set_owner = prev
						while = {
							count = 10
							create_ship = {
								name = random
								random_existing_design = corvette
								graphical_culture = prev
							}
						}
					}
				}
				capital_scope = {
					observation_outpost = {
						dismantle = yes
					}
					clear_blockers = yes
					remove_all_buildings = yes
					generate_start_buildings_and_districts = yes
					solar_system.starbase = {
						set_owner = root.from
					}
				}
			}
		}
	}
	option = { #Stay on your rock
		trigger = {
			OR = {
				has_ethic = ethic_xenophobe
				has_ethic = ethic_fanatic_xenophobe
			}
		}
		name = origin.6275.c
		custom_tooltip = origin.6275.c.tt
		add_resource = { unity = 20000 }
		hidden_effect = {
			from = {
				remove_country_flag = fotd_hunter@root
			}
		}
	}
}

# From = system
# FromFrom = country (new owner)
# This = country (previous owner)
country_event = { #Seperatists would rather die than give you their planet
	id = origin.6280
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_origin = origin_fear_of_the_dark
		exists = fromfrom
		fromfrom = {
			OR = {
				is_country_type = default
				is_country_type = awakened_fallen_empire
			}
		}
		from = {
			any_system_planet = {
				has_owner = yes
				owner = {
					has_country_flag = fotd_seperatist_country@root
				}
			}
		}
		NOT = { is_same_species = fromfrom } #they wont nuke themselves if the invaders is the same species
	}

	immediate = {
		from = {
			random_system_planet = {
				limit = {
					has_planet_flag = fotd_seperatist_planet@root
				}
				every_owned_pop = {
					kill_pop = yes
				}
				change_pc = pc_nuked
				destroy_colony = yes
			}
		}
	}
}
